export const assignPreviewFieldsToAggregateDraftInputs = {
    "description": "# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서의 등록, ISBN 검증, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 등 도서 개체의 라이프사이클과 메타데이터를 관리한다. 도서 상태 변경 이벤트를 발행하여 대출/반납 등의 프로세스와 연동된다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailed\n- BookStatusChanged\n- BookDisposed\n- BookDisposalFailed\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"사서\",\n  \"level\": 1,\n  \"description\": \"사서가 새로운 도서를 도서관에 등록함. 입력 정보(도서명, ISBN, 저자, 출판사, 카테고리)가 모두 검증되고, ISBN 중복과 형식이 확인됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리, 중복 불가)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리(소설/비소설/학술/잡지)\"\n  ],\n  \"outputs\": [\n    \"도서 상태: '대출가능'\",\n    \"도서 목록에 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailed\",\n  \"displayName\": \"도서 등록 실패됨\",\n  \"actor\": \"사서\",\n  \"level\": 2,\n  \"description\": \"도서 등록 과정에서 ISBN 중복 또는 형식 오류 등으로 인해 도서 등록이 거부됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(형식 오류 또는 중복)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\"\n  ],\n  \"outputs\": [\n    \"등록 실패 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서관리시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 변경됨.\",\n  \"inputs\": [\n    \"이전 도서 상태\",\n    \"상태 변경 트리거 이벤트\"\n  ],\n  \"outputs\": [\n    \"도서의 상태 정보 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDisposed\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"사서\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실로 인해 사서에 의해 폐기 처리됨. 폐기 후 해당 도서는 대출 불가.\",\n  \"inputs\": [\n    \"도서 식별 정보\",\n    \"폐기 사유\"\n  ],\n  \"outputs\": [\n    \"도서 상태: '폐기'\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookDisposalFailed\",\n  \"displayName\": \"도서 폐기 실패됨\",\n  \"actor\": \"사서\",\n  \"level\": 5,\n  \"description\": \"이미 폐기된 도서거나 대출 중인 도서를 폐기하려고 시도할 때, 폐기 요청이 거부됨.\",\n  \"inputs\": [\n    \"도서 식별 정보\",\n    \"현재 도서 상태\"\n  ],\n  \"outputs\": [\n    \"폐기 실패 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### BookManagementToLoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 도서 상태 변경(등록, 폐기 등) 이벤트를 대출/반납 프로세스에서 구독하여 실시간으로 업무에 반영해야 하기 때문이며, 컨텍스트 간 결합도를 최소화하기 위해 Pub/Sub 방식을 선택했다.\n- **Interaction Pattern**: 도서 관리에서 상태 변경 이벤트 발생 시, 대출/반납 프로세스는 해당 이벤트를 구독하여 도서의 대출 가능 여부 등을 동기화한다.",
    "aggregateDrafts": [
        {
            "name": "Book",
            "alias": "도서"
        },
        {
            "name": "BookStatusHistory",
            "alias": "도서상태변경이력"
        }
    ],
    "generatorKey": "assignPreviewFieldsToAggregateDraft"
}
export const aggregateDraftScenarios = {
    "libraryApplication": {
        "selectedStructureOption": {
            "boundedContexts": [
                {
                    "name": "LibraryBookManagement",
                    "alias": "도서 관리",
                    "importance": "Core Domain",
                    "complexity": 0.8,
                    "differentiation": 0.9,
                    "implementationStrategy": "Rich Domain Model",
                    "aggregates": [
                        {
                            "name": "Book",
                            "alias": "도서"
                        },
                        {
                            "name": "BookStatusHistory",
                            "alias": "도서 상태 이력"
                        }
                    ],
                    "events": [
                        "BookRegistered",
                        "BookRegistrationFailedDueToDuplicateISBN",
                        "BookStatusChanged",
                        "BookDiscarded"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                        },
                        {
                            "type": "userStory",
                            "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);"
                        }
                    ],
                    "role": "도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다."
                },
                {
                    "name": "LoanAndReservation",
                    "alias": "대출/예약/반납 관리",
                    "importance": "Core Domain",
                    "complexity": 0.85,
                    "differentiation": 0.9,
                    "implementationStrategy": "Rich Domain Model",
                    "aggregates": [
                        {
                            "name": "Loan",
                            "alias": "대출"
                        },
                        {
                            "name": "Reservation",
                            "alias": "예약"
                        },
                        {
                            "name": "Member",
                            "alias": "회원"
                        }
                    ],
                    "events": [
                        "LoanApplied",
                        "LoanApplicationFailedBookNotAvailable",
                        "LoanCompleted",
                        "ReservationApplied",
                        "BookReturned",
                        "ReturnCompleted",
                        "LoanExtended",
                        "LoanExtensionFailedDueToReservation",
                        "LoanOverdueDetected"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해."
                        },
                        {
                            "type": "userStory",
                            "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                        },
                        {
                            "type": "userStory",
                            "text": "'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해."
                        },
                        {
                            "type": "userStory",
                            "text": "대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해."
                        },
                        {
                            "type": "userStory",
                            "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);"
                        }
                    ],
                    "role": "회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다."
                },
                {
                    "name": "reservation-notification",
                    "alias": "예약 및 알림 서비스",
                    "importance": "Generic Domain",
                    "complexity": 0.6,
                    "differentiation": 0.2,
                    "implementationStrategy": "PBC: reservation-notification",
                    "aggregates": [],
                    "events": [],
                    "requirements": [
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);"
                        },
                        {
                            "type": "DDL",
                            "text": "-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);"
                        }
                    ],
                    "role": "PBC에서 제공하는 예약 및 알림 서비스를 그대로 활용한다. 대출 예약/반납/연체 등 관련 알림 기능을 지원하며, 도메인 고유의 로직은 없다."
                }
            ],
            "relations": [
                {
                    "name": "도서 상태 변경 Pub/Sub",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "LoanAndReservation",
                        "alias": "대출/예약/반납 관리"
                    },
                    "downStream": {
                        "name": "LibraryBookManagement",
                        "alias": "도서 관리"
                    }
                },
                {
                    "name": "예약/알림 연동 Pub/Sub",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "LoanAndReservation",
                        "alias": "대출/예약/반납 관리"
                    },
                    "downStream": {
                        "name": "reservation-notification",
                        "alias": "예약 및 알림 서비스"
                    }
                },
                {
                    "name": "도서 상태 알림 Pub/Sub",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "LibraryBookManagement",
                        "alias": "도서 관리"
                    },
                    "downStream": {
                        "name": "reservation-notification",
                        "alias": "예약 및 알림 서비스"
                    }
                }
            ],
            "thoughts": "먼저, PBC 매칭 규칙을 최우선 적용하여 알림 및 예약 관련 기능은 reservation-notification PBC를 사용하도록 별도의 Generic Domain으로 분리했다. 이는 조직의 인프라 자원 활용과 범용적 도메인 복잡도를 낮추기 위한 결정이었다. \n\n도메인 복잡도 및 value stream 기준으로, 도서 관리(등록, 상태 관리 등)와 대출/예약/반납 프로세스는 서로 강한 응집도를 가지며, 프로세스와 데이터가 밀접하게 연결되어 있으나, 도서 상태/정보의 라이프사이클과 회원의 대출/예약 라이프사이클은 명확히 구분된다. 그래서 '도서 관리'와 '대출/예약/반납 관리'를 각각 Core Domain으로 분리했다. 두 도메인은 이벤트(도서 상태 변경 등)를 통해 느슨하게 연동한다. \n\n프로세스 흐름상 회원의 모든 대출/예약/반납 액션은 LoanAndReservation(대출/예약/반납 관리)에서 집중적으로 처리하고, 도서의 마스터 정보와 상태 변화는 LibraryBookManagement(도서 관리)에서 책임진다. 각 도메인은 해당 역할에서 발생하는 이벤트(상태 변경, 대출 완료, 반납 등)를 Pub/Sub으로 발행함으로써 상호 의존성을 줄였다. \n\n또한, 예약 및 알림 PBC는 Generic Domain이므로, 다른 도메인들의 이벤트를 받아 알림을 처리하고, 이를 Pub/Sub으로 연결했다. 이렇게 조직/인프라 정책(PBC 우선 활용), 도메인 복잡도(역할 분리), 프로세스(Value Stream) 중심으로 Bounded Context를 구분하였다.",
            "explanations": [
                {
                    "sourceContext": "대출/예약/반납 관리",
                    "targetContext": "도서 관리",
                    "relationType": "Pub/Sub",
                    "reason": "도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.",
                    "interactionPattern": "대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다."
                },
                {
                    "sourceContext": "대출/예약/반납 관리",
                    "targetContext": "예약 및 알림 서비스",
                    "relationType": "Pub/Sub",
                    "reason": "알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.",
                    "interactionPattern": "대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                },
                {
                    "sourceContext": "도서 관리",
                    "targetContext": "예약 및 알림 서비스",
                    "relationType": "Pub/Sub",
                    "reason": "도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.",
                    "interactionPattern": "도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                }
            ],
            "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
            "currentGeneratedLength": 4773
        },
        "resultDevideBoundedContext": {
            "도메인 복잡도 분리+프로세스(value stream) 기반 분리": {
                "boundedContexts": [
                    {
                        "name": "LibraryBookManagement",
                        "alias": "도서 관리",
                        "importance": "Core Domain",
                        "complexity": 0.8,
                        "differentiation": 0.9,
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "Book",
                                "alias": "도서"
                            },
                            {
                                "name": "BookStatusHistory",
                                "alias": "도서 상태 이력"
                            }
                        ],
                        "events": [
                            "BookRegistered",
                            "BookRegistrationFailedDueToDuplicateISBN",
                            "BookStatusChanged",
                            "BookDiscarded"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                            },
                            {
                                "type": "userStory",
                                "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);"
                            }
                        ],
                        "role": "도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다."
                    },
                    {
                        "name": "LoanAndReservation",
                        "alias": "대출/예약/반납 관리",
                        "importance": "Core Domain",
                        "complexity": 0.85,
                        "differentiation": 0.9,
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "Loan",
                                "alias": "대출"
                            },
                            {
                                "name": "Reservation",
                                "alias": "예약"
                            },
                            {
                                "name": "Member",
                                "alias": "회원"
                            }
                        ],
                        "events": [
                            "LoanApplied",
                            "LoanApplicationFailedBookNotAvailable",
                            "LoanCompleted",
                            "ReservationApplied",
                            "BookReturned",
                            "ReturnCompleted",
                            "LoanExtended",
                            "LoanExtensionFailedDueToReservation",
                            "LoanOverdueDetected"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해."
                            },
                            {
                                "type": "userStory",
                                "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                            },
                            {
                                "type": "userStory",
                                "text": "'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해."
                            },
                            {
                                "type": "userStory",
                                "text": "대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해."
                            },
                            {
                                "type": "userStory",
                                "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);"
                            }
                        ],
                        "role": "회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다."
                    },
                    {
                        "name": "reservation-notification",
                        "alias": "예약 및 알림 서비스",
                        "importance": "Generic Domain",
                        "complexity": 0.6,
                        "differentiation": 0.2,
                        "implementationStrategy": "PBC: reservation-notification",
                        "aggregates": [],
                        "events": [],
                        "requirements": [
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);"
                            },
                            {
                                "type": "DDL",
                                "text": "-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);"
                            }
                        ],
                        "role": "PBC에서 제공하는 예약 및 알림 서비스를 그대로 활용한다. 대출 예약/반납/연체 등 관련 알림 기능을 지원하며, 도메인 고유의 로직은 없다."
                    }
                ],
                "relations": [
                    {
                        "name": "도서 상태 변경 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LoanAndReservation",
                            "alias": "대출/예약/반납 관리"
                        },
                        "downStream": {
                            "name": "LibraryBookManagement",
                            "alias": "도서 관리"
                        }
                    },
                    {
                        "name": "예약/알림 연동 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LoanAndReservation",
                            "alias": "대출/예약/반납 관리"
                        },
                        "downStream": {
                            "name": "reservation-notification",
                            "alias": "예약 및 알림 서비스"
                        }
                    },
                    {
                        "name": "도서 상태 알림 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LibraryBookManagement",
                            "alias": "도서 관리"
                        },
                        "downStream": {
                            "name": "reservation-notification",
                            "alias": "예약 및 알림 서비스"
                        }
                    }
                ],
                "thoughts": "먼저, PBC 매칭 규칙을 최우선 적용하여 알림 및 예약 관련 기능은 reservation-notification PBC를 사용하도록 별도의 Generic Domain으로 분리했다. 이는 조직의 인프라 자원 활용과 범용적 도메인 복잡도를 낮추기 위한 결정이었다. \n\n도메인 복잡도 및 value stream 기준으로, 도서 관리(등록, 상태 관리 등)와 대출/예약/반납 프로세스는 서로 강한 응집도를 가지며, 프로세스와 데이터가 밀접하게 연결되어 있으나, 도서 상태/정보의 라이프사이클과 회원의 대출/예약 라이프사이클은 명확히 구분된다. 그래서 '도서 관리'와 '대출/예약/반납 관리'를 각각 Core Domain으로 분리했다. 두 도메인은 이벤트(도서 상태 변경 등)를 통해 느슨하게 연동한다. \n\n프로세스 흐름상 회원의 모든 대출/예약/반납 액션은 LoanAndReservation(대출/예약/반납 관리)에서 집중적으로 처리하고, 도서의 마스터 정보와 상태 변화는 LibraryBookManagement(도서 관리)에서 책임진다. 각 도메인은 해당 역할에서 발생하는 이벤트(상태 변경, 대출 완료, 반납 등)를 Pub/Sub으로 발행함으로써 상호 의존성을 줄였다. \n\n또한, 예약 및 알림 PBC는 Generic Domain이므로, 다른 도메인들의 이벤트를 받아 알림을 처리하고, 이를 Pub/Sub으로 연결했다. 이렇게 조직/인프라 정책(PBC 우선 활용), 도메인 복잡도(역할 분리), 프로세스(Value Stream) 중심으로 Bounded Context를 구분하였다.",
                "explanations": [
                    {
                        "sourceContext": "대출/예약/반납 관리",
                        "targetContext": "도서 관리",
                        "relationType": "Pub/Sub",
                        "reason": "도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.",
                        "interactionPattern": "대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다."
                    },
                    {
                        "sourceContext": "대출/예약/반납 관리",
                        "targetContext": "예약 및 알림 서비스",
                        "relationType": "Pub/Sub",
                        "reason": "알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.",
                        "interactionPattern": "대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                    },
                    {
                        "sourceContext": "도서 관리",
                        "targetContext": "예약 및 알림 서비스",
                        "relationType": "Pub/Sub",
                        "reason": "도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.",
                        "interactionPattern": "도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                    }
                ],
                "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "currentGeneratedLength": 4773
            }
        },
        "boundedContextVersion": {
            "data": {
                "boundedContexts": [
                    {
                        "name": "LibraryBookManagement",
                        "alias": "도서 관리",
                        "importance": "Core Domain",
                        "complexity": 0.8,
                        "differentiation": 0.9,
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "Book",
                                "alias": "도서"
                            },
                            {
                                "name": "BookStatusHistory",
                                "alias": "도서 상태 이력"
                            }
                        ],
                        "events": [
                            "BookRegistered",
                            "BookRegistrationFailedDueToDuplicateISBN",
                            "BookStatusChanged",
                            "BookDiscarded"
                        ],
                        "requirements": [],
                        "role": "도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다."
                    },
                    {
                        "name": "LoanAndReservation",
                        "alias": "대출/예약/반납 관리",
                        "importance": "Core Domain",
                        "complexity": 0.85,
                        "differentiation": 0.9,
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "Loan",
                                "alias": "대출"
                            },
                            {
                                "name": "Reservation",
                                "alias": "예약"
                            },
                            {
                                "name": "Member",
                                "alias": "회원"
                            }
                        ],
                        "events": [
                            "LoanApplied",
                            "LoanApplicationFailedBookNotAvailable",
                            "LoanCompleted",
                            "ReservationApplied",
                            "BookReturned",
                            "ReturnCompleted",
                            "LoanExtended",
                            "LoanExtensionFailedDueToReservation",
                            "LoanOverdueDetected"
                        ],
                        "requirements": [],
                        "role": "회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다."
                    },
                    {
                        "name": "reservation-notification",
                        "alias": "예약 및 알림 서비스",
                        "importance": "Generic Domain",
                        "complexity": 0.6,
                        "differentiation": 0.2,
                        "implementationStrategy": "PBC: reservation-notification",
                        "aggregates": [],
                        "events": [],
                        "requirements": [],
                        "role": "PBC에서 제공하는 예약 및 알림 서비스를 그대로 활용한다. 대출 예약/반납/연체 등 관련 알림 기능을 지원하며, 도메인 고유의 로직은 없다."
                    }
                ],
                "relations": [
                    {
                        "name": "도서 상태 변경 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LoanAndReservation",
                            "alias": "대출/예약/반납 관리"
                        },
                        "downStream": {
                            "name": "LibraryBookManagement",
                            "alias": "도서 관리"
                        }
                    },
                    {
                        "name": "예약/알림 연동 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LoanAndReservation",
                            "alias": "대출/예약/반납 관리"
                        },
                        "downStream": {
                            "name": "reservation-notification",
                            "alias": "예약 및 알림 서비스"
                        }
                    },
                    {
                        "name": "도서 상태 알림 Pub/Sub",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "LibraryBookManagement",
                            "alias": "도서 관리"
                        },
                        "downStream": {
                            "name": "reservation-notification",
                            "alias": "예약 및 알림 서비스"
                        }
                    }
                ],
                "thoughts": "먼저, PBC 매칭 규칙을 최우선 적용하여 알림 및 예약 관련 기능은 reservation-notification PBC를 사용하도록 별도의 Generic Domain으로 분리했다. 이는 조직의 인프라 자원 활용과 범용적 도메인 복잡도를 낮추기 위한 결정이었다. \n\n도메인 복잡도 및 value stream 기준으로, 도서 관리(등록, 상태 관리 등)와 대출/예약/반납 프로세스는 서로 강한 응집도를 가지며, 프로세스와 데이터가 밀접하게 연결되어 있으나, 도서 상태/정보의 라이프사이클과 회원의 대출/예약 라이프사이클은 명확히 구분된다. 그래서 '도서 관리'와 '대출/예약/반납 관리'를 각각 Core Domain으로 분리했다. 두 도메인은 이벤트(도서 상태 변경 등)를 통해 느슨하게 연동한다. \n\n프로세스 흐름상 회원의 모든 대출/예약/반납 액션은 LoanAndReservation(대출/예약/반납 관리)에서 집중적으로 처리하고, 도서의 마스터 정보와 상태 변화는 LibraryBookManagement(도서 관리)에서 책임진다. 각 도메인은 해당 역할에서 발생하는 이벤트(상태 변경, 대출 완료, 반납 등)를 Pub/Sub으로 발행함으로써 상호 의존성을 줄였다. \n\n또한, 예약 및 알림 PBC는 Generic Domain이므로, 다른 도메인들의 이벤트를 받아 알림을 처리하고, 이를 Pub/Sub으로 연결했다. 이렇게 조직/인프라 정책(PBC 우선 활용), 도메인 복잡도(역할 분리), 프로세스(Value Stream) 중심으로 Bounded Context를 구분하였다.",
                "explanations": [
                    {
                        "sourceContext": "대출/예약/반납 관리",
                        "targetContext": "도서 관리",
                        "relationType": "Pub/Sub",
                        "reason": "도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.",
                        "interactionPattern": "대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다."
                    },
                    {
                        "sourceContext": "대출/예약/반납 관리",
                        "targetContext": "예약 및 알림 서비스",
                        "relationType": "Pub/Sub",
                        "reason": "알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.",
                        "interactionPattern": "대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                    },
                    {
                        "sourceContext": "도서 관리",
                        "targetContext": "예약 및 알림 서비스",
                        "relationType": "Pub/Sub",
                        "reason": "도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.",
                        "interactionPattern": "도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                    }
                ],
                "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "currentGeneratedLength": 4773
            },
            "version": 1,
            "aspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리"
        },
        "draftOptions": {
            "LibraryBookManagement": {
                "structure": [
                    {
                        "aggregate": {
                            "name": "Book",
                            "alias": "도서"
                        },
                        "enumerations": [
                            {
                                "name": "BookStatus",
                                "alias": "도서 상태"
                            },
                            {
                                "name": "BookCategory",
                                "alias": "도서 카테고리"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "LoanReference",
                                "alias": "대출 참조",
                                "referencedAggregate": {
                                    "name": "Loan",
                                    "alias": "대출"
                                }
                            },
                            {
                                "name": "ReservationReference",
                                "alias": "예약 참조",
                                "referencedAggregate": {
                                    "name": "Reservation",
                                    "alias": "예약"
                                }
                            },
                            {
                                "name": "MemberReference",
                                "alias": "회원 참조",
                                "referencedAggregate": {
                                    "name": "Member",
                                    "alias": "회원"
                                }
                            },
                            {
                                "name": "BookStatusHistoryRecord",
                                "alias": "도서 상태 이력",
                                "referencedAggregateName": ""
                            }
                        ]
                    }
                ],
                "pros": {
                    "cohesion": "모든 도서 관련 상태, 이력, 참조를 하나의 Aggregate에서 관리하여 도서 단위 업무에 대한 일관성과 집중도가 높음.",
                    "coupling": "외부 컨텍스트(Loan, Reservation, Member) 참조는 VO를 통해 단방향으로 명확히 분리되어 Aggregate간 의존도가 최소화됨.",
                    "consistency": "ISBN 중복 체크, 상태 변경, 이력 기록 등 핵심 비즈니스 불변식을 하나의 트랜잭션에서 안전하게 보장할 수 있음.",
                    "encapsulation": "상태 변화와 관련 규칙, 이력 기록이 Book 내부에 숨겨져 일관성 있게 처리됨.",
                    "complexity": "상대적으로 단일 도메인 객체 구조로 개발과 유지보수의 복잡도가 낮음.",
                    "independence": "Book 단위로 서비스 확장이 가능해 외부 Aggregate 변화 영향이 제한적임.",
                    "performance": "도서 상태 및 이력 질의, 상태 변경 트랜잭션이 한 Aggregate 내에서 빠르게 처리됨."
                },
                "cons": {
                    "cohesion": "상태 이력, 대출 참조 등 이질적 성격의 속성이 모두 Book에 묶여 있어 도메인 내 결합도가 다소 높아질 수 있음.",
                    "coupling": "도서 이력 또는 외부 참조 구조가 복잡해질 경우 Book 자체가 비대해질 수 있음.",
                    "consistency": "상태 변경, 이력 기록, 참조 동시 변경이 많은 경우 트랜잭션 경계가 과하게 넓어질 수 있음.",
                    "encapsulation": "외부 연동 이벤트(대출/예약) 처리 규칙이 Book에 집중되어 도메인 로직이 무거워질 수 있음.",
                    "complexity": "단일 Aggregate에 다양한 역할이 추가되면 모델이 점차 복잡해질 수 있음.",
                    "independence": "이력 관리나 외부 참조와 같은 부분적 변경이 전체 Book에 영향을 줄 수 있음.",
                    "performance": "이력 데이터가 누적될수록 Book 객체의 사이즈가 커져 장기적으로 성능 저하 우려."
                },
                "isAIRecommended": false,
                "boundedContext": {
                    "name": "LibraryBookManagement",
                    "alias": "도서 관리",
                    "displayName": "도서 관리",
                    "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                    "aggregates": [
                        {
                            "name": "Book",
                            "alias": "도서"
                        },
                        {
                            "name": "BookStatusHistory",
                            "alias": "도서 상태 이력"
                        }
                    ],
                    "requirements": {
                        "userStory": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                        "ddl": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);",
                        "event": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}\n{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}",
                        "eventNames": "BookRegistered, BookRegistrationFailedDueToDuplicateISBN, BookStatusChanged, BookDiscarded 이벤트가 발생할 수 있어."
                    }
                },
                "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
            },
            "LoanAndReservation": {
                "structure": [
                    {
                        "aggregate": {
                            "name": "Loan",
                            "alias": "대출"
                        },
                        "enumerations": [
                            {
                                "name": "LoanStatus",
                                "alias": "대출 상태"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "BookReference",
                                "alias": "도서 참조",
                                "referencedAggregate": {
                                    "name": "Book",
                                    "alias": "도서"
                                }
                            },
                            {
                                "name": "Member",
                                "alias": "회원"
                            }
                        ]
                    }
                ],
                "pros": {
                    "cohesion": "대출 프로세스와 이력, 상태, 연장·반납 등 대출 라이프사이클에 필요한 모든 비즈니스 규칙이 단일 Aggregate에서 일관되게 관리되어 업무 규칙 누수 위험이 낮음.",
                    "coupling": "대출과 관련된 변경(연장/반납/연체) 처리가 별도 집계와의 연동 없이 Aggregate 내부에서 트랜잭션 단위로 일어남.",
                    "consistency": "대출 상태 변경, 연장, 반납, 연체 등 주요 이벤트가 모두 원자적으로 처리되어 도메인 불일치 위험이 최소화됨.",
                    "encapsulation": "연장 및 연체 비즈니스 로직과 이력 관리를 Loan 내에 숨겨 외부에 내부 구현을 노출하지 않음.",
                    "complexity": "구조가 단순하여 학습 및 유지보수가 쉬움.",
                    "independence": "대출 도메인의 독립적 확장이 용이하며, 외부 변경(회원/도서 관리 등)과의 결합도가 낮음.",
                    "performance": "대출 현황 및 상태 변경 쿼리가 단일 집계에서 즉시 처리되어 실시간 트랜잭션 처리 효율이 높음."
                },
                "cons": {
                    "cohesion": "예약, 연체 등과의 비즈니스 분리가 부족하여 도메인이 커질수록 하나의 집계가 과도하게 비대해질 수 있음.",
                    "coupling": "예약 처리나 알림 등 외부 프로세스와의 이벤트/연동 로직이 Loan 집계에 집중될 가능성이 있음.",
                    "consistency": "예약, 알림, 연체 관리 등 연관 기능이 분리되지 않아 부분적인 일관성/확장성 한계가 존재.",
                    "encapsulation": "복잡도가 증가하면 도메인별 로직이 내부에 혼재될 우려가 있음.",
                    "complexity": "Loan에 모든 로직이 집중되어 대출/연장/반납/연체 관련 코드가 복잡해질 수 있음.",
                    "independence": "예약, 연체 등 별도 책임이 필요한 확장 요구에 유연하지 않음.",
                    "performance": "대출 처리 건수가 급증하면 하나의 집계에서 동시성 병목이 발생할 수 있음."
                },
                "isAIRecommended": false,
                "boundedContext": {
                    "name": "LoanAndReservation",
                    "alias": "대출/예약/반납 관리",
                    "displayName": "대출/예약/반납 관리",
                    "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                    "aggregates": [
                        {
                            "name": "Loan",
                            "alias": "대출"
                        },
                        {
                            "name": "Reservation",
                            "alias": "예약"
                        },
                        {
                            "name": "Member",
                            "alias": "회원"
                        }
                    ],
                    "requirements": {
                        "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                        "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                        "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                        "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                    }
                },
                "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
            }
        },
        "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n",
        "state": {
            "generator": "RequirementsMappingGenerator",
            "isAIModelSelected": false,
            "firstMessageIsTyping": true,
            "secondMessageIsTyping": false,
            "userStory": "",
            "communicationStyle": "Choreography",
            "aggregateDetail": false,
            "uiStyle": null
        },
        "messages": [
            {
                "uniqueId": "89dfb144deb27d83c282b294890b36c3",
                "type": "processAnalysis",
                "isAnalizing": false,
                "isSummarizeStarted": false,
                "isGeneratingBoundedContext": false,
                "isStartMapping": false,
                "processingRate": 0,
                "content": {
                    "type": "ANALYSIS_RESULT",
                    "projectName": "Requirements Analysis",
                    "content": {
                        "elements": {
                            "c4df1504-4fc4-efc1-8979-11f27b07ce4a": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "c4df1504-4fc4-efc1-8979-11f27b07ce4a",
                                "name": "도서 관리자",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "c4df1504-4fc4-efc1-8979-11f27b07ce4a",
                                    "x": 150,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "ebf90210-b737-77d8-d690-0e888996aca0": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "ebf90210-b737-77d8-d690-0e888996aca0",
                                "name": "회원",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "ebf90210-b737-77d8-d690-0e888996aca0",
                                    "x": 150,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "bad60f52-a1cc-2242-7e0d-e5c59c4f6156": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "bad60f52-a1cc-2242-7e0d-e5c59c4f6156",
                                "name": "도서 관리 시스템",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "bad60f52-a1cc-2242-7e0d-e5c59c4f6156",
                                    "x": 150,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "b166d81c-613f-0696-77f0-8e005aa5f5bf": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                "visibility": "public",
                                "name": "BookRegistered",
                                "oldName": "",
                                "displayName": "도서 등록됨",
                                "namePascalCase": "BookRegistered",
                                "nameCamelCase": "bookRegistered",
                                "namePlural": "",
                                "description": "도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                    "x": 300,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                    "x": 300,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "0b4d1ad6-0200-805f-adf1-1db3817eceba": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "0b4d1ad6-0200-805f-adf1-1db3817eceba",
                                "visibility": "public",
                                "name": "BookRegistrationFailedDueToDuplicateISBN",
                                "oldName": "",
                                "displayName": "ISBN 중복으로 도서 등록 실패됨",
                                "namePascalCase": "BookRegistrationFailedDueToDuplicateISBN",
                                "nameCamelCase": "bookRegistrationFailedDueToDuplicateISBN",
                                "namePlural": "",
                                "description": "입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0b4d1ad6-0200-805f-adf1-1db3817eceba",
                                    "x": 500,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "0b4d1ad6-0200-805f-adf1-1db3817eceba",
                                    "x": 500,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "08bdd38e-c14f-2e73-6bc5-17b172afb95f": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                "visibility": "public",
                                "name": "BookDiscarded",
                                "oldName": "",
                                "displayName": "도서 폐기됨",
                                "namePascalCase": "BookDiscarded",
                                "nameCamelCase": "bookDiscarded",
                                "namePlural": "",
                                "description": "도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                    "x": 700,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                    "x": 700,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "4472e0a3-d930-2bde-d5b9-ac66fc5018a8": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "visibility": "public",
                                "name": "BookStatusChanged",
                                "oldName": "",
                                "displayName": "도서 상태 변경됨",
                                "namePascalCase": "BookStatusChanged",
                                "nameCamelCase": "bookStatusChanged",
                                "namePlural": "",
                                "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "x": 300,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "x": 300,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "89446e2b-e833-7005-7cd2-787c6183e1be": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                "visibility": "public",
                                "name": "LoanCompleted",
                                "oldName": "",
                                "displayName": "도서 대출 완료됨",
                                "namePascalCase": "LoanCompleted",
                                "nameCamelCase": "loanCompleted",
                                "namePlural": "",
                                "description": "대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "x": 500,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "x": 500,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "93c002d3-038b-ba9b-a190-a3aa9c134e18": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                "visibility": "public",
                                "name": "ReturnCompleted",
                                "oldName": "",
                                "displayName": "도서 반납 완료됨",
                                "namePascalCase": "ReturnCompleted",
                                "nameCamelCase": "returnCompleted",
                                "namePlural": "",
                                "description": "도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "x": 700,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "x": 700,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "5233b9cf-fe91-a494-3690-09986716062a": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "5233b9cf-fe91-a494-3690-09986716062a",
                                "visibility": "public",
                                "name": "LoanOverdueDetected",
                                "oldName": "",
                                "displayName": "대출 연체 발생됨",
                                "namePascalCase": "LoanOverdueDetected",
                                "nameCamelCase": "loanOverdueDetected",
                                "namePlural": "",
                                "description": "반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "5233b9cf-fe91-a494-3690-09986716062a",
                                    "x": 900,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "5233b9cf-fe91-a494-3690-09986716062a",
                                    "x": 900,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "0a8083d6-c380-d19a-be8f-f22a8b191327": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                "visibility": "public",
                                "name": "LoanApplied",
                                "oldName": "",
                                "displayName": "도서 대출 신청됨",
                                "namePascalCase": "LoanApplied",
                                "nameCamelCase": "loanApplied",
                                "namePlural": "",
                                "description": "회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                    "x": 300,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                    "x": 300,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "0d696d45-d3bd-3031-24e3-e004c60208f0": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                "visibility": "public",
                                "name": "LoanApplicationFailedBookNotAvailable",
                                "oldName": "",
                                "displayName": "대출 불가(도서 미대출가능)",
                                "namePascalCase": "LoanApplicationFailedBookNotAvailable",
                                "nameCamelCase": "loanApplicationFailedBookNotAvailable",
                                "namePlural": "",
                                "description": "대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                    "x": 500,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                    "x": 500,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b999b27e-7d71-4e54-3476-535607c6c2ab": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                "visibility": "public",
                                "name": "ReservationApplied",
                                "oldName": "",
                                "displayName": "도서 예약 신청됨",
                                "namePascalCase": "ReservationApplied",
                                "nameCamelCase": "reservationApplied",
                                "namePlural": "",
                                "description": "회원이 대출 중인 도서에 대해 예약 신청을 완료함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "x": 700,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "x": 700,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                "visibility": "public",
                                "name": "BookReturned",
                                "oldName": "",
                                "displayName": "도서 반납됨",
                                "namePascalCase": "BookReturned",
                                "nameCamelCase": "bookReturned",
                                "namePlural": "",
                                "description": "회원이 대출한 도서를 반납 처리함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                    "x": 900,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                    "x": 900,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "00a7d972-7005-cd88-f1ce-1a5030440734": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "00a7d972-7005-cd88-f1ce-1a5030440734",
                                "visibility": "public",
                                "name": "LoanExtended",
                                "oldName": "",
                                "displayName": "도서 대출 연장됨",
                                "namePascalCase": "LoanExtended",
                                "nameCamelCase": "loanExtended",
                                "namePlural": "",
                                "description": "대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "00a7d972-7005-cd88-f1ce-1a5030440734",
                                    "x": 1100,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "00a7d972-7005-cd88-f1ce-1a5030440734",
                                    "x": 1100,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "3eeac833-73d3-5052-bcb5-62e5740ff0b0": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "3eeac833-73d3-5052-bcb5-62e5740ff0b0",
                                "visibility": "public",
                                "name": "LoanExtensionFailedDueToReservation",
                                "oldName": "",
                                "displayName": "예약자 존재로 대출 연장 불가",
                                "namePascalCase": "LoanExtensionFailedDueToReservation",
                                "nameCamelCase": "loanExtensionFailedDueToReservation",
                                "namePlural": "",
                                "description": "해당 도서에 예약자가 있어 대출 연장이 불가함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "3eeac833-73d3-5052-bcb5-62e5740ff0b0",
                                    "x": 1300,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "3eeac833-73d3-5052-bcb5-62e5740ff0b0",
                                    "x": 1300,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            }
                        },
                        "relations": {
                            "fd9df7ee-8639-9477-71d4-f3da7fe7f377": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "fd9df7ee-8639-9477-71d4-f3da7fe7f377",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "fd9df7ee-8639-9477-71d4-f3da7fe7f377",
                                "to": "fd9df7ee-8639-9477-71d4-f3da7fe7f377",
                                "description": "",
                                "relationView": {
                                    "id": "fd9df7ee-8639-9477-71d4-f3da7fe7f377",
                                    "value": "[[0,275],[2000,275]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,275],[2000,275]]"
                            },
                            "65026fb7-32df-4a4e-2096-3308a3e86fdc": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "65026fb7-32df-4a4e-2096-3308a3e86fdc",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "65026fb7-32df-4a4e-2096-3308a3e86fdc",
                                "to": "65026fb7-32df-4a4e-2096-3308a3e86fdc",
                                "description": "",
                                "relationView": {
                                    "id": "65026fb7-32df-4a4e-2096-3308a3e86fdc",
                                    "value": "[[0,525],[2000,525]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,525],[2000,525]]"
                            },
                            "1abc4af4-845e-e28d-3aed-d8627756b338": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "1abc4af4-845e-e28d-3aed-d8627756b338",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "1abc4af4-845e-e28d-3aed-d8627756b338",
                                "to": "1abc4af4-845e-e28d-3aed-d8627756b338",
                                "description": "",
                                "relationView": {
                                    "id": "1abc4af4-845e-e28d-3aed-d8627756b338",
                                    "value": "[[0,775],[2000,775]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,775],[2000,775]]"
                            },
                            "c0e9495b-ab19-0d72-5279-ef42aa62a09e": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "c0e9495b-ab19-0d72-5279-ef42aa62a09e",
                                "name": "1",
                                "displayName": "1",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                    "visibility": "public",
                                    "name": "BookRegistered",
                                    "oldName": "",
                                    "displayName": "도서 등록됨",
                                    "namePascalCase": "BookRegistered",
                                    "nameCamelCase": "bookRegistered",
                                    "namePlural": "",
                                    "description": "도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                        "x": 300,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                        "x": 300,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "visibility": "public",
                                    "name": "BookStatusChanged",
                                    "oldName": "",
                                    "displayName": "도서 상태 변경됨",
                                    "namePascalCase": "BookStatusChanged",
                                    "nameCamelCase": "bookStatusChanged",
                                    "namePlural": "",
                                    "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "relationView": {
                                    "id": "c0e9495b-ab19-0d72-5279-ef42aa62a09e",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "b166d81c-613f-0696-77f0-8e005aa5f5bf",
                                    "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "needReconnect": true
                                }
                            },
                            "8a4e63ee-e6b7-0e57-b290-5df850f8e716": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "8a4e63ee-e6b7-0e57-b290-5df850f8e716",
                                "name": "4",
                                "displayName": "4",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                    "visibility": "public",
                                    "name": "BookDiscarded",
                                    "oldName": "",
                                    "displayName": "도서 폐기됨",
                                    "namePascalCase": "BookDiscarded",
                                    "nameCamelCase": "bookDiscarded",
                                    "namePlural": "",
                                    "description": "도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                        "x": 700,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                        "x": 700,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "visibility": "public",
                                    "name": "BookStatusChanged",
                                    "oldName": "",
                                    "displayName": "도서 상태 변경됨",
                                    "namePascalCase": "BookStatusChanged",
                                    "nameCamelCase": "bookStatusChanged",
                                    "namePlural": "",
                                    "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "relationView": {
                                    "id": "8a4e63ee-e6b7-0e57-b290-5df850f8e716",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "08bdd38e-c14f-2e73-6bc5-17b172afb95f",
                                    "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "needReconnect": true
                                }
                            },
                            "cd5b123b-6d14-1bce-82ae-36e97e11f719": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "cd5b123b-6d14-1bce-82ae-36e97e11f719",
                                "name": "5",
                                "displayName": "5",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                    "visibility": "public",
                                    "name": "LoanApplied",
                                    "oldName": "",
                                    "displayName": "도서 대출 신청됨",
                                    "namePascalCase": "LoanApplied",
                                    "nameCamelCase": "loanApplied",
                                    "namePlural": "",
                                    "description": "회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                        "x": 300,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                        "x": 300,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "visibility": "public",
                                    "name": "LoanCompleted",
                                    "oldName": "",
                                    "displayName": "도서 대출 완료됨",
                                    "namePascalCase": "LoanCompleted",
                                    "nameCamelCase": "loanCompleted",
                                    "namePlural": "",
                                    "description": "대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                        "x": 500,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                        "x": 500,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                "to": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                "relationView": {
                                    "id": "cd5b123b-6d14-1bce-82ae-36e97e11f719",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "0a8083d6-c380-d19a-be8f-f22a8b191327",
                                    "to": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "needReconnect": true
                                }
                            },
                            "ad97afd4-6c83-1ca4-a843-a1e3bc4bd333": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "ad97afd4-6c83-1ca4-a843-a1e3bc4bd333",
                                "name": "6",
                                "displayName": "6",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                    "visibility": "public",
                                    "name": "LoanApplicationFailedBookNotAvailable",
                                    "oldName": "",
                                    "displayName": "대출 불가(도서 미대출가능)",
                                    "namePascalCase": "LoanApplicationFailedBookNotAvailable",
                                    "nameCamelCase": "loanApplicationFailedBookNotAvailable",
                                    "namePlural": "",
                                    "description": "대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                        "x": 500,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                        "x": 500,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "visibility": "public",
                                    "name": "ReservationApplied",
                                    "oldName": "",
                                    "displayName": "도서 예약 신청됨",
                                    "namePascalCase": "ReservationApplied",
                                    "nameCamelCase": "reservationApplied",
                                    "namePlural": "",
                                    "description": "회원이 대출 중인 도서에 대해 예약 신청을 완료함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                        "x": 700,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                        "x": 700,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                "to": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                "relationView": {
                                    "id": "ad97afd4-6c83-1ca4-a843-a1e3bc4bd333",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "0d696d45-d3bd-3031-24e3-e004c60208f0",
                                    "to": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "needReconnect": true
                                }
                            },
                            "50f6f46b-3c64-3c3e-1dab-b2651e755829": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "50f6f46b-3c64-3c3e-1dab-b2651e755829",
                                "name": "7",
                                "displayName": "7",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "visibility": "public",
                                    "name": "LoanCompleted",
                                    "oldName": "",
                                    "displayName": "도서 대출 완료됨",
                                    "namePascalCase": "LoanCompleted",
                                    "nameCamelCase": "loanCompleted",
                                    "namePlural": "",
                                    "description": "대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                        "x": 500,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                        "x": 500,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "visibility": "public",
                                    "name": "BookStatusChanged",
                                    "oldName": "",
                                    "displayName": "도서 상태 변경됨",
                                    "namePascalCase": "BookStatusChanged",
                                    "nameCamelCase": "bookStatusChanged",
                                    "namePlural": "",
                                    "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "relationView": {
                                    "id": "50f6f46b-3c64-3c3e-1dab-b2651e755829",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "89446e2b-e833-7005-7cd2-787c6183e1be",
                                    "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "needReconnect": true
                                }
                            },
                            "62896048-6035-7ce2-e820-53b0f11ef163": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "62896048-6035-7ce2-e820-53b0f11ef163",
                                "name": "8",
                                "displayName": "8",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "visibility": "public",
                                    "name": "ReservationApplied",
                                    "oldName": "",
                                    "displayName": "도서 예약 신청됨",
                                    "namePascalCase": "ReservationApplied",
                                    "nameCamelCase": "reservationApplied",
                                    "namePlural": "",
                                    "description": "회원이 대출 중인 도서에 대해 예약 신청을 완료함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                        "x": 700,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                        "x": 700,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "visibility": "public",
                                    "name": "BookStatusChanged",
                                    "oldName": "",
                                    "displayName": "도서 상태 변경됨",
                                    "namePascalCase": "BookStatusChanged",
                                    "nameCamelCase": "bookStatusChanged",
                                    "namePlural": "",
                                    "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "relationView": {
                                    "id": "62896048-6035-7ce2-e820-53b0f11ef163",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "b999b27e-7d71-4e54-3476-535607c6c2ab",
                                    "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "needReconnect": true
                                }
                            },
                            "e29f7916-468b-6bab-4f61-2bdbc006809f": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "e29f7916-468b-6bab-4f61-2bdbc006809f",
                                "name": "9",
                                "displayName": "9",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                    "visibility": "public",
                                    "name": "BookReturned",
                                    "oldName": "",
                                    "displayName": "도서 반납됨",
                                    "namePascalCase": "BookReturned",
                                    "nameCamelCase": "bookReturned",
                                    "namePlural": "",
                                    "description": "회원이 대출한 도서를 반납 처리함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                        "x": 900,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                        "x": 900,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "visibility": "public",
                                    "name": "ReturnCompleted",
                                    "oldName": "",
                                    "displayName": "도서 반납 완료됨",
                                    "namePascalCase": "ReturnCompleted",
                                    "nameCamelCase": "returnCompleted",
                                    "namePlural": "",
                                    "description": "도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                        "x": 700,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                        "x": 700,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                "to": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                "relationView": {
                                    "id": "e29f7916-468b-6bab-4f61-2bdbc006809f",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "61ad94c9-f46e-f7ed-2ccc-c5d6e9dbf66f",
                                    "to": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "needReconnect": true
                                }
                            },
                            "bfccf54a-7da2-454c-5043-2d31e35c1209": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "bfccf54a-7da2-454c-5043-2d31e35c1209",
                                "name": "10",
                                "displayName": "10",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "visibility": "public",
                                    "name": "ReturnCompleted",
                                    "oldName": "",
                                    "displayName": "도서 반납 완료됨",
                                    "namePascalCase": "ReturnCompleted",
                                    "nameCamelCase": "returnCompleted",
                                    "namePlural": "",
                                    "description": "도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                        "x": 700,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                        "x": 700,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "visibility": "public",
                                    "name": "BookStatusChanged",
                                    "oldName": "",
                                    "displayName": "도서 상태 변경됨",
                                    "namePascalCase": "BookStatusChanged",
                                    "nameCamelCase": "bookStatusChanged",
                                    "namePlural": "",
                                    "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                "relationView": {
                                    "id": "bfccf54a-7da2-454c-5043-2d31e35c1209",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "93c002d3-038b-ba9b-a190-a3aa9c134e18",
                                    "to": "4472e0a3-d930-2bde-d5b9-ac66fc5018a8",
                                    "needReconnect": true
                                }
                            }
                        }
                    },
                    "analysisResult": {
                        "recommendedBoundedContextsNumber": 4,
                        "events": [
                            {
                                "name": "BookRegistered",
                                "displayName": "도서 등록됨",
                                "actor": "도서 관리자",
                                "level": 1,
                                "description": "도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.",
                                "inputs": [
                                    "도서명",
                                    "ISBN(13자리)",
                                    "저자",
                                    "출판사",
                                    "카테고리",
                                    "ISBN 중복 확인 완료"
                                ],
                                "outputs": [
                                    "신규 도서 등록",
                                    "도서 상태: 대출가능"
                                ],
                                "nextEvents": [
                                    "BookStatusChanged"
                                ]
                            },
                            {
                                "name": "BookRegistrationFailedDueToDuplicateISBN",
                                "displayName": "ISBN 중복으로 도서 등록 실패됨",
                                "actor": "도서 관리자",
                                "level": 2,
                                "description": "입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.",
                                "inputs": [
                                    "ISBN(13자리)",
                                    "중복 ISBN 존재"
                                ],
                                "outputs": [
                                    "도서 등록 불가 알림"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "BookStatusChanged",
                                "displayName": "도서 상태 변경됨",
                                "actor": "도서 관리 시스템",
                                "level": 3,
                                "description": "도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.",
                                "inputs": [
                                    "상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)",
                                    "해당 도서"
                                ],
                                "outputs": [
                                    "도서 상태 값 갱신"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "BookDiscarded",
                                "displayName": "도서 폐기됨",
                                "actor": "도서 관리자",
                                "level": 4,
                                "description": "도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.",
                                "inputs": [
                                    "폐기 사유",
                                    "해당 도서"
                                ],
                                "outputs": [
                                    "도서 상태: 폐기",
                                    "대출 불가 처리"
                                ],
                                "nextEvents": [
                                    "BookStatusChanged"
                                ]
                            },
                            {
                                "name": "LoanApplied",
                                "displayName": "도서 대출 신청됨",
                                "actor": "회원",
                                "level": 5,
                                "description": "회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.",
                                "inputs": [
                                    "회원번호",
                                    "이름",
                                    "도서명/ISBN",
                                    "대출 기간 선택(7/14/30일)",
                                    "도서 상태: 대출가능"
                                ],
                                "outputs": [
                                    "대출 신청 기록",
                                    "도서 대출 프로세스 시작"
                                ],
                                "nextEvents": [
                                    "LoanCompleted"
                                ]
                            },
                            {
                                "name": "LoanApplicationFailedBookNotAvailable",
                                "displayName": "대출 불가(도서 미대출가능)",
                                "actor": "회원",
                                "level": 6,
                                "description": "대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.",
                                "inputs": [
                                    "도서 상태: 대출중/예약중/폐기"
                                ],
                                "outputs": [
                                    "대출 불가 알림",
                                    "예약 가능 안내(해당시)"
                                ],
                                "nextEvents": [
                                    "ReservationApplied"
                                ]
                            },
                            {
                                "name": "LoanCompleted",
                                "displayName": "도서 대출 완료됨",
                                "actor": "도서 관리 시스템",
                                "level": 7,
                                "description": "대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.",
                                "inputs": [
                                    "대출 신청 승인",
                                    "도서 상태: 대출가능"
                                ],
                                "outputs": [
                                    "도서 상태: 대출중",
                                    "대출 이력 기록",
                                    "반납예정일 생성"
                                ],
                                "nextEvents": [
                                    "BookStatusChanged"
                                ]
                            },
                            {
                                "name": "ReservationApplied",
                                "displayName": "도서 예약 신청됨",
                                "actor": "회원",
                                "level": 8,
                                "description": "회원이 대출 중인 도서에 대해 예약 신청을 완료함.",
                                "inputs": [
                                    "회원번호",
                                    "이름",
                                    "도서명/ISBN",
                                    "도서 상태: 대출중/예약중"
                                ],
                                "outputs": [
                                    "도서 예약 기록",
                                    "예약 대기열 추가"
                                ],
                                "nextEvents": [
                                    "BookStatusChanged"
                                ]
                            },
                            {
                                "name": "BookReturned",
                                "displayName": "도서 반납됨",
                                "actor": "회원",
                                "level": 9,
                                "description": "회원이 대출한 도서를 반납 처리함.",
                                "inputs": [
                                    "대출 이력",
                                    "도서",
                                    "회원"
                                ],
                                "outputs": [
                                    "도서 반납 처리",
                                    "반납일 기록"
                                ],
                                "nextEvents": [
                                    "ReturnCompleted"
                                ]
                            },
                            {
                                "name": "ReturnCompleted",
                                "displayName": "도서 반납 완료됨",
                                "actor": "도서 관리 시스템",
                                "level": 10,
                                "description": "도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.",
                                "inputs": [
                                    "반납된 도서",
                                    "예약자 여부"
                                ],
                                "outputs": [
                                    "도서 상태 변경",
                                    "반납 이력 기록"
                                ],
                                "nextEvents": [
                                    "BookStatusChanged"
                                ]
                            },
                            {
                                "name": "LoanExtended",
                                "displayName": "도서 대출 연장됨",
                                "actor": "회원",
                                "level": 11,
                                "description": "대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.",
                                "inputs": [
                                    "대출 이력",
                                    "도서 상태: 대출중",
                                    "연장 조건 충족 여부"
                                ],
                                "outputs": [
                                    "대출 기간 연장",
                                    "반납예정일 변경"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "LoanExtensionFailedDueToReservation",
                                "displayName": "예약자 존재로 대출 연장 불가",
                                "actor": "회원",
                                "level": 12,
                                "description": "해당 도서에 예약자가 있어 대출 연장이 불가함.",
                                "inputs": [
                                    "대출 이력",
                                    "도서 상태: 예약중",
                                    "예약자 존재"
                                ],
                                "outputs": [
                                    "연장 불가 알림"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "LoanOverdueDetected",
                                "displayName": "대출 연체 발생됨",
                                "actor": "도서 관리 시스템",
                                "level": 13,
                                "description": "반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.",
                                "inputs": [
                                    "반납 예정일 경과",
                                    "도서 미반납"
                                ],
                                "outputs": [
                                    "대출 상태: 연체",
                                    "회원 연체 알림"
                                ],
                                "nextEvents": []
                            }
                        ],
                        "actors": [
                            {
                                "name": "도서 관리자",
                                "events": [
                                    "BookRegistered",
                                    "BookRegistrationFailedDueToDuplicateISBN",
                                    "BookDiscarded"
                                ],
                                "lane": 0
                            },
                            {
                                "name": "회원",
                                "events": [
                                    "LoanApplied",
                                    "LoanApplicationFailedBookNotAvailable",
                                    "ReservationApplied",
                                    "BookReturned",
                                    "LoanExtended",
                                    "LoanExtensionFailedDueToReservation"
                                ],
                                "lane": 1
                            },
                            {
                                "name": "도서 관리 시스템",
                                "events": [
                                    "BookStatusChanged",
                                    "LoanCompleted",
                                    "ReturnCompleted",
                                    "LoanOverdueDetected"
                                ],
                                "lane": 2
                            }
                        ]
                    },
                    "currentGeneratedLength": 6622
                },
                "currentGeneratedLength": 0,
                "timestamp": "2025-07-04T02:10:44.431Z"
            },
            {
                "uniqueId": "ee1b1a67249f9d85bdb7804fd3952aad",
                "type": "bcGenerationOption",
                "isSummarizeStarted": false,
                "isGeneratingBoundedContext": false,
                "isStartMapping": false,
                "isAnalizing": false,
                "generateOption": {
                    "numberOfBCs": 3,
                    "selectedAspects": [
                        "도메인 복잡도 분리",
                        "프로세스(value stream) 기반 분리"
                    ],
                    "additionalOptions": "",
                    "aspectDetails": {},
                    "isProtocolMode": true
                },
                "recommendedBoundedContextsNumber": 4,
                "timestamp": "2025-07-04T02:11:26.123Z"
            },
            {
                "uniqueId": "d1a10c9e92358e53d616252cb2d77198",
                "type": "boundedContextResult",
                "result": {
                    "도메인 복잡도 분리+프로세스(value stream) 기반 분리": {
                        "boundedContexts": [
                            {
                                "name": "LibraryBookManagement",
                                "alias": "도서 관리",
                                "importance": "Core Domain",
                                "complexity": 0.8,
                                "differentiation": 0.9,
                                "implementationStrategy": "Rich Domain Model",
                                "aggregates": [
                                    {
                                        "name": "Book",
                                        "alias": "도서"
                                    },
                                    {
                                        "name": "BookStatusHistory",
                                        "alias": "도서 상태 이력"
                                    }
                                ],
                                "events": [
                                    "BookRegistered",
                                    "BookRegistrationFailedDueToDuplicateISBN",
                                    "BookStatusChanged",
                                    "BookDiscarded"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);"
                                    }
                                ],
                                "role": "도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다."
                            },
                            {
                                "name": "LoanAndReservation",
                                "alias": "대출/예약/반납 관리",
                                "importance": "Core Domain",
                                "complexity": 0.85,
                                "differentiation": 0.9,
                                "implementationStrategy": "Rich Domain Model",
                                "aggregates": [
                                    {
                                        "name": "Loan",
                                        "alias": "대출"
                                    },
                                    {
                                        "name": "Reservation",
                                        "alias": "예약"
                                    },
                                    {
                                        "name": "Member",
                                        "alias": "회원"
                                    }
                                ],
                                "events": [
                                    "LoanApplied",
                                    "LoanApplicationFailedBookNotAvailable",
                                    "LoanCompleted",
                                    "ReservationApplied",
                                    "BookReturned",
                                    "ReturnCompleted",
                                    "LoanExtended",
                                    "LoanExtensionFailedDueToReservation",
                                    "LoanOverdueDetected"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);"
                                    }
                                ],
                                "role": "회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다."
                            },
                            {
                                "name": "reservation-notification",
                                "alias": "예약 및 알림 서비스",
                                "importance": "Generic Domain",
                                "complexity": 0.6,
                                "differentiation": 0.2,
                                "implementationStrategy": "PBC: reservation-notification",
                                "aggregates": [],
                                "events": [],
                                "requirements": [
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}"
                                    }
                                ],
                                "role": "PBC에서 제공하는 예약 및 알림 서비스를 그대로 활용한다. 대출 예약/반납/연체 등 관련 알림 기능을 지원하며, 도메인 고유의 로직은 없다."
                            }
                        ],
                        "relations": [
                            {
                                "name": "도서 상태 변경 Pub/Sub",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "LoanAndReservation",
                                    "alias": "대출/예약/반납 관리"
                                },
                                "downStream": {
                                    "name": "LibraryBookManagement",
                                    "alias": "도서 관리"
                                }
                            },
                            {
                                "name": "예약/알림 연동 Pub/Sub",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "LoanAndReservation",
                                    "alias": "대출/예약/반납 관리"
                                },
                                "downStream": {
                                    "name": "reservation-notification",
                                    "alias": "예약 및 알림 서비스"
                                }
                            },
                            {
                                "name": "도서 상태 알림 Pub/Sub",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "LibraryBookManagement",
                                    "alias": "도서 관리"
                                },
                                "downStream": {
                                    "name": "reservation-notification",
                                    "alias": "예약 및 알림 서비스"
                                }
                            }
                        ],
                        "thoughts": "먼저, PBC 매칭 규칙을 최우선 적용하여 알림 및 예약 관련 기능은 reservation-notification PBC를 사용하도록 별도의 Generic Domain으로 분리했다. 이는 조직의 인프라 자원 활용과 범용적 도메인 복잡도를 낮추기 위한 결정이었다. \n\n도메인 복잡도 및 value stream 기준으로, 도서 관리(등록, 상태 관리 등)와 대출/예약/반납 프로세스는 서로 강한 응집도를 가지며, 프로세스와 데이터가 밀접하게 연결되어 있으나, 도서 상태/정보의 라이프사이클과 회원의 대출/예약 라이프사이클은 명확히 구분된다. 그래서 '도서 관리'와 '대출/예약/반납 관리'를 각각 Core Domain으로 분리했다. 두 도메인은 이벤트(도서 상태 변경 등)를 통해 느슨하게 연동한다. \n\n프로세스 흐름상 회원의 모든 대출/예약/반납 액션은 LoanAndReservation(대출/예약/반납 관리)에서 집중적으로 처리하고, 도서의 마스터 정보와 상태 변화는 LibraryBookManagement(도서 관리)에서 책임진다. 각 도메인은 해당 역할에서 발생하는 이벤트(상태 변경, 대출 완료, 반납 등)를 Pub/Sub으로 발행함으로써 상호 의존성을 줄였다. \n\n또한, 예약 및 알림 PBC는 Generic Domain이므로, 다른 도메인들의 이벤트를 받아 알림을 처리하고, 이를 Pub/Sub으로 연결했다. 이렇게 조직/인프라 정책(PBC 우선 활용), 도메인 복잡도(역할 분리), 프로세스(Value Stream) 중심으로 Bounded Context를 구분하였다.",
                        "explanations": [
                            {
                                "sourceContext": "대출/예약/반납 관리",
                                "targetContext": "도서 관리",
                                "relationType": "Pub/Sub",
                                "reason": "도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.",
                                "interactionPattern": "대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다."
                            },
                            {
                                "sourceContext": "대출/예약/반납 관리",
                                "targetContext": "예약 및 알림 서비스",
                                "relationType": "Pub/Sub",
                                "reason": "알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.",
                                "interactionPattern": "대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                            },
                            {
                                "sourceContext": "도서 관리",
                                "targetContext": "예약 및 알림 서비스",
                                "relationType": "Pub/Sub",
                                "reason": "도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.",
                                "interactionPattern": "도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                            }
                        ],
                        "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                        "currentGeneratedLength": 4773
                    }
                },
                "isStartMapping": false,
                "isGeneratingBoundedContext": false,
                "isSummarizeStarted": false,
                "isAnalizing": false,
                "processingRate": 100,
                "currentProcessingBoundedContext": "예약 및 알림 서비스",
                "selectedAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "summarizedResult": "",
                "pbcLists": [
                    {
                        "name": "chat-vue3-en",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "Chat service (Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat System Overview <br>\nThe PBC Chat system is designed to handle all chat-related tasks efficiently and securely. It provides a robust framework for chat room creation, conversation history storage, and retrieval. The system ensures seamless integration with Supabase and offers a user-friendly interface for both developers and users. Specifically optimized for Vue3-based environments, it delivers a smooth and responsive user experience utilizing modern web technologies. Through this integration, it offers various chat options and leverages Supabase's unique features to provide an optimal chat experience. The PBC Chat system ensures both reliability and scalability while offering users more diverse options to make the chat process smoother and more convenient.\n\n## Available Features\n### 1) Chat Room Creation <br>\n  Enables users to create chat rooms through various supported methods, ensuring a safe and fast chat environment.\n\n### 2) Conversation History Storage <br>\n  Provides functionality to securely store and manage all conversation history using Supabase.\n\n### 3) Conversation History Retrieval <br>\n  Allows users to view detailed records of past conversations, providing information including chat status and timestamps.\n\n## Usage Guide\n\n### 1) Analysis/Design\n1. Double-click the applied PBC's bounded context area to activate the PBC panel.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<Example of PBC Panel Creation>\n\n2. From the PBC panel options, select the event storming stickers corresponding to the features you want to use from reading elements, command elements, and event elements.\n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Example of Panel Sticker Option Selection>\n\n### 2) Implementation\n1. After closing the panel, click CODE to preview the event storming-based generated code.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. In the generated code, click on the selected PBC folder > README.md to check the source code usage instructions.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<Example of PBC README.md File>\n\n3. After loading the source code in your IDE environment, follow the README instructions to download and extract the files, then verify that the downloaded PBC has been created in your source code.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<Example of PBC Source Code Download>\n\n4. To avoid port conflicts, modify the port appropriately in application.yml (payment/src/main/resources/application.yml).\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<Example of PBC Port Modification>\n",
                        "id": 13,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat-vue3-en/blob/main/model.json"
                    },
                    {
                        "name": "review",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/fec3779d-2eb8-40bb-8a07-1a03ee120f6f",
                        "description": "review",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Review 시스템 개요\nPBC Review 시스템은 모든 리뷰 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 리뷰 등록, 평점 등록 및 조회를 위한 견고한 프레임워크를 제공합니다. 사용자 친화적인 인터페이스를 통해 특정 정보에 대한 평점과 리뷰를 쉽게 남길 수 있도록 지원합니다. 이러한 기능을 통해 다양한 리뷰 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 리뷰 과정을 제공합니다. PBC Review 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 리뷰 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 리뷰 등록 <br>\n  사용자가 특정 정보에 대한 리뷰를 쉽게 등록할 수 있도록 하며, 안전하고 빠른 리뷰 환경을 보장합니다.\n\n### 2) 평점 등록 <br>\n  사용자 친화적인 인터페이스를 통해 사용자가 평점을 등록할 수 있는 기능을 제공합니다.\n\n### 3) 리뷰 및 평점 조회 <br>\n  등록된 모든 리뷰와 평점을 서비스를 이용하는 모든 사용자가 확인할 수 있도록 하는 기능을 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1422\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f1e557a5-7ac9-44d0-9ba2-30fd6fa11ba8\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"767\" alt=\"image\" src=\"https://github.com/user-attachments/assets/2b255acd-934d-4565-8981-b16a2fe7e087\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"509\" alt=\"image\" src=\"https://github.com/user-attachments/assets/717d6253-1f07-43f7-b949-6bd7350e459b\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인하여 사용할 수 있습니다.\n<img width=\"998\" alt=\"image\" src=\"https://github.com/user-attachments/assets/699bda6a-7167-4c50-98b4-1afe1ccb1607\" /> <br>\n<PBC README.md 파일 예시>\n",
                        "id": 15,
                        "pbcPath": "https://github.com/msa-ez/pbc-review/blob/main/model.json"
                    },
                    {
                        "name": "reservation-notification",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/88a59203-26e6-4f9e-8349-169b8737ef8a",
                        "description": "예약 & 알림 서비스",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Alarm 시스템 개요\nPBC Alarm 시스템은 모든 알림 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 즉각 알람 발송 및 예약 알림 발송을 위한 견고한 프레임워크를 제공합니다. SSE(Server-Sent Events) 기반의 기술을 활용하여 실시간으로 알림을 전송하며, 사용자 친화적인 인터페이스를 통해 알림 설정을 쉽게 관리할 수 있도록 지원합니다. 이러한 기능을 통해 다양한 알림 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 알림 과정을 제공합니다. PBC Alarm 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 알림 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 즉각 알람 발송 <br>\n  SSE 기반의 기술을 통해 사용자가 즉각적인 알람을 받을 수 있도록 하며, 안전하고 빠른 알림 환경을 보장합니다.\n\n### 2) 예약 알림 발송 <br>\n  사용자가 정해진 날짜와 시간에 알림을 설정할 수 있는 기능을 제공하여, 예약된 알림을 정확하게 발송할 수 있도록 지원합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n* 결제를 통한 결제정보 업데이트와 같은 다른 마이크로서비스와의 통신이 발생할 경우\n  Event - Policy Relation을 연결해야합니다.\n\n  예시) 결제성공을 통한 주문 애그리거트의 결제정보 변경\n  \n  <img width=\"823\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cfaa6b70-a489-42eb-8c18-823b8c9ed7dc\" /> <br>\n  \n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 16,
                        "pbcPath": "https://github.com/msa-ez/pbc-reservation-notification/blob/main/model.json"
                    },
                    {
                        "name": "reservation-notification-vue3",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/88a59203-26e6-4f9e-8349-169b8737ef8a",
                        "description": "예약 & 알림 서비스(Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Alarm 시스템 개요\nPBC Alarm 시스템은 모든 알림 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 즉각 알람 발송 및 예약 알림 발송을 위한 견고한 프레임워크를 제공합니다. SSE(Server-Sent Events) 기반의 기술을 활용하여 실시간으로 알림을 전송하며, 사용자 친화적인 인터페이스를 통해 알림 설정을 쉽게 관리할 수 있도록 지원합니다. 특히, Vue3 기반 환경에서 원활하게 동작하도록 최적화되어 있어, 최신 웹 기술을 활용한 매끄럽고 반응성 높은 사용자 경험을 제공합니다. 이러한 기능을 통해 다양한 알림 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 알림 과정을 제공합니다. PBC Alarm 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 알림 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 즉각 알람 발송 <br>\n  SSE 기반의 기술을 통해 사용자가 즉각적인 알람을 받을 수 있도록 하며, 안전하고 빠른 알림 환경을 보장합니다.\n\n### 2) 예약 알림 발송 <br>\n  사용자가 정해진 날짜와 시간에 알림을 설정할 수 있는 기능을 제공하여, 예약된 알림을 정확하게 발송할 수 있도록 지원합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 17,
                        "pbcPath": "https://github.com/msa-ez/pbc-reservation-notification-vue3/blob/main/model.json"
                    },
                    {
                        "name": "chat-vue3",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "채팅 서비스(Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat 시스템 개요 <br>\nPBC Chat 시스템은 모든 채팅 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 채팅방 생성, 대화 내역 저장 및 조회를 위한 견고한 프레임워크를 제공합니다. Supabase와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 특히, Vue3 기반 환경에서 원활하게 동작하도록 최적화되어 있어, 최신 웹 기술을 활용한 매끄럽고 반응성 높은 사용자 경험을 제공합니다. 이러한 통합을 통해 다양한 채팅 옵션을 제공하고, Supabase의 고유한 기능을 활용하여 최적의 채팅 경험을 제공합니다. PBC Chat 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 채팅 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 채팅방 생성 <br>\n  다양한 지원 방법을 통해 사용자가 채팅방을 생성할 수 있도록 하며, 안전하고 빠른 채팅 환경을 보장합니다.\n\n### 2) 대화 내역 저장 <br>\n  Supabase를 사용하여 모든 대화 내역을 안전하게 저장하고 관리할 수 있는 기능을 제공합니다.\n\n### 3) 대화 내역 조회 <br>\n  과거 대화의 상세 기록을 사용자가 볼 수 있도록 하여, 채팅 상태 및 타임스탬프를 포함한 정보를 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 18,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat-vue3/blob/main/model.json"
                    },
                    {
                        "name": "chat",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "채팅 서비스",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat 시스템 개요 <br>\nPBC Chat 시스템은 모든 채팅 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 채팅방 생성, 대화 내역 저장 및 조회를 위한 견고한 프레임워크를 제공합니다. Supabase와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 이러한 통합을 통해 다양한 채팅 옵션을 제공하고, Supabase의 고유한 기능을 활용하여 최적의 채팅 경험을 제공합니다. PBC Chat 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 채팅 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 채팅방 생성 <br>\n  다양한 지원 방법을 통해 사용자가 채팅방을 생성할 수 있도록 하며, 안전하고 빠른 채팅 환경을 보장합니다.\n\n### 2) 대화 내역 저장 <br>\n  Supabase를 사용하여 모든 대화 내역을 안전하게 저장하고 관리할 수 있는 기능을 제공합니다.\n\n### 3) 대화 내역 조회 <br>\n  과거 대화의 상세 기록을 사용자가 볼 수 있도록 하여, 채팅 상태 및 타임스탬프를 포함한 정보를 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 19,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat/blob/main/model.json"
                    },
                    {
                        "name": "payment-system",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/7577d207-dec2-4421-9f4d-754efea9f41d",
                        "description": "결제를 위한 공통 기능",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC 결제 시스템 개요 <br>\nPBC 결제 시스템은 모든 결제 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 결제 처리, 취소 관리, 거래 내역 조회를 위한 견고한 프레임워크를 제공합니다. 다양한 결제 게이트웨이(PG사)와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 이러한 통합을 통해 다양한 결제 옵션을 제공하고, 각 게이트웨이의 고유한 기능을 활용하여 최적의 결제 경험을 제공합니다. PBC 결제 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 결제 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n\n### 1) 결제 처리 <br>\n  다양한 지원 방법을 통해 사용자가 결제를 할 수 있도록 하며, 안전하고 빠른 거래를 보장합니다.\n\n### 2) 결제 취소 <br>\n   전체 또는 부분 환불 옵션을 통해 결제를 취소할 수 있는 기능을 제공합니다.\n\n### 3) 거래 내역 조회 <br>\n   결제 상태 및 타임스탬프를 포함한 과거 거래의 상세 기록을 사용자가 볼 수 있도록 합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n* 결제를 통한 결제정보 업데이트와 같은 다른 마이크로서비스와의 통신이 발생할 경우\n  Event - Policy Relation을 연결해야합니다.\n\n  예시) 결제성공을 통한 주문 애그리거트의 결제정보 변경\n  \n  <img width=\"823\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cfaa6b70-a489-42eb-8c18-823b8c9ed7dc\" /> <br>\n  \n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n\n6. 이후, EDA기반 통신이 이루어지도록 다른 마이크로서비스와 topic명을 일치 시키기 위해 destination을 수정합니다.\n<img width=\"314\" alt=\"image\" src=\"https://github.com/user-attachments/assets/634d95ea-3d50-43e2-8d95-2a42a51de390\" /> <br>\n\n7. Frontend도 동일하게 package.json(frontend/package.json)의 'start'에 명시된 port number를 변경합니다.\n<img width=\"366\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c750e392-c186-4d25-a8a1-2c088a412468\" /> <br>\n\n8. 아래 커맨드를 통해 Payment system의 backend, frontend를 기동합니다.\n```\n// 1. payment Backend\n\n// Root 기준\ncd payment-system-0-0-6\ncd payment\nmvn spring-boot:run\n\n// 2. payment Frontend\n\n// Root 기준\ncd frontend\nnpm install\nnpm run build\nnpm run start\n```\n\n8. Payment system의 Gateway 라우팅 설정을 진행하기 위해 application.yml(gateway/src/resources/application.yml)에 라우팅을 설정합니다.\n<img width=\"350\" alt=\"image\" src=\"https://github.com/user-attachments/assets/884ee895-b385-43be-aa37-7626b1d70056\" /> <br>\n\n9. Root에 위치한 Frontend에 web component 등록을 위해 index.html(frontend/public/index.html)에 Payment system의 17line에 아래와 같이 등록합니다.\n```\n<script src=\"<Payment system의 Frontend Url>/payment-system-app.js\"></script>\n```\n<img width=\"1013\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8a5e7b96-facd-4c0b-9e65-387c198a2d80\" /> <br>\n\n10. Payment system을 SingleSPA로 동작하기 위해 Component의 \\<template>과 <script>에 다음과 같이 코드를 생성합니다.\n```\n// template\n<template>\n  <payment-system-app>\n      <payment-system\n          service-type=\"<payment-system frontend의 Payment.vue에 생성된 타입 ex) pay, refund, receipt...>\"\n          :request-info=\"JSON.stringify(paymentData)\" \n          buyer-info-mode=\"<결제 detail 정보 옵션 ex) true, false>\"\n      ></payment-system>\n  </payment-system-app>\n</template>\n\n// script\ndata: () => ({\n  snackbar: {\n    paymentData: null,\n}),\nasync created() {\n  if(!this.paymentData){\n    this.paymentData = {\n      itemId : this.decode(this.value._links.self.href.split(\"/\")[this.value._links.self.href.split(\"/\").length - 1]),\n      price: , // 직접 설정\n      name: \"\", // 직접 설정\n      buyerId: \"\", // 직접 설정\n      buyerEmail: \"\", // 직접 설정\n      buyerTel: \"\", // 직접 설정\n      buyerName: \"\" // 직접 설정\n    }\n  }\n}\n```\n\nPayment system에 대한 설정이 완료되면 Root Frontend UI에 아래와 같이 Payment system에 대한 UI가 생성됩니다. <br>\n![image](https://github.com/user-attachments/assets/5792ce28-b318-4ed8-b65d-d908fb1524ec) <br>\n\n",
                        "id": 20,
                        "pbcPath": "https://github.com/msa-ez/pbc-payment-system/blob/main/model.json"
                    },
                    {
                        "name": "document-management",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/533ae0ee-e901-49f6-b1fe-ed24cc9e2626",
                        "description": "파일관리를 위한 공통 기능",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "### Instruction\n",
                        "id": 26,
                        "pbcPath": "https://github.com/msa-ez/pbc-document-management/blob/main/model.json"
                    },
                    {
                        "name": "gitlab",
                        "rating": 5,
                        "imageUrl": null,
                        "description": "openapi.yaml",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## instruction\n",
                        "id": 30,
                        "pbcPath": "https://github.com/msa-ez/pbc-gitlab/blob/main/openapi.yaml"
                    },
                    {
                        "name": "PBC-Test",
                        "rating": 5,
                        "imageUrl": "https://github.com/msa-ez/template-spring-boot-3/assets/123912988/a901ad8f-7548-42db-b4a4-67a34bfd9279",
                        "description": "Framework for rapidly and easily developing Java-based web applications.",
                        "tags": [
                            "PBC"
                        ],
                        "instruction": "### Spring Boot is a popular framework in the Java ecosystem for building microservices and web applications. Here are some of the key advantages of Spring Boot:\n\n#### Rapid Development: Spring Boot offers a range of out-of-the-box functionalities and default configurations, which helps in quick application development without much boilerplate code.\n\n#### Standalone: Spring Boot applications are standalone and web servers can be embedded in the application. This means applications can be run from the command line without needing an external server.\n\n#### Production Ready: It comes with built-in features like health checks and metrics, which makes it easy to monitor and manage production applications.\n\n#### Opinionated Defaults: Spring Boot gives you a set of default settings, libraries, and configurations so you can get started without needing to figure out what's the best way to set up a Spring application.\n\n#### Microservices Ready: Spring Boot works seamlessly with Spring Cloud, making it a natural choice for building microservices applications.\n\n#### No Code Generation: Spring Boot does not generate code and there is absolutely zero requirement for XML configuration.\n\n#### Customizable: While it provides a lot of default configurations, settings, and libraries, these can easily be overridden and customized as per the requirements.\n\n#### Spring Ecosystem: It integrates seamlessly with other Spring modules like Spring Data, Spring Security, and Spring Batch.\n\n#### Rich Developer Tools: Spring Boot includes an array of tools to improve the productivity of developers, such as the Spring Boot Initializr for bootstrapping a new project and the Actuator for introspecting and managing your application.\n\n#### Embedded Server Support: It supports embedded servers like Tomcat, Jetty, and Undertow, which reduces the need for external server setup.\n\n#### Wide Range of Plugins: Spring Boot offers a wide range of built-in plugins for developers, facilitating tasks such as creating executable JARs and WARs.\n\n#### Active Community: Spring Boot has a very active community which means that it's continuously updated, and developers can get support from community members, forums, and blogs.\n\n#### Extensive Documentation: Spring Boot provides comprehensive documentation, making it easier for developers to understand, adopt, and troubleshoot.\n",
                        "id": 31,
                        "pbcPath": "https://github.com/msa-ez/pbc-testRepo/blob/main/openapi.yaml"
                    }
                ],
                "currentGeneratedLength": 0,
                "timestamp": "2025-07-04T02:12:43.027Z"
            },
            {
                "type": "aggregateDraftDialogDto",
                "uniqueId": "1751595659126",
                "isShow": true,
                "draftOptions": [
                    {
                        "boundedContext": "LibraryBookManagement",
                        "boundedContextAlias": "도서 관리",
                        "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                        "options": [
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Book",
                                            "alias": "도서"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "BookStatus",
                                                "alias": "도서 상태"
                                            },
                                            {
                                                "name": "BookCategory",
                                                "alias": "도서 카테고리"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "LoanReference",
                                                "alias": "대출 참조",
                                                "referencedAggregate": {
                                                    "name": "Loan",
                                                    "alias": "대출"
                                                }
                                            },
                                            {
                                                "name": "ReservationReference",
                                                "alias": "예약 참조",
                                                "referencedAggregate": {
                                                    "name": "Reservation",
                                                    "alias": "예약"
                                                }
                                            },
                                            {
                                                "name": "MemberReference",
                                                "alias": "회원 참조",
                                                "referencedAggregate": {
                                                    "name": "Member",
                                                    "alias": "회원"
                                                }
                                            },
                                            {
                                                "name": "BookStatusHistoryRecord",
                                                "alias": "도서 상태 이력",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "모든 도서 관련 상태, 이력, 참조를 하나의 Aggregate에서 관리하여 도서 단위 업무에 대한 일관성과 집중도가 높음.",
                                    "coupling": "외부 컨텍스트(Loan, Reservation, Member) 참조는 VO를 통해 단방향으로 명확히 분리되어 Aggregate간 의존도가 최소화됨.",
                                    "consistency": "ISBN 중복 체크, 상태 변경, 이력 기록 등 핵심 비즈니스 불변식을 하나의 트랜잭션에서 안전하게 보장할 수 있음.",
                                    "encapsulation": "상태 변화와 관련 규칙, 이력 기록이 Book 내부에 숨겨져 일관성 있게 처리됨.",
                                    "complexity": "상대적으로 단일 도메인 객체 구조로 개발과 유지보수의 복잡도가 낮음.",
                                    "independence": "Book 단위로 서비스 확장이 가능해 외부 Aggregate 변화 영향이 제한적임.",
                                    "performance": "도서 상태 및 이력 질의, 상태 변경 트랜잭션이 한 Aggregate 내에서 빠르게 처리됨."
                                },
                                "cons": {
                                    "cohesion": "상태 이력, 대출 참조 등 이질적 성격의 속성이 모두 Book에 묶여 있어 도메인 내 결합도가 다소 높아질 수 있음.",
                                    "coupling": "도서 이력 또는 외부 참조 구조가 복잡해질 경우 Book 자체가 비대해질 수 있음.",
                                    "consistency": "상태 변경, 이력 기록, 참조 동시 변경이 많은 경우 트랜잭션 경계가 과하게 넓어질 수 있음.",
                                    "encapsulation": "외부 연동 이벤트(대출/예약) 처리 규칙이 Book에 집중되어 도메인 로직이 무거워질 수 있음.",
                                    "complexity": "단일 Aggregate에 다양한 역할이 추가되면 모델이 점차 복잡해질 수 있음.",
                                    "independence": "이력 관리나 외부 참조와 같은 부분적 변경이 전체 Book에 영향을 줄 수 있음.",
                                    "performance": "이력 데이터가 누적될수록 Book 객체의 사이즈가 커져 장기적으로 성능 저하 우려."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "LibraryBookManagement",
                                    "alias": "도서 관리",
                                    "displayName": "도서 관리",
                                    "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                                    "aggregates": [
                                        {
                                            "name": "Book",
                                            "alias": "도서"
                                        },
                                        {
                                            "name": "BookStatusHistory",
                                            "alias": "도서 상태 이력"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                        "ddl": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);",
                                        "event": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}\n{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}",
                                        "eventNames": "BookRegistered, BookRegistrationFailedDueToDuplicateISBN, BookStatusChanged, BookDiscarded 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Book",
                                            "alias": "도서"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "BookStatus",
                                                "alias": "도서 상태"
                                            },
                                            {
                                                "name": "BookCategory",
                                                "alias": "도서 카테고리"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "LoanReference",
                                                "alias": "대출 참조",
                                                "referencedAggregate": {
                                                    "name": "Loan",
                                                    "alias": "대출"
                                                }
                                            },
                                            {
                                                "name": "ReservationReference",
                                                "alias": "예약 참조",
                                                "referencedAggregate": {
                                                    "name": "Reservation",
                                                    "alias": "예약"
                                                }
                                            },
                                            {
                                                "name": "MemberReference",
                                                "alias": "회원 참조",
                                                "referencedAggregate": {
                                                    "name": "Member",
                                                    "alias": "회원"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "BookStatusHistory",
                                            "alias": "도서 상태 이력"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "BookStatus",
                                                "alias": "도서 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "Book은 도서 자체 정보와 상태 관리에 집중, BookStatusHistory는 상태 이력 관리에만 집중해 책임이 명확히 분리됨.",
                                    "coupling": "이력 데이터와 도서 엔터티가 느슨하게 연결돼 각각의 변화가 상대적으로 자유로움.",
                                    "consistency": "각 Aggregate가 자신만의 트랜잭션 경계를 갖춰 대용량 이력 처리, 다수 상태 변경에도 성능 부담 분산.",
                                    "encapsulation": "상태 이력 저장 및 변경 규칙이 BookStatusHistory 내부에 명확히 분리되어 있음.",
                                    "complexity": "역할별 분리로 도메인 모델이 명확해지고 확장 시 각자의 변경이 쉬움.",
                                    "independence": "이력 저장소를 별도 스토리지나 서비스로 독립 운영 가능, Book의 변화와 분리되어 진화 가능.",
                                    "performance": "이력 데이터가 많아져도 Book 집합 자체에는 영향을 주지 않으며, 이력만 따로 배치/조회/백업 가능."
                                },
                                "cons": {
                                    "cohesion": "상태 변경 시 Book과 BookStatusHistory 양쪽을 모두 관리해야 해 구현체/서비스 단에서 추가 오케스트레이션이 필요함.",
                                    "coupling": "도서 상태와 이력이 분리돼 있어 연관 데이터 조인이 필요할 경우 쿼리 복잡도가 증가함.",
                                    "consistency": "상태 변경과 이력 저장이 별개 트랜잭션일 때 일시적 불일치(이벤트 처리 지연 등)가 발생할 수 있음.",
                                    "encapsulation": "도서 전체의 상태 흐름 파악을 위해 여러 객체를 조합해야 하므로 일관성 보장이 어려울 수 있음.",
                                    "complexity": "이력 동기화, 트랜잭션 경계 관리 등 복잡한 오케스트레이션 코드가 필요함.",
                                    "independence": "상호 참조가 필요한 경우 버전 관리, 마이그레이션 등에서 신경 써야 할 점이 많아짐.",
                                    "performance": "상태/이력 일괄 조회 등 복합 작업에서 여러 Aggregate 접근이 필요해 I/O 비용 증가 가능."
                                },
                                "isAIRecommended": true,
                                "boundedContext": {
                                    "name": "LibraryBookManagement",
                                    "alias": "도서 관리",
                                    "displayName": "도서 관리",
                                    "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                                    "aggregates": [
                                        {
                                            "name": "Book",
                                            "alias": "도서"
                                        },
                                        {
                                            "name": "BookStatusHistory",
                                            "alias": "도서 상태 이력"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                        "ddl": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);",
                                        "event": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}\n{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}",
                                        "eventNames": "BookRegistered, BookRegistrationFailedDueToDuplicateISBN, BookStatusChanged, BookDiscarded 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                            }
                        ],
                        "conclusions": "Option 1은 도서 등록, 상태 변경, 이력 조회가 모두 일관된 트랜잭션 내에서 즉각적이고 자주 일어나는 환경(소규모/중규모 도서관)에 적합합니다. Option 2는 대용량 이력 관리, 이력 데이터의 별도 보관, 또는 상태 관리와 이력 관리가 분리 운영되어야 하는 대형 도서관, 마이크로서비스 환경에 최적입니다.",
                        "defaultOptionIndex": 1,
                        "inference": "\n\n도서 등록, 상태 관리, 중복 ISBN 체크, 상태 변경 이력, 대출 이력 요구사항과 이벤트 흐름, DDL, Pub/Sub 컨텍스트 관계를 종합적으로 분석함. Option 1은 단일 Book Aggregate 내에 상태 이력과 대출 참조(LoanReference, ReservationReference, MemberReference)를 값 객체로 통합해 일관된 트랜잭션 경계를 강조한다. Option 2는 Book과 BookStatusHistory 두 개의 Aggregate로 분리, 이력 관리를 독립시키고 도서 엔터티가 이력을 참조한다."
                    },
                    {
                        "boundedContext": "LoanAndReservation",
                        "boundedContextAlias": "대출/예약/반납 관리",
                        "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                        "options": [
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "LoanStatus",
                                                "alias": "대출 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            },
                                            {
                                                "name": "Member",
                                                "alias": "회원"
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "대출 프로세스와 이력, 상태, 연장·반납 등 대출 라이프사이클에 필요한 모든 비즈니스 규칙이 단일 Aggregate에서 일관되게 관리되어 업무 규칙 누수 위험이 낮음.",
                                    "coupling": "대출과 관련된 변경(연장/반납/연체) 처리가 별도 집계와의 연동 없이 Aggregate 내부에서 트랜잭션 단위로 일어남.",
                                    "consistency": "대출 상태 변경, 연장, 반납, 연체 등 주요 이벤트가 모두 원자적으로 처리되어 도메인 불일치 위험이 최소화됨.",
                                    "encapsulation": "연장 및 연체 비즈니스 로직과 이력 관리를 Loan 내에 숨겨 외부에 내부 구현을 노출하지 않음.",
                                    "complexity": "구조가 단순하여 학습 및 유지보수가 쉬움.",
                                    "independence": "대출 도메인의 독립적 확장이 용이하며, 외부 변경(회원/도서 관리 등)과의 결합도가 낮음.",
                                    "performance": "대출 현황 및 상태 변경 쿼리가 단일 집계에서 즉시 처리되어 실시간 트랜잭션 처리 효율이 높음."
                                },
                                "cons": {
                                    "cohesion": "예약, 연체 등과의 비즈니스 분리가 부족하여 도메인이 커질수록 하나의 집계가 과도하게 비대해질 수 있음.",
                                    "coupling": "예약 처리나 알림 등 외부 프로세스와의 이벤트/연동 로직이 Loan 집계에 집중될 가능성이 있음.",
                                    "consistency": "예약, 알림, 연체 관리 등 연관 기능이 분리되지 않아 부분적인 일관성/확장성 한계가 존재.",
                                    "encapsulation": "복잡도가 증가하면 도메인별 로직이 내부에 혼재될 우려가 있음.",
                                    "complexity": "Loan에 모든 로직이 집중되어 대출/연장/반납/연체 관련 코드가 복잡해질 수 있음.",
                                    "independence": "예약, 연체 등 별도 책임이 필요한 확장 요구에 유연하지 않음.",
                                    "performance": "대출 처리 건수가 급증하면 하나의 집계에서 동시성 병목이 발생할 수 있음."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "LoanAndReservation",
                                    "alias": "대출/예약/반납 관리",
                                    "displayName": "대출/예약/반납 관리",
                                    "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                                    "aggregates": [
                                        {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        },
                                        {
                                            "name": "Member",
                                            "alias": "회원"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                        "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                                        "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                                        "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "LoanStatus",
                                                "alias": "대출 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            },
                                            {
                                                "name": "Member",
                                                "alias": "회원"
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "ReservationStatus",
                                                "alias": "예약 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            },
                                            {
                                                "name": "Member",
                                                "alias": "회원"
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "대출과 예약 도메인을 명확히 분리하여 각각의 라이프사이클과 규칙을 독립적으로 관리할 수 있음.",
                                    "coupling": "예약/대출 프로세스가 상호참조를 최소화하며 변화 전파를 줄임.",
                                    "consistency": "각 Aggregate 내에서는 상태 변경이 원자적으로 보장되며, 예약 및 대출 상태 간 동기화는 이벤트로 처리.",
                                    "encapsulation": "대출/예약별로 담당 팀 또는 서비스가 각각의 도메인 규칙을 집중적으로 관리 가능.",
                                    "complexity": "도메인별 로직이 분리되어 각자 업무에 특화된 개발 및 유지보수가 쉬움.",
                                    "independence": "대출 및 예약 기능을 개별적으로 확장/변경할 수 있어 유연성이 높음.",
                                    "performance": "대출 및 예약 쿼리, 이벤트 처리 등에서 독립적 병렬 처리와 확장성이 확보됨."
                                },
                                "cons": {
                                    "cohesion": "예약→대출, 대출→예약 상태 전이 및 동기화 처리를 서비스/도메인 이벤트에 별도 구현해야 함.",
                                    "coupling": "예약/대출 상태 및 대기열 관리 등 도서별 동시성 이슈 조율 필요.",
                                    "consistency": "예약/대출간 연관 로직에 대한 일관성 보장이 집계 경계 밖에서 보장되어야 함.",
                                    "encapsulation": "예약과 대출 프로세스 전환 로직이 외부로 노출될 가능성 존재.",
                                    "complexity": "집계 경계 간 동기화/트랜잭션 처리가 추가적으로 필요해짐.",
                                    "independence": "예약과 대출 간 상호 이벤트 의존성이 존재하므로 완전한 독립은 어려움.",
                                    "performance": "예약-대출 상태 변화가 빈번할 경우 여러 집계 접근에 따른 I/O 비용 증가."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "LoanAndReservation",
                                    "alias": "대출/예약/반납 관리",
                                    "displayName": "대출/예약/반납 관리",
                                    "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                                    "aggregates": [
                                        {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        },
                                        {
                                            "name": "Member",
                                            "alias": "회원"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                        "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                                        "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                                        "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "LoanStatus",
                                                "alias": "대출 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            },
                                            {
                                                "name": "MemberReference",
                                                "alias": "회원 참조",
                                                "referencedAggregate": {
                                                    "name": "Member",
                                                    "alias": "회원"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "ReservationStatus",
                                                "alias": "예약 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "BookReference",
                                                "alias": "도서 참조",
                                                "referencedAggregate": {
                                                    "name": "Book",
                                                    "alias": "도서"
                                                }
                                            },
                                            {
                                                "name": "MemberReference",
                                                "alias": "회원 참조",
                                                "referencedAggregate": {
                                                    "name": "Member",
                                                    "alias": "회원"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Member",
                                            "alias": "회원"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "MemberStatus",
                                                "alias": "회원 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "LoanReference",
                                                "alias": "대출 참조",
                                                "referencedAggregate": {
                                                    "name": "Loan",
                                                    "alias": "대출"
                                                }
                                            },
                                            {
                                                "name": "ReservationReference",
                                                "alias": "예약 참조",
                                                "referencedAggregate": {
                                                    "name": "Reservation",
                                                    "alias": "예약"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "회원 정보와 대출/예약 기록을 회원 집계에 집중시켜 회원 기반 도서 이용 관리가 명확해짐.",
                                    "coupling": "회원 집계가 대출, 예약 집계와 느슨하게 연결되어 변경/확장에 유리함.",
                                    "consistency": "회원별 대출/예약 한도, 상태 변경 등의 일관성 규칙을 회원 Aggregate 단위로 강하게 유지 가능.",
                                    "encapsulation": "회원 도메인의 상태, 대출/예약 이력 등 민감 정보 관리가 Aggregate 내부에 집중됨.",
                                    "complexity": "회원/대출/예약 각자의 책임이 분리되어 도메인 복잡도 분산.",
                                    "independence": "회원, 대출, 예약 Aggregate별로 독립적 확장 및 마이크로서비스 분리가 가능함.",
                                    "performance": "회원 중심의 대출/예약/연체 현황 조회 등 다양한 조회 요구에 최적화 가능."
                                },
                                "cons": {
                                    "cohesion": "회원, 대출, 예약 집계 간 참조 및 동기화 포인트가 증가하여 연관 로직이 분산됨.",
                                    "coupling": "대출, 예약, 회원 상태 변경의 상호 의존에 따른 복합 이벤트 처리 로직 필요.",
                                    "consistency": "대출/예약이 회원과 완전히 분리되어 처리될 경우 실시간 트랜잭션 일관성 확보가 어려움.",
                                    "encapsulation": "회원 집계가 지나치게 커질 경우 도메인 혼란 발생 가능.",
                                    "complexity": "각 집계 간 연결과 이벤트 발행/구독 로직으로 전반적 시스템 복잡도 증가.",
                                    "independence": "회원 집계 확장 시 대출/예약 집계의 데이터 동기화 설계가 중요해짐.",
                                    "performance": "다수 집계간 조인이나 연관 데이터 접근 시 성능 저하 우려."
                                },
                                "isAIRecommended": true,
                                "boundedContext": {
                                    "name": "LoanAndReservation",
                                    "alias": "대출/예약/반납 관리",
                                    "displayName": "대출/예약/반납 관리",
                                    "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                                    "aggregates": [
                                        {
                                            "name": "Loan",
                                            "alias": "대출"
                                        },
                                        {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        },
                                        {
                                            "name": "Member",
                                            "alias": "회원"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                        "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                                        "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                                        "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                            }
                        ],
                        "conclusions": "옵션 1은 트랜잭션 일관성과 도메인 단순성이 중요할 때 적합하며, 단일 집계로 대출 프로세스를 통합 관리하고자 할 때 선택합니다. 옵션 2는 대출과 예약의 책임과 라이프사이클을 분리하여 관리하려는 조직에 적합하며, 비즈니스 확장성과 유지보수성을 높일 수 있습니다. 옵션 3은 회원, 대출, 예약 기능을 각자의 집계로 분리하여 회원 기반의 대출·예약·연체 통제와 확장성에 중점을 둘 때 가장 권장되는 설계로, 도메인 규칙과 조직적 분업, 다양한 쿼리 최적화에 유리하므로 기본값으로 선정하였습니다.",
                        "defaultOptionIndex": 2,
                        "inference": "\n\n주요 도메인 흐름과 이벤트, DDL, 누적된 도서 관리 Aggregate 정보를 분석하여 대출/예약/반납 라이프사이클의 트랜잭션 경계를 도출하였다. 도서 및 이력 관련 Aggregate는 이미 존재하므로, 본 컨텍스트에서는 대출, 예약, 회원 및 연체/대출이력 관리의 응집도를 중심으로 3가지 옵션을 도출하였다. 각 옵션은 집계의 개수와 경계가 다르며, 트랜잭션 일관성, 이벤트 연계, 유지보수 및 독립성에 차이가 있다."
                    }
                ],
                "draftUIInfos": {
                    "leftBoundedContextCount": 0,
                    "directMessage": "Generating options for 대출/예약/반납 관리 Bounded Context... (7909 characters generated)",
                    "progress": 100
                },
                "isGeneratorButtonEnabled": true,
                "boundedContextVersion": 1,
                "retryInputs": {
                    "initialInputs": [
                        {
                            "boundedContext": {
                                "name": "LibraryBookManagement",
                                "alias": "도서 관리",
                                "displayName": "도서 관리",
                                "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                                "aggregates": [
                                    {
                                        "name": "Book",
                                        "alias": "도서"
                                    },
                                    {
                                        "name": "BookStatusHistory",
                                        "alias": "도서 상태 이력"
                                    }
                                ],
                                "requirements": {
                                    "userStory": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                    "ddl": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);",
                                    "event": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}\n{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}",
                                    "eventNames": "BookRegistered, BookRegistrationFailedDueToDuplicateISBN, BookStatusChanged, BookDiscarded 이벤트가 발생할 수 있어."
                                }
                            },
                            "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                        },
                        {
                            "boundedContext": {
                                "name": "LoanAndReservation",
                                "alias": "대출/예약/반납 관리",
                                "displayName": "대출/예약/반납 관리",
                                "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                                "aggregates": [
                                    {
                                        "name": "Loan",
                                        "alias": "대출"
                                    },
                                    {
                                        "name": "Reservation",
                                        "alias": "예약"
                                    },
                                    {
                                        "name": "Member",
                                        "alias": "회원"
                                    }
                                ],
                                "requirements": {
                                    "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                    "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                                    "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                                    "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                                }
                            },
                            "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                        }
                    ],
                    "initialAccumulatedDrafts": {
                        "LibraryBookManagement": [
                            {
                                "aggregate": {
                                    "name": "Book",
                                    "alias": "도서"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "BookStatusHistory",
                                    "alias": "도서 상태 이력"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            }
                        ],
                        "LoanAndReservation": [
                            {
                                "aggregate": {
                                    "name": "Loan",
                                    "alias": "대출"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "Reservation",
                                    "alias": "예약"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "Member",
                                    "alias": "회원"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            }
                        ]
                    }
                },
                "selectedOptionItem": {
                    "LibraryBookManagement": {
                        "structure": [
                            {
                                "aggregate": {
                                    "name": "Book",
                                    "alias": "도서"
                                },
                                "enumerations": [
                                    {
                                        "name": "BookStatus",
                                        "alias": "도서 상태"
                                    },
                                    {
                                        "name": "BookCategory",
                                        "alias": "도서 카테고리"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "LoanReference",
                                        "alias": "대출 참조",
                                        "referencedAggregate": {
                                            "name": "Loan",
                                            "alias": "대출"
                                        }
                                    },
                                    {
                                        "name": "ReservationReference",
                                        "alias": "예약 참조",
                                        "referencedAggregate": {
                                            "name": "Reservation",
                                            "alias": "예약"
                                        }
                                    },
                                    {
                                        "name": "MemberReference",
                                        "alias": "회원 참조",
                                        "referencedAggregate": {
                                            "name": "Member",
                                            "alias": "회원"
                                        }
                                    },
                                    {
                                        "name": "BookStatusHistoryRecord",
                                        "alias": "도서 상태 이력",
                                        "referencedAggregateName": ""
                                    }
                                ]
                            }
                        ],
                        "pros": {
                            "cohesion": "모든 도서 관련 상태, 이력, 참조를 하나의 Aggregate에서 관리하여 도서 단위 업무에 대한 일관성과 집중도가 높음.",
                            "coupling": "외부 컨텍스트(Loan, Reservation, Member) 참조는 VO를 통해 단방향으로 명확히 분리되어 Aggregate간 의존도가 최소화됨.",
                            "consistency": "ISBN 중복 체크, 상태 변경, 이력 기록 등 핵심 비즈니스 불변식을 하나의 트랜잭션에서 안전하게 보장할 수 있음.",
                            "encapsulation": "상태 변화와 관련 규칙, 이력 기록이 Book 내부에 숨겨져 일관성 있게 처리됨.",
                            "complexity": "상대적으로 단일 도메인 객체 구조로 개발과 유지보수의 복잡도가 낮음.",
                            "independence": "Book 단위로 서비스 확장이 가능해 외부 Aggregate 변화 영향이 제한적임.",
                            "performance": "도서 상태 및 이력 질의, 상태 변경 트랜잭션이 한 Aggregate 내에서 빠르게 처리됨."
                        },
                        "cons": {
                            "cohesion": "상태 이력, 대출 참조 등 이질적 성격의 속성이 모두 Book에 묶여 있어 도메인 내 결합도가 다소 높아질 수 있음.",
                            "coupling": "도서 이력 또는 외부 참조 구조가 복잡해질 경우 Book 자체가 비대해질 수 있음.",
                            "consistency": "상태 변경, 이력 기록, 참조 동시 변경이 많은 경우 트랜잭션 경계가 과하게 넓어질 수 있음.",
                            "encapsulation": "외부 연동 이벤트(대출/예약) 처리 규칙이 Book에 집중되어 도메인 로직이 무거워질 수 있음.",
                            "complexity": "단일 Aggregate에 다양한 역할이 추가되면 모델이 점차 복잡해질 수 있음.",
                            "independence": "이력 관리나 외부 참조와 같은 부분적 변경이 전체 Book에 영향을 줄 수 있음.",
                            "performance": "이력 데이터가 누적될수록 Book 객체의 사이즈가 커져 장기적으로 성능 저하 우려."
                        },
                        "isAIRecommended": false,
                        "boundedContext": {
                            "name": "LibraryBookManagement",
                            "alias": "도서 관리",
                            "displayName": "도서 관리",
                            "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다.",
                            "aggregates": [
                                {
                                    "name": "Book",
                                    "alias": "도서"
                                },
                                {
                                    "name": "BookStatusHistory",
                                    "alias": "도서 상태 이력"
                                }
                            ],
                            "requirements": {
                                "userStory": "'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                "ddl": "-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);",
                                "event": "{\"name\":\"BookRegistered\",\"displayName\":\"도서 등록됨\",\"actor\":\"도서 관리자\",\"level\":1,\"description\":\"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\"inputs\":[\"도서명\",\"ISBN(13자리)\",\"저자\",\"출판사\",\"카테고리\",\"ISBN 중복 확인 완료\"],\"outputs\":[\"신규 도서 등록\",\"도서 상태: 대출가능\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookRegistrationFailedDueToDuplicateISBN\",\"displayName\":\"ISBN 중복으로 도서 등록 실패됨\",\"actor\":\"도서 관리자\",\"level\":2,\"description\":\"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\"inputs\":[\"ISBN(13자리)\",\"중복 ISBN 존재\"],\"outputs\":[\"도서 등록 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"BookStatusChanged\",\"displayName\":\"도서 상태 변경됨\",\"actor\":\"도서 관리 시스템\",\"level\":3,\"description\":\"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\"inputs\":[\"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\"해당 도서\"],\"outputs\":[\"도서 상태 값 갱신\"],\"nextEvents\":[]}\n{\"name\":\"BookDiscarded\",\"displayName\":\"도서 폐기됨\",\"actor\":\"도서 관리자\",\"level\":4,\"description\":\"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\"inputs\":[\"폐기 사유\",\"해당 도서\"],\"outputs\":[\"도서 상태: 폐기\",\"대출 불가 처리\"],\"nextEvents\":[\"BookStatusChanged\"]}",
                                "eventNames": "BookRegistered, BookRegistrationFailedDueToDuplicateISBN, BookStatusChanged, BookDiscarded 이벤트가 발생할 수 있어."
                            }
                        },
                        "description": "# Bounded Context Overview: LibraryBookManagement (도서 관리)\n\n## Role\n도서의 등록, 상태 관리(대출가능/대출중/예약중/폐기 등), ISBN 중복 체크, 도서 정보 관리, 도서 상태 변경 이력 기록 등을 담당한다. 도서 상태 변화의 기준과 도서별 이력을 관리하여 도서의 현황을 체계적으로 관리한다.\n\n## Key Events\n- BookRegistered\n- BookRegistrationFailedDueToDuplicateISBN\n- BookStatusChanged\n- BookDiscarded\n\n# Requirements\n\n## userStory\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"BookRegistered\",\n  \"displayName\": \"도서 등록됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 1,\n  \"description\": \"도서 관리자가 새로운 도서를 도서명, ISBN, 저자, 출판사, 카테고리 정보와 함께 등록함. 등록된 도서는 '대출가능' 상태가 됨.\",\n  \"inputs\": [\n    \"도서명\",\n    \"ISBN(13자리)\",\n    \"저자\",\n    \"출판사\",\n    \"카테고리\",\n    \"ISBN 중복 확인 완료\"\n  ],\n  \"outputs\": [\n    \"신규 도서 등록\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookRegistrationFailedDueToDuplicateISBN\",\n  \"displayName\": \"ISBN 중복으로 도서 등록 실패됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 2,\n  \"description\": \"입력한 ISBN이 이미 존재하는 ISBN과 중복되어 도서 등록에 실패함.\",\n  \"inputs\": [\n    \"ISBN(13자리)\",\n    \"중복 ISBN 존재\"\n  ],\n  \"outputs\": [\n    \"도서 등록 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookStatusChanged\",\n  \"displayName\": \"도서 상태 변경됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 3,\n  \"description\": \"도서의 상태가 등록, 대출, 반납, 예약, 폐기 등 이벤트에 따라 자동으로 변경됨.\",\n  \"inputs\": [\n    \"상태 변경 트리거 이벤트(등록, 대출, 반납, 예약, 폐기 등)\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태 값 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"BookDiscarded\",\n  \"displayName\": \"도서 폐기됨\",\n  \"actor\": \"도서 관리자\",\n  \"level\": 4,\n  \"description\": \"도서가 훼손 또는 분실 등 사유로 폐기 처리되어, 해당 도서는 더 이상 대출이 불가함.\",\n  \"inputs\": [\n    \"폐기 사유\",\n    \"해당 도서\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 폐기\",\n    \"대출 불가 처리\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n## DDL\n\n```sql\n-- 도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n\n```sql\n-- 도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/예약/반납 관리 (LoanAndReservation)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 도서 상태 알림 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 도서가 폐기, 신규 등록, 상태 변화 등 중요한 변화가 있을 때 별도의 알림이 필요할 수 있으므로, 도서 관리에서 발생하는 이벤트를 알림 PBC에서 구독한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변화 시 reservation-notification PBC에 이벤트를 발행해 사용자에게 알림을 제공한다."
                    },
                    "LoanAndReservation": {
                        "structure": [
                            {
                                "aggregate": {
                                    "name": "Loan",
                                    "alias": "대출"
                                },
                                "enumerations": [
                                    {
                                        "name": "LoanStatus",
                                        "alias": "대출 상태"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "BookReference",
                                        "alias": "도서 참조",
                                        "referencedAggregate": {
                                            "name": "Book",
                                            "alias": "도서"
                                        }
                                    },
                                    {
                                        "name": "Member",
                                        "alias": "회원"
                                    }
                                ]
                            }
                        ],
                        "pros": {
                            "cohesion": "대출 프로세스와 이력, 상태, 연장·반납 등 대출 라이프사이클에 필요한 모든 비즈니스 규칙이 단일 Aggregate에서 일관되게 관리되어 업무 규칙 누수 위험이 낮음.",
                            "coupling": "대출과 관련된 변경(연장/반납/연체) 처리가 별도 집계와의 연동 없이 Aggregate 내부에서 트랜잭션 단위로 일어남.",
                            "consistency": "대출 상태 변경, 연장, 반납, 연체 등 주요 이벤트가 모두 원자적으로 처리되어 도메인 불일치 위험이 최소화됨.",
                            "encapsulation": "연장 및 연체 비즈니스 로직과 이력 관리를 Loan 내에 숨겨 외부에 내부 구현을 노출하지 않음.",
                            "complexity": "구조가 단순하여 학습 및 유지보수가 쉬움.",
                            "independence": "대출 도메인의 독립적 확장이 용이하며, 외부 변경(회원/도서 관리 등)과의 결합도가 낮음.",
                            "performance": "대출 현황 및 상태 변경 쿼리가 단일 집계에서 즉시 처리되어 실시간 트랜잭션 처리 효율이 높음."
                        },
                        "cons": {
                            "cohesion": "예약, 연체 등과의 비즈니스 분리가 부족하여 도메인이 커질수록 하나의 집계가 과도하게 비대해질 수 있음.",
                            "coupling": "예약 처리나 알림 등 외부 프로세스와의 이벤트/연동 로직이 Loan 집계에 집중될 가능성이 있음.",
                            "consistency": "예약, 알림, 연체 관리 등 연관 기능이 분리되지 않아 부분적인 일관성/확장성 한계가 존재.",
                            "encapsulation": "복잡도가 증가하면 도메인별 로직이 내부에 혼재될 우려가 있음.",
                            "complexity": "Loan에 모든 로직이 집중되어 대출/연장/반납/연체 관련 코드가 복잡해질 수 있음.",
                            "independence": "예약, 연체 등 별도 책임이 필요한 확장 요구에 유연하지 않음.",
                            "performance": "대출 처리 건수가 급증하면 하나의 집계에서 동시성 병목이 발생할 수 있음."
                        },
                        "isAIRecommended": false,
                        "boundedContext": {
                            "name": "LoanAndReservation",
                            "alias": "대출/예약/반납 관리",
                            "displayName": "대출/예약/반납 관리",
                            "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다.",
                            "aggregates": [
                                {
                                    "name": "Loan",
                                    "alias": "대출"
                                },
                                {
                                    "name": "Reservation",
                                    "alias": "예약"
                                },
                                {
                                    "name": "Member",
                                    "alias": "회원"
                                }
                            ],
                            "requirements": {
                                "userStory": "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.",
                                "ddl": "-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);",
                                "event": "{\"name\":\"LoanApplied\",\"displayName\":\"도서 대출 신청됨\",\"actor\":\"회원\",\"level\":5,\"description\":\"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"대출 기간 선택(7/14/30일)\",\"도서 상태: 대출가능\"],\"outputs\":[\"대출 신청 기록\",\"도서 대출 프로세스 시작\"],\"nextEvents\":[\"LoanCompleted\"]}\n{\"name\":\"LoanApplicationFailedBookNotAvailable\",\"displayName\":\"대출 불가(도서 미대출가능)\",\"actor\":\"회원\",\"level\":6,\"description\":\"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\"inputs\":[\"도서 상태: 대출중/예약중/폐기\"],\"outputs\":[\"대출 불가 알림\",\"예약 가능 안내(해당시)\"],\"nextEvents\":[\"ReservationApplied\"]}\n{\"name\":\"LoanCompleted\",\"displayName\":\"도서 대출 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":7,\"description\":\"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\"inputs\":[\"대출 신청 승인\",\"도서 상태: 대출가능\"],\"outputs\":[\"도서 상태: 대출중\",\"대출 이력 기록\",\"반납예정일 생성\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"ReservationApplied\",\"displayName\":\"도서 예약 신청됨\",\"actor\":\"회원\",\"level\":8,\"description\":\"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\"inputs\":[\"회원번호\",\"이름\",\"도서명/ISBN\",\"도서 상태: 대출중/예약중\"],\"outputs\":[\"도서 예약 기록\",\"예약 대기열 추가\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"BookReturned\",\"displayName\":\"도서 반납됨\",\"actor\":\"회원\",\"level\":9,\"description\":\"회원이 대출한 도서를 반납 처리함.\",\"inputs\":[\"대출 이력\",\"도서\",\"회원\"],\"outputs\":[\"도서 반납 처리\",\"반납일 기록\"],\"nextEvents\":[\"ReturnCompleted\"]}\n{\"name\":\"ReturnCompleted\",\"displayName\":\"도서 반납 완료됨\",\"actor\":\"도서 관리 시스템\",\"level\":10,\"description\":\"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\"inputs\":[\"반납된 도서\",\"예약자 여부\"],\"outputs\":[\"도서 상태 변경\",\"반납 이력 기록\"],\"nextEvents\":[\"BookStatusChanged\"]}\n{\"name\":\"LoanExtended\",\"displayName\":\"도서 대출 연장됨\",\"actor\":\"회원\",\"level\":11,\"description\":\"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\"inputs\":[\"대출 이력\",\"도서 상태: 대출중\",\"연장 조건 충족 여부\"],\"outputs\":[\"대출 기간 연장\",\"반납예정일 변경\"],\"nextEvents\":[]}\n{\"name\":\"LoanExtensionFailedDueToReservation\",\"displayName\":\"예약자 존재로 대출 연장 불가\",\"actor\":\"회원\",\"level\":12,\"description\":\"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\"inputs\":[\"대출 이력\",\"도서 상태: 예약중\",\"예약자 존재\"],\"outputs\":[\"연장 불가 알림\"],\"nextEvents\":[]}\n{\"name\":\"LoanOverdueDetected\",\"displayName\":\"대출 연체 발생됨\",\"actor\":\"도서 관리 시스템\",\"level\":13,\"description\":\"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\"inputs\":[\"반납 예정일 경과\",\"도서 미반납\"],\"outputs\":[\"대출 상태: 연체\",\"회원 연체 알림\"],\"nextEvents\":[]}",
                                "eventNames": "LoanApplied, LoanApplicationFailedBookNotAvailable, LoanCompleted, ReservationApplied, BookReturned, ReturnCompleted, LoanExtended, LoanExtensionFailedDueToReservation, LoanOverdueDetected 이벤트가 발생할 수 있어."
                            }
                        },
                        "description": "# Bounded Context Overview: LoanAndReservation (대출/예약/반납 관리)\n\n## Role\n회원의 대출/반납/연장/예약 등 대출 라이프사이클 전반을 담당하며, 도서 대출 상태와 예약 대기열을 관리하고, 대출 이력 및 연체 관리까지 포함한다. 도서의 상태 변화와 회원 상호작용을 프로세스 중심으로 처리한다.\n\n## Key Events\n- LoanApplied\n- LoanApplicationFailedBookNotAvailable\n- LoanCompleted\n- ReservationApplied\n- BookReturned\n- ReturnCompleted\n- LoanExtended\n- LoanExtensionFailedDueToReservation\n- LoanOverdueDetected\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을 만들려고 해.\n\n'도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야 해.\n\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야 해.\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야 해. 만약 예약자가 있는 도서가 반납되면, 해당 도서는 '예약중' 상태로 변경되어야 해.\n\n각 도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할 수 있어야 해.\n\n## Event\n\n```json\n{\n  \"name\": \"LoanApplied\",\n  \"displayName\": \"도서 대출 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 5,\n  \"description\": \"회원이 회원번호 및 이름으로 본인 확인 후 대출할 도서를 선택하고, 대출 기간을 지정하여 대출을 신청함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"대출 기간 선택(7/14/30일)\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"대출 신청 기록\",\n    \"도서 대출 프로세스 시작\"\n  ],\n  \"nextEvents\": [\n    \"LoanCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanApplicationFailedBookNotAvailable\",\n  \"displayName\": \"대출 불가(도서 미대출가능)\",\n  \"actor\": \"회원\",\n  \"level\": 6,\n  \"description\": \"대출 신청 시 도서가 이미 대출 중이거나 폐기되어 대출이 불가함을 알림.\",\n  \"inputs\": [\n    \"도서 상태: 대출중/예약중/폐기\"\n  ],\n  \"outputs\": [\n    \"대출 불가 알림\",\n    \"예약 가능 안내(해당시)\"\n  ],\n  \"nextEvents\": [\n    \"ReservationApplied\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanCompleted\",\n  \"displayName\": \"도서 대출 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 7,\n  \"description\": \"대출 신청이 승인되어, 도서의 상태가 '대출중'으로 변경되고, 대출 이력이 등록됨.\",\n  \"inputs\": [\n    \"대출 신청 승인\",\n    \"도서 상태: 대출가능\"\n  ],\n  \"outputs\": [\n    \"도서 상태: 대출중\",\n    \"대출 이력 기록\",\n    \"반납예정일 생성\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReservationApplied\",\n  \"displayName\": \"도서 예약 신청됨\",\n  \"actor\": \"회원\",\n  \"level\": 8,\n  \"description\": \"회원이 대출 중인 도서에 대해 예약 신청을 완료함.\",\n  \"inputs\": [\n    \"회원번호\",\n    \"이름\",\n    \"도서명/ISBN\",\n    \"도서 상태: 대출중/예약중\"\n  ],\n  \"outputs\": [\n    \"도서 예약 기록\",\n    \"예약 대기열 추가\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"BookReturned\",\n  \"displayName\": \"도서 반납됨\",\n  \"actor\": \"회원\",\n  \"level\": 9,\n  \"description\": \"회원이 대출한 도서를 반납 처리함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서\",\n    \"회원\"\n  ],\n  \"outputs\": [\n    \"도서 반납 처리\",\n    \"반납일 기록\"\n  ],\n  \"nextEvents\": [\n    \"ReturnCompleted\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReturnCompleted\",\n  \"displayName\": \"도서 반납 완료됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 10,\n  \"description\": \"도서 반납 처리가 완료되어, 예약자가 있으면 도서 상태를 '예약중'으로, 없으면 '대출가능'으로 변경함.\",\n  \"inputs\": [\n    \"반납된 도서\",\n    \"예약자 여부\"\n  ],\n  \"outputs\": [\n    \"도서 상태 변경\",\n    \"반납 이력 기록\"\n  ],\n  \"nextEvents\": [\n    \"BookStatusChanged\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtended\",\n  \"displayName\": \"도서 대출 연장됨\",\n  \"actor\": \"회원\",\n  \"level\": 11,\n  \"description\": \"대출 중인 도서에 대해 회원이 연장 신청을 하여, 연장 조건 충족 시 대출 기간이 연장됨.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 대출중\",\n    \"연장 조건 충족 여부\"\n  ],\n  \"outputs\": [\n    \"대출 기간 연장\",\n    \"반납예정일 변경\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanExtensionFailedDueToReservation\",\n  \"displayName\": \"예약자 존재로 대출 연장 불가\",\n  \"actor\": \"회원\",\n  \"level\": 12,\n  \"description\": \"해당 도서에 예약자가 있어 대출 연장이 불가함.\",\n  \"inputs\": [\n    \"대출 이력\",\n    \"도서 상태: 예약중\",\n    \"예약자 존재\"\n  ],\n  \"outputs\": [\n    \"연장 불가 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"LoanOverdueDetected\",\n  \"displayName\": \"대출 연체 발생됨\",\n  \"actor\": \"도서 관리 시스템\",\n  \"level\": 13,\n  \"description\": \"반납 예정일이 지나도록 도서가 반납되지 않아 연체 상태로 전환됨.\",\n  \"inputs\": [\n    \"반납 예정일 경과\",\n    \"도서 미반납\"\n  ],\n  \"outputs\": [\n    \"대출 상태: 연체\",\n    \"회원 연체 알림\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\n-- 회원 테이블\nCREATE TABLE members (\n    member_id VARCHAR(20) PRIMARY KEY,\n    member_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    address TEXT,\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED') DEFAULT 'ACTIVE',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n```\n\n```sql\n-- 대출 테이블\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n\n```sql\n-- 예약 테이블\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n\n```sql\n-- 대출 이력 테이블 (모든 대출 활동의 상세 로그)\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n\n```sql\n-- 연체 관리 테이블\nCREATE TABLE overdue_records (\n    overdue_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    overdue_days INT NOT NULL,\n    fine_amount DECIMAL(10,2) DEFAULT 0.00,\n    fine_paid BOOLEAN DEFAULT FALSE,\n    notification_count INT DEFAULT 0,\n    last_notification_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_overdue_days (overdue_days)\n);\n```\n\n\n## Context Relations\n\n### 도서 상태 변경 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (LibraryBookManagement)\n- **Reason**: 도서의 대출/반납/예약 등의 이벤트에 따라 도서 상태가 바뀌어야 하므로, 상태 변경 이벤트를 Pub/Sub으로 발행해 도서 관리에서 상태를 갱신하도록 분리하였다.\n- **Interaction Pattern**: 대출/예약/반납 관리에서 도서 상태 관련 이벤트를 발행하고, 도서 관리가 이를 구독하여 Book 상태를 갱신한다.\n\n### 예약/알림 연동 Pub/Sub\n- **Type**: Pub/Sub\n- **Direction**: sends to 예약 및 알림 서비스 (reservation-notification)\n- **Reason**: 알림 및 예약 기능은 범용 서비스로 PBC에 위임하므로, 대출/예약/반납 관리에서 예약 또는 알림 트리거 이벤트를 발행하면 reservation-notification PBC가 구독하여 알림/예약 처리를 한다.\n- **Interaction Pattern**: 대출, 반납, 연체 등 이벤트가 발생할 때 예약 및 알림 서비스(PBC)로 이벤트를 발행해 알림/예약을 자동화한다."
                    }
                }
            }
        ]
    },
    "handoverSystem": {
        "selectedStructureOption": {
            "boundedContexts": [
                {
                    "name": "HandoverManagement",
                    "alias": "인수인계 관리",
                    "importance": "Core Domain",
                    "complexity": "0.85",
                    "differentiation": "0.95",
                    "implementationStrategy": "Rich Domain Model",
                    "aggregates": [
                        {
                            "name": "HandoverProcess",
                            "alias": "인수인계 프로세스"
                        },
                        {
                            "name": "HandoverDetail",
                            "alias": "인수인계 상세"
                        },
                        {
                            "name": "HandoverResult",
                            "alias": "인수인계 결과"
                        }
                    ],
                    "events": [
                        "HandOverInfoErrorReported",
                        "ReceiverRegistered",
                        "HandoverDetailRegistered",
                        "HandoverResultRegistered",
                        "HandoverApprovalRequested",
                        "HandoverApproved",
                        "HandoverRejected"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                        },
                        {
                            "type": "DDL",
                            "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';"
                        }
                    ],
                    "role": "인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다."
                },
                {
                    "name": "UserOrganization",
                    "alias": "사용자 및 조직 관리",
                    "importance": "Supporting Domain",
                    "complexity": "0.6",
                    "differentiation": "0.45",
                    "implementationStrategy": "Transaction Script",
                    "aggregates": [
                        {
                            "name": "User",
                            "alias": "사용자"
                        },
                        {
                            "name": "Role",
                            "alias": "역할"
                        },
                        {
                            "name": "Corporation",
                            "alias": "법인"
                        }
                    ],
                    "events": [
                        "HandOverInfoErrorReviewed",
                        "HandOverInfoCorrected",
                        "UserRoleRegistered",
                        "UserRoleChanged",
                        "AuthorizationConfigured",
                        "PersonalInfoSyncedWithHR"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "DDL",
                            "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );"
                        },
                        {
                            "type": "DDL",
                            "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                        },
                        {
                            "type": "DDL",
                            "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                        }
                    ],
                    "role": "법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다."
                },
                {
                    "name": "CommunicationNotification",
                    "alias": "커뮤니케이션 및 알림",
                    "importance": "Supporting Domain",
                    "complexity": "0.7",
                    "differentiation": "0.4",
                    "implementationStrategy": "Transaction Script",
                    "aggregates": [
                        {
                            "name": "MailTemplate",
                            "alias": "이메일 템플릿"
                        },
                        {
                            "name": "Guide",
                            "alias": "안내문구"
                        }
                    ],
                    "events": [
                        "GuideRegistered",
                        "GuideModified",
                        "MailTemplateRegistered",
                        "MailTemplateModified",
                        "StageMailSent"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "DDL",
                            "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';"
                        }
                    ],
                    "role": "업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다."
                },
                {
                    "name": "document-management",
                    "alias": "문서관리(PBC)",
                    "importance": "Generic Domain",
                    "complexity": "0.8",
                    "differentiation": "0.2",
                    "implementationStrategy": "PBC: document-management",
                    "aggregates": [
                        {
                            "name": "Document",
                            "alias": "문서"
                        }
                    ],
                    "events": [
                        "HandoverDocumentAttached",
                        "HandoverDocumentAttachmentNotified"
                    ],
                    "requirements": [
                        {
                            "type": "userStory",
                            "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                        },
                        {
                            "type": "userStory",
                            "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverDocumentAttached\",\"displayName\":\"인수인계 문서 첨부됨\",\"actor\":\"HandOverUser\",\"level\":9,\"description\":\"인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.\",\"inputs\":[\"첨부 문서\",\"문서 분류 정보\"],\"outputs\":[\"문서 첨부 내역\"],\"nextEvents\":[\"HandoverDocumentAttachmentNotified\"]}"
                        },
                        {
                            "type": "Event",
                            "text": "{\"name\":\"HandoverDocumentAttachmentNotified\",\"displayName\":\"인수인계 문서 첨부 알림 발송됨\",\"actor\":\"System\",\"level\":10,\"description\":\"시스템이 인수자에게 문서 첨부 사실을 알림.\",\"inputs\":[\"첨부 문서 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                        },
                        {
                            "type": "DDL",
                            "text": "comment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';"
                        }
                    ],
                    "role": "문서관리(PBC)에서는 인수인계에 첨부되는 중요 문서의 저장, 검색, 연동을 담당한다."
                }
            ],
            "relations": [
                {
                    "name": "HandoverManagement-UserOrganization",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "UserOrganization",
                        "alias": "사용자 및 조직 관리"
                    },
                    "downStream": {
                        "name": "HandoverManagement",
                        "alias": "인수인계 관리"
                    }
                },
                {
                    "name": "HandoverManagement-CommunicationNotification",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "HandoverManagement",
                        "alias": "인수인계 관리"
                    },
                    "downStream": {
                        "name": "CommunicationNotification",
                        "alias": "커뮤니케이션 및 알림"
                    }
                },
                {
                    "name": "HandoverManagement-document-management",
                    "type": "Request/Response",
                    "upStream": {
                        "name": "HandoverManagement",
                        "alias": "인수인계 관리"
                    },
                    "downStream": {
                        "name": "document-management",
                        "alias": "문서관리(PBC)"
                    }
                },
                {
                    "name": "UserOrganization-CommunicationNotification",
                    "type": "Pub/Sub",
                    "upStream": {
                        "name": "UserOrganization",
                        "alias": "사용자 및 조직 관리"
                    },
                    "downStream": {
                        "name": "CommunicationNotification",
                        "alias": "커뮤니케이션 및 알림"
                    }
                }
            ],
            "thoughts": "PBC 우선 매칭 원칙에 따라 문서 첨부 및 관리는 기존 PBC(document-management)로 지정해 Generic Domain으로 분리하였다. 프로세스(인수인계 업무 플로우)와 도메인 복잡성(프로세스 내 주체 간 상호작용)을 고려해 인수인계 관리(핵심 프로세스)와 사용자/조직 관리(지원 인프라)를 분리하였고, 알림/이메일/가이드 등 커뮤니케이션 기능은 프로세스별 독립적 운영과 기술적 응집도를 위해 별도의 커뮤니케이션 및 알림 컨텍스트로 나누었다. 각 컨텍스트는 이벤트 기반(pub/sub)으로 약결합, PBC는 외부 의존성(request/response)으로 처리하여, 도메인 전문성-기술적 응집-업무/기능적 경계 기준을 모두 반영하였다.",
            "explanations": [
                {
                    "sourceContext": "사용자 및 조직 관리",
                    "targetContext": "인수인계 관리",
                    "relationType": "Pub/Sub",
                    "reason": "사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.",
                    "interactionPattern": "사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다."
                },
                {
                    "sourceContext": "인수인계 관리",
                    "targetContext": "커뮤니케이션 및 알림",
                    "relationType": "Pub/Sub",
                    "reason": "인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.",
                    "interactionPattern": "인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리."
                },
                {
                    "sourceContext": "인수인계 관리",
                    "targetContext": "문서관리(PBC)",
                    "relationType": "Request/Response",
                    "reason": "문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.",
                    "interactionPattern": "인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                },
                {
                    "sourceContext": "사용자 및 조직 관리",
                    "targetContext": "커뮤니케이션 및 알림",
                    "relationType": "Pub/Sub",
                    "reason": "조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.",
                    "interactionPattern": "사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                }
            ],
            "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
            "currentGeneratedLength": 5913
        },
        "resultDevideBoundedContext": {
            "도메인 복잡도 분리+프로세스(value stream) 기반 분리": {
                "boundedContexts": [
                    {
                        "name": "HandoverManagement",
                        "alias": "인수인계 관리",
                        "importance": "Core Domain",
                        "complexity": "0.85",
                        "differentiation": "0.95",
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "HandoverProcess",
                                "alias": "인수인계 프로세스"
                            },
                            {
                                "name": "HandoverDetail",
                                "alias": "인수인계 상세"
                            },
                            {
                                "name": "HandoverResult",
                                "alias": "인수인계 결과"
                            }
                        ],
                        "events": [
                            "HandOverInfoErrorReported",
                            "ReceiverRegistered",
                            "HandoverDetailRegistered",
                            "HandoverResultRegistered",
                            "HandoverApprovalRequested",
                            "HandoverApproved",
                            "HandoverRejected"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                            },
                            {
                                "type": "DDL",
                                "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';"
                            }
                        ],
                        "role": "인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다."
                    },
                    {
                        "name": "UserOrganization",
                        "alias": "사용자 및 조직 관리",
                        "importance": "Supporting Domain",
                        "complexity": "0.6",
                        "differentiation": "0.45",
                        "implementationStrategy": "Transaction Script",
                        "aggregates": [
                            {
                                "name": "User",
                                "alias": "사용자"
                            },
                            {
                                "name": "Role",
                                "alias": "역할"
                            },
                            {
                                "name": "Corporation",
                                "alias": "법인"
                            }
                        ],
                        "events": [
                            "HandOverInfoErrorReviewed",
                            "HandOverInfoCorrected",
                            "UserRoleRegistered",
                            "UserRoleChanged",
                            "AuthorizationConfigured",
                            "PersonalInfoSyncedWithHR"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "DDL",
                                "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );"
                            },
                            {
                                "type": "DDL",
                                "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                            },
                            {
                                "type": "DDL",
                                "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                            }
                        ],
                        "role": "법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다."
                    },
                    {
                        "name": "CommunicationNotification",
                        "alias": "커뮤니케이션 및 알림",
                        "importance": "Supporting Domain",
                        "complexity": "0.7",
                        "differentiation": "0.4",
                        "implementationStrategy": "Transaction Script",
                        "aggregates": [
                            {
                                "name": "MailTemplate",
                                "alias": "이메일 템플릿"
                            },
                            {
                                "name": "Guide",
                                "alias": "안내문구"
                            }
                        ],
                        "events": [
                            "GuideRegistered",
                            "GuideModified",
                            "MailTemplateRegistered",
                            "MailTemplateModified",
                            "StageMailSent"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "DDL",
                                "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';"
                            }
                        ],
                        "role": "업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다."
                    },
                    {
                        "name": "document-management",
                        "alias": "문서관리(PBC)",
                        "importance": "Generic Domain",
                        "complexity": "0.8",
                        "differentiation": "0.2",
                        "implementationStrategy": "PBC: document-management",
                        "aggregates": [
                            {
                                "name": "Document",
                                "alias": "문서"
                            }
                        ],
                        "events": [
                            "HandoverDocumentAttached",
                            "HandoverDocumentAttachmentNotified"
                        ],
                        "requirements": [
                            {
                                "type": "userStory",
                                "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                            },
                            {
                                "type": "userStory",
                                "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverDocumentAttached\",\"displayName\":\"인수인계 문서 첨부됨\",\"actor\":\"HandOverUser\",\"level\":9,\"description\":\"인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.\",\"inputs\":[\"첨부 문서\",\"문서 분류 정보\"],\"outputs\":[\"문서 첨부 내역\"],\"nextEvents\":[\"HandoverDocumentAttachmentNotified\"]}"
                            },
                            {
                                "type": "Event",
                                "text": "{\"name\":\"HandoverDocumentAttachmentNotified\",\"displayName\":\"인수인계 문서 첨부 알림 발송됨\",\"actor\":\"System\",\"level\":10,\"description\":\"시스템이 인수자에게 문서 첨부 사실을 알림.\",\"inputs\":[\"첨부 문서 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                            },
                            {
                                "type": "DDL",
                                "text": "comment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';"
                            }
                        ],
                        "role": "문서관리(PBC)에서는 인수인계에 첨부되는 중요 문서의 저장, 검색, 연동을 담당한다."
                    }
                ],
                "relations": [
                    {
                        "name": "HandoverManagement-UserOrganization",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "UserOrganization",
                            "alias": "사용자 및 조직 관리"
                        },
                        "downStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        }
                    },
                    {
                        "name": "HandoverManagement-CommunicationNotification",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        },
                        "downStream": {
                            "name": "CommunicationNotification",
                            "alias": "커뮤니케이션 및 알림"
                        }
                    },
                    {
                        "name": "HandoverManagement-document-management",
                        "type": "Request/Response",
                        "upStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        },
                        "downStream": {
                            "name": "document-management",
                            "alias": "문서관리(PBC)"
                        }
                    },
                    {
                        "name": "UserOrganization-CommunicationNotification",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "UserOrganization",
                            "alias": "사용자 및 조직 관리"
                        },
                        "downStream": {
                            "name": "CommunicationNotification",
                            "alias": "커뮤니케이션 및 알림"
                        }
                    }
                ],
                "thoughts": "PBC 우선 매칭 원칙에 따라 문서 첨부 및 관리는 기존 PBC(document-management)로 지정해 Generic Domain으로 분리하였다. 프로세스(인수인계 업무 플로우)와 도메인 복잡성(프로세스 내 주체 간 상호작용)을 고려해 인수인계 관리(핵심 프로세스)와 사용자/조직 관리(지원 인프라)를 분리하였고, 알림/이메일/가이드 등 커뮤니케이션 기능은 프로세스별 독립적 운영과 기술적 응집도를 위해 별도의 커뮤니케이션 및 알림 컨텍스트로 나누었다. 각 컨텍스트는 이벤트 기반(pub/sub)으로 약결합, PBC는 외부 의존성(request/response)으로 처리하여, 도메인 전문성-기술적 응집-업무/기능적 경계 기준을 모두 반영하였다.",
                "explanations": [
                    {
                        "sourceContext": "사용자 및 조직 관리",
                        "targetContext": "인수인계 관리",
                        "relationType": "Pub/Sub",
                        "reason": "사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.",
                        "interactionPattern": "사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다."
                    },
                    {
                        "sourceContext": "인수인계 관리",
                        "targetContext": "커뮤니케이션 및 알림",
                        "relationType": "Pub/Sub",
                        "reason": "인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.",
                        "interactionPattern": "인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리."
                    },
                    {
                        "sourceContext": "인수인계 관리",
                        "targetContext": "문서관리(PBC)",
                        "relationType": "Request/Response",
                        "reason": "문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.",
                        "interactionPattern": "인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                    },
                    {
                        "sourceContext": "사용자 및 조직 관리",
                        "targetContext": "커뮤니케이션 및 알림",
                        "relationType": "Pub/Sub",
                        "reason": "조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.",
                        "interactionPattern": "사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                    }
                ],
                "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "currentGeneratedLength": 5913
            }
        },
        "boundedContextVersion": {
            "data": {
                "boundedContexts": [
                    {
                        "name": "HandoverManagement",
                        "alias": "인수인계 관리",
                        "importance": "Core Domain",
                        "complexity": "0.85",
                        "differentiation": "0.95",
                        "implementationStrategy": "Rich Domain Model",
                        "aggregates": [
                            {
                                "name": "HandoverProcess",
                                "alias": "인수인계 프로세스"
                            },
                            {
                                "name": "HandoverDetail",
                                "alias": "인수인계 상세"
                            },
                            {
                                "name": "HandoverResult",
                                "alias": "인수인계 결과"
                            }
                        ],
                        "events": [
                            "HandOverInfoErrorReported",
                            "ReceiverRegistered",
                            "HandoverDetailRegistered",
                            "HandoverResultRegistered",
                            "HandoverApprovalRequested",
                            "HandoverApproved",
                            "HandoverRejected"
                        ],
                        "requirements": [],
                        "role": "인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다."
                    },
                    {
                        "name": "UserOrganization",
                        "alias": "사용자 및 조직 관리",
                        "importance": "Supporting Domain",
                        "complexity": "0.6",
                        "differentiation": "0.45",
                        "implementationStrategy": "Transaction Script",
                        "aggregates": [
                            {
                                "name": "User",
                                "alias": "사용자"
                            },
                            {
                                "name": "Role",
                                "alias": "역할"
                            },
                            {
                                "name": "Corporation",
                                "alias": "법인"
                            }
                        ],
                        "events": [
                            "HandOverInfoErrorReviewed",
                            "HandOverInfoCorrected",
                            "UserRoleRegistered",
                            "UserRoleChanged",
                            "AuthorizationConfigured",
                            "PersonalInfoSyncedWithHR"
                        ],
                        "requirements": [],
                        "role": "법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다."
                    },
                    {
                        "name": "CommunicationNotification",
                        "alias": "커뮤니케이션 및 알림",
                        "importance": "Supporting Domain",
                        "complexity": "0.7",
                        "differentiation": "0.4",
                        "implementationStrategy": "Transaction Script",
                        "aggregates": [
                            {
                                "name": "MailTemplate",
                                "alias": "이메일 템플릿"
                            },
                            {
                                "name": "Guide",
                                "alias": "안내문구"
                            }
                        ],
                        "events": [
                            "GuideRegistered",
                            "GuideModified",
                            "MailTemplateRegistered",
                            "MailTemplateModified",
                            "StageMailSent"
                        ],
                        "requirements": [],
                        "role": "업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다."
                    },
                    {
                        "name": "document-management",
                        "alias": "문서관리(PBC)",
                        "importance": "Generic Domain",
                        "complexity": "0.8",
                        "differentiation": "0.2",
                        "implementationStrategy": "PBC: document-management",
                        "aggregates": [
                            {
                                "name": "Document",
                                "alias": "문서"
                            }
                        ],
                        "events": [
                            "HandoverDocumentAttached",
                            "HandoverDocumentAttachmentNotified"
                        ],
                        "requirements": [],
                        "role": "문서관리(PBC)에서는 인수인계에 첨부되는 중요 문서의 저장, 검색, 연동을 담당한다."
                    }
                ],
                "relations": [
                    {
                        "name": "HandoverManagement-UserOrganization",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "UserOrganization",
                            "alias": "사용자 및 조직 관리"
                        },
                        "downStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        }
                    },
                    {
                        "name": "HandoverManagement-CommunicationNotification",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        },
                        "downStream": {
                            "name": "CommunicationNotification",
                            "alias": "커뮤니케이션 및 알림"
                        }
                    },
                    {
                        "name": "HandoverManagement-document-management",
                        "type": "Request/Response",
                        "upStream": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리"
                        },
                        "downStream": {
                            "name": "document-management",
                            "alias": "문서관리(PBC)"
                        }
                    },
                    {
                        "name": "UserOrganization-CommunicationNotification",
                        "type": "Pub/Sub",
                        "upStream": {
                            "name": "UserOrganization",
                            "alias": "사용자 및 조직 관리"
                        },
                        "downStream": {
                            "name": "CommunicationNotification",
                            "alias": "커뮤니케이션 및 알림"
                        }
                    }
                ],
                "thoughts": "PBC 우선 매칭 원칙에 따라 문서 첨부 및 관리는 기존 PBC(document-management)로 지정해 Generic Domain으로 분리하였다. 프로세스(인수인계 업무 플로우)와 도메인 복잡성(프로세스 내 주체 간 상호작용)을 고려해 인수인계 관리(핵심 프로세스)와 사용자/조직 관리(지원 인프라)를 분리하였고, 알림/이메일/가이드 등 커뮤니케이션 기능은 프로세스별 독립적 운영과 기술적 응집도를 위해 별도의 커뮤니케이션 및 알림 컨텍스트로 나누었다. 각 컨텍스트는 이벤트 기반(pub/sub)으로 약결합, PBC는 외부 의존성(request/response)으로 처리하여, 도메인 전문성-기술적 응집-업무/기능적 경계 기준을 모두 반영하였다.",
                "explanations": [
                    {
                        "sourceContext": "사용자 및 조직 관리",
                        "targetContext": "인수인계 관리",
                        "relationType": "Pub/Sub",
                        "reason": "사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.",
                        "interactionPattern": "사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다."
                    },
                    {
                        "sourceContext": "인수인계 관리",
                        "targetContext": "커뮤니케이션 및 알림",
                        "relationType": "Pub/Sub",
                        "reason": "인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.",
                        "interactionPattern": "인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리."
                    },
                    {
                        "sourceContext": "인수인계 관리",
                        "targetContext": "문서관리(PBC)",
                        "relationType": "Request/Response",
                        "reason": "문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.",
                        "interactionPattern": "인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                    },
                    {
                        "sourceContext": "사용자 및 조직 관리",
                        "targetContext": "커뮤니케이션 및 알림",
                        "relationType": "Pub/Sub",
                        "reason": "조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.",
                        "interactionPattern": "사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                    }
                ],
                "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "currentGeneratedLength": 5913
            },
            "version": 1,
            "aspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리"
        },
        "draftOptions": {
            "HandoverManagement": {
                "structure": [
                    {
                        "aggregate": {
                            "name": "HandoverProcess",
                            "alias": "인수인계 프로세스"
                        },
                        "enumerations": [
                            {
                                "name": "HandoverStatus",
                                "alias": "인수인계 상태"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "UserReference",
                                "alias": "사용자 참조",
                                "referencedAggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                }
                            },
                            {
                                "name": "CorporationReference",
                                "alias": "법인 참조",
                                "referencedAggregate": {
                                    "name": "Corporation",
                                    "alias": "법인"
                                }
                            }
                        ]
                    },
                    {
                        "aggregate": {
                            "name": "HandoverDetail",
                            "alias": "인수인계 상세"
                        },
                        "enumerations": [],
                        "valueObjects": [
                            {
                                "name": "Document",
                                "alias": "문서",
                                "referencedAggregateName": ""
                            }
                        ]
                    },
                    {
                        "aggregate": {
                            "name": "HandoverResult",
                            "alias": "인수인계 결과"
                        },
                        "enumerations": [
                            {
                                "name": "ApprovalStatus",
                                "alias": "승인 상태"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "ApproverReference",
                                "alias": "승인자 참조",
                                "referencedAggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                }
                            }
                        ]
                    }
                ],
                "pros": {
                    "cohesion": "프로세스, 상세, 결과를 역할별로 분리하여 각 Aggregate가 단일 책임 원칙을 따른다.",
                    "coupling": "프로세스와 상세/결과의 라이프사이클이 분리되어 트랜잭션 경계를 유연하게 설정할 수 있다.",
                    "consistency": "주요 상태 변경과 승인/반려가 각 Aggregate 단위로 나뉘어 동시처리와 데이터 일관성 관리가 용이하다.",
                    "encapsulation": "각 Aggregate가 자신의 비즈니스 규칙과 데이터를 효과적으로 숨기고 관리한다.",
                    "complexity": "각 도메인 객체별 업무 기능을 세분화하여 도메인 모델이 명확해지고 확장성이 좋아진다.",
                    "independence": "상세 등록, 결과 승인 등 각 기능별로 독립적인 유지보수 및 확장 가능성이 높다.",
                    "performance": "상세 정보나 결과만 빈번하게 변경되는 경우 불필요한 데이터 잠금/로드 없이 필요한 부분만 처리할 수 있다."
                },
                "cons": {
                    "cohesion": "프로세스와 상세/결과 간 비즈니스 규칙이 나뉘어 구현 복잡도가 증가한다.",
                    "coupling": "프로세스의 변경 사항이 상세/결과 Aggregate에도 영향을 미칠 수 있어 상호 조정 필요성이 있다.",
                    "consistency": "프로세스와 상세/결과 간 원자적 변경이 필요할 경우 어플리케이션 서비스 단의 보상 논리 등 추가 구현이 필요하다.",
                    "encapsulation": "인수인계 전반의 흐름 제어 및 상태 검증이 분산되어 있어 전체 불변성 관리가 어려울 수 있다.",
                    "complexity": "전체 프로세스 조회/처리 시 여러 Aggregate를 조합해 사용해야 하므로 복합 쿼리 및 조정 로직이 늘어난다.",
                    "independence": "프로세스와 상세, 결과의 의존 관계가 존재해 완전한 독립은 어렵다.",
                    "performance": "전체 건 조회 시 여러 Aggregate 조인이나 별도 조회가 필요하여 조회 성능이 다소 저하될 수 있다."
                },
                "boundedContext": {
                    "name": "HandoverManagement",
                    "alias": "인수인계 관리",
                    "displayName": "인수인계 관리",
                    "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                    "aggregates": [
                        {
                            "name": "HandoverProcess",
                            "alias": "인수인계 프로세스"
                        },
                        {
                            "name": "HandoverDetail",
                            "alias": "인수인계 상세"
                        },
                        {
                            "name": "HandoverResult",
                            "alias": "인수인계 결과"
                        }
                    ],
                    "requirements": {
                        "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                        "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                        "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                    }
                },
                "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
            },
            "UserOrganization": {
                "structure": [
                    {
                        "aggregate": {
                            "name": "User",
                            "alias": "사용자"
                        },
                        "enumerations": [
                            {
                                "name": "UserStatus",
                                "alias": "사용자 상태"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "CorporationReference",
                                "alias": "법인 참조",
                                "referencedAggregate": {
                                    "name": "Corporation",
                                    "alias": "법인"
                                }
                            },
                            {
                                "name": "RoleReference",
                                "alias": "역할 참조",
                                "referencedAggregate": {
                                    "name": "Role",
                                    "alias": "역할"
                                }
                            },
                            {
                                "name": "HRInfo",
                                "alias": "인사 정보",
                                "referencedAggregateName": ""
                            }
                        ]
                    },
                    {
                        "aggregate": {
                            "name": "Role",
                            "alias": "역할"
                        },
                        "enumerations": [
                            {
                                "name": "RoleType",
                                "alias": "역할 유형"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "MenuAuthorizationReference",
                                "alias": "메뉴권한 참조",
                                "referencedAggregate": {
                                    "name": "MenuAuthorization",
                                    "alias": "메뉴권한"
                                }
                            }
                        ]
                    },
                    {
                        "aggregate": {
                            "name": "Corporation",
                            "alias": "법인"
                        },
                        "enumerations": [],
                        "valueObjects": []
                    },
                    {
                        "aggregate": {
                            "name": "MenuAuthorization",
                            "alias": "메뉴권한"
                        },
                        "enumerations": [
                            {
                                "name": "MenuType",
                                "alias": "메뉴 유형"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "MenuCodeReference",
                                "alias": "메뉴코드 참조",
                                "referencedAggregate": {
                                    "name": "MenuCode",
                                    "alias": "메뉴코드"
                                }
                            }
                        ]
                    },
                    {
                        "aggregate": {
                            "name": "MenuCode",
                            "alias": "메뉴코드"
                        },
                        "enumerations": [
                            {
                                "name": "CodeType",
                                "alias": "코드 유형"
                            }
                        ],
                        "valueObjects": []
                    }
                ],
                "pros": {
                    "cohesion": "사용자, 역할, 법인, 메뉴권한, 메뉴코드 등 각 도메인별 세부 책임이 Aggregate 단위로 명확히 분리된다.",
                    "coupling": "MenuAuthorization, MenuCode를 별도 Aggregate로 분리하여 역할, 권한 변경이 User/Role과 독립적으로 이뤄진다.",
                    "consistency": "권한/메뉴/코드 등 변경이 각각의 트랜잭션 경계 내에서 일관되게 보장된다.",
                    "encapsulation": "조직, 역할, 메뉴권한 등 각 도메인 규칙이 해당 Aggregate 내부에 은닉되어 유지된다.",
                    "complexity": "도메인 복잡도가 기능별로 분산되어 개별 로직 파악 및 유지보수 용이성이 높다.",
                    "independence": "Menu, Code 등 세부 관리 기능을 독립적으로 확장/변경/배포할 수 있다.",
                    "performance": "대규모 권한/코드 기반 조회, 변경 작업에서 병렬처리 및 확장성이 뛰어나다."
                },
                "cons": {
                    "cohesion": "Aggregate 수가 증가해 각 객체 간 참조 및 이벤트 설계가 복잡해진다.",
                    "coupling": "User-Role-MenuAuthorization-MenuCode 간 참조 체인이 길어질 수 있다.",
                    "consistency": "권한/메뉴/코드가 동시에 바뀌는 업무의 트랜잭션 일관성 보장이 상대적으로 복잡해진다.",
                    "encapsulation": "업무 전체 플로우에서 데이터 통합 관점의 은닉성이 감소할 수 있다.",
                    "complexity": "Aggregate 설계와 이벤트/동기화 로직이 복잡해져 전체적인 도메인 이해 난이도가 높아진다.",
                    "independence": "업무 특성상 권한-메뉴-코드 변경 이벤트가 상호 연동되어 완전 독립 개발/배포에 제한이 있다.",
                    "performance": "복합 조회 시 여러 Aggregate 조인 및 연속 참조로 인해 조회 성능이 저하될 수 있다."
                },
                "boundedContext": {
                    "name": "UserOrganization",
                    "alias": "사용자 및 조직 관리",
                    "displayName": "사용자 및 조직 관리",
                    "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                    "aggregates": [
                        {
                            "name": "User",
                            "alias": "사용자"
                        },
                        {
                            "name": "Role",
                            "alias": "역할"
                        },
                        {
                            "name": "Corporation",
                            "alias": "법인"
                        }
                    ],
                    "requirements": {
                        "userStory": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.",
                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );",
                        "event": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}\n{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}\n{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}",
                        "eventNames": "HandOverInfoErrorReviewed, HandOverInfoCorrected, UserRoleRegistered, UserRoleChanged, AuthorizationConfigured, PersonalInfoSyncedWithHR 이벤트가 발생할 수 있어."
                    }
                },
                "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
            },
            "CommunicationNotification": {
                "structure": [
                    {
                        "aggregate": {
                            "name": "Communication",
                            "alias": "커뮤니케이션 통합"
                        },
                        "enumerations": [
                            {
                                "name": "GuideScope",
                                "alias": "안내문구 적용범위"
                            },
                            {
                                "name": "TemplateStage",
                                "alias": "템플릿 적용단계"
                            },
                            {
                                "name": "MailSendStatus",
                                "alias": "메일 발송 상태"
                            }
                        ],
                        "valueObjects": [
                            {
                                "name": "GuideInfo",
                                "alias": "안내문구 정보",
                                "referencedAggregateName": ""
                            },
                            {
                                "name": "MailTemplateInfo",
                                "alias": "이메일 템플릿 정보",
                                "referencedAggregateName": ""
                            },
                            {
                                "name": "MailSendRecord",
                                "alias": "메일 발송 내역",
                                "referencedAggregateName": ""
                            },
                            {
                                "name": "RecipientReference",
                                "alias": "수신자 참조",
                                "referencedAggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                }
                            },
                            {
                                "name": "SenderReference",
                                "alias": "발신자 참조",
                                "referencedAggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                }
                            },
                            {
                                "name": "RelatedHandoverProcessReference",
                                "alias": "관련 인수인계 참조",
                                "referencedAggregate": {
                                    "name": "HandoverProcess",
                                    "alias": "인수인계 프로세스"
                                }
                            }
                        ]
                    }
                ],
                "pros": {
                    "cohesion": "모든 커뮤니케이션 기능이 하나의 Aggregate로 묶여서 업무 전체 흐름과 상태를 한 번에 관리할 수 있습니다.",
                    "coupling": "내부에서 모든 연관정보를 관리하므로 외부와의 데이터 이동/변환 비용이 최소화됩니다.",
                    "consistency": "메일 발송, 템플릿, 안내문구 변경 등 전체 커뮤니케이션 업무가 하나의 트랜잭션으로 일관성 있게 처리됩니다.",
                    "encapsulation": "통합 Aggregate 내부에서 상태, 이력, 템플릿, 안내문구 규칙을 완전히 숨길 수 있습니다.",
                    "complexity": "통합적인 설계로 복잡한 워크플로우/업무 규칙 구현에 유리합니다.",
                    "independence": "한 Aggregate만 관리하면 되므로 배포·운영·변경이 단일 포인트로 집중됩니다.",
                    "performance": "단일 Aggregate 접근만으로 전체 커뮤니케이션 데이터를 일괄 조회할 수 있어, 단건 조회/수정이 빠릅니다."
                },
                "cons": {
                    "cohesion": "안내문구, 템플릿, 발송이력 등 서로 다른 라이프사이클과 담당 조직이 하나의 집합체로 묶여 응집도가 저하될 수 있습니다.",
                    "coupling": "업무 영역별로 확장/변경 시 전체 Aggregate가 영향을 받아 변경 비용이 급격히 증가합니다.",
                    "consistency": "동시 메일 발송, 템플릿/가이드 변경 등이 한 Aggregate 내에서 충돌/경합을 유발할 수 있습니다.",
                    "encapsulation": "업무별 분리된 규칙·정책의 변경이 Aggregate 전체 설계에 파급될 위험이 큽니다.",
                    "complexity": "Aggregate 내부 구조가 방대해져서 유지보수, 테스트, 장애 분석이 어려워집니다.",
                    "independence": "특정 커뮤니케이션 기능만 개별적으로 확장하거나 리팩토링하기가 어렵습니다.",
                    "performance": "동시성 많은 메일 발송·조회 시 큰 Aggregate가 병목을 유발할 수 있습니다."
                },
                "boundedContext": {
                    "name": "CommunicationNotification",
                    "alias": "커뮤니케이션 및 알림",
                    "displayName": "커뮤니케이션 및 알림",
                    "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                    "aggregates": [
                        {
                            "name": "MailTemplate",
                            "alias": "이메일 템플릿"
                        },
                        {
                            "name": "Guide",
                            "alias": "안내문구"
                        }
                    ],
                    "requirements": {
                        "userStory": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.",
                        "ddl": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';",
                        "event": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}",
                        "eventNames": "GuideRegistered, GuideModified, MailTemplateRegistered, MailTemplateModified, StageMailSent 이벤트가 발생할 수 있어."
                    }
                },
                "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
            }
        },
        "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n",
        "state": {
            "generator": "RequirementsMappingGenerator",
            "isAIModelSelected": false,
            "firstMessageIsTyping": true,
            "secondMessageIsTyping": false,
            "userStory": "",
            "communicationStyle": "Choreography",
            "aggregateDetail": false,
            "uiStyle": null
        },
        "messages": [
            {
                "uniqueId": "1a2113f71a99fbd443caa654add1faab",
                "type": "processAnalysis",
                "isAnalizing": false,
                "isSummarizeStarted": false,
                "isGeneratingBoundedContext": false,
                "isStartMapping": false,
                "processingRate": 0,
                "content": {
                    "type": "ANALYSIS_RESULT",
                    "projectName": "Requirements Analysis",
                    "content": {
                        "elements": {
                            "35890c72-5a1a-b429-aeab-4e780257f937": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "35890c72-5a1a-b429-aeab-4e780257f937",
                                "name": "HandOverUser",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "35890c72-5a1a-b429-aeab-4e780257f937",
                                    "x": 150,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "34488f8c-70cb-6054-853e-c437a2a8dc50": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "34488f8c-70cb-6054-853e-c437a2a8dc50",
                                "name": "ReceiverUser",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "34488f8c-70cb-6054-853e-c437a2a8dc50",
                                    "x": 150,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "e4ddf218-98ff-d128-c001-deebca433c1f": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "e4ddf218-98ff-d128-c001-deebca433c1f",
                                "name": "ApproverUser",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "e4ddf218-98ff-d128-c001-deebca433c1f",
                                    "x": 150,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "0151b98a-49b6-38a8-3a97-2cd55c20a0e8": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "0151b98a-49b6-38a8-3a97-2cd55c20a0e8",
                                "name": "SystemAdmin",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "0151b98a-49b6-38a8-3a97-2cd55c20a0e8",
                                    "x": 150,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "fc150803-a171-550e-067d-346773a4b39f": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "fc150803-a171-550e-067d-346773a4b39f",
                                "name": "SuperAdmin",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "fc150803-a171-550e-067d-346773a4b39f",
                                    "x": 150,
                                    "y": 1150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "34caad58-e735-d748-e16b-64669d676966": {
                                "_type": "org.uengine.modeling.model.Actor",
                                "id": "34caad58-e735-d748-e16b-64669d676966",
                                "name": "System",
                                "oldName": "",
                                "displayName": "",
                                "description": "",
                                "author": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Actor",
                                    "id": "34caad58-e735-d748-e16b-64669d676966",
                                    "x": 150,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}"
                                },
                                "boundedContext": {}
                            },
                            "415f0769-1513-c4eb-1471-fe7d037d7c55": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                "visibility": "public",
                                "name": "HandOverInfoErrorReported",
                                "oldName": "",
                                "displayName": "인계자 정보 오류 보고됨",
                                "namePascalCase": "HandOverInfoErrorReported",
                                "nameCamelCase": "handOverInfoErrorReported",
                                "namePlural": "",
                                "description": "인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                    "x": 300,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                    "x": 300,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "32e60e15-ba25-6ce0-27b8-c11d40e150b8": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                "visibility": "public",
                                "name": "ReceiverRegistered",
                                "oldName": "",
                                "displayName": "인수자 등록됨",
                                "namePascalCase": "ReceiverRegistered",
                                "nameCamelCase": "receiverRegistered",
                                "namePlural": "",
                                "description": "인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                    "x": 500,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                    "x": 500,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                "visibility": "public",
                                "name": "HandoverDetailRegistered",
                                "oldName": "",
                                "displayName": "인수인계 상세 내용 등록됨",
                                "namePascalCase": "HandoverDetailRegistered",
                                "nameCamelCase": "handoverDetailRegistered",
                                "namePlural": "",
                                "description": "인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                    "x": 700,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                    "x": 700,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "a1178695-6361-524a-3f38-d18b582583fc": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                "visibility": "public",
                                "name": "HandoverDocumentAttached",
                                "oldName": "",
                                "displayName": "인수인계 문서 첨부됨",
                                "namePascalCase": "HandoverDocumentAttached",
                                "nameCamelCase": "handoverDocumentAttached",
                                "namePlural": "",
                                "description": "인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                    "x": 900,
                                    "y": 150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                    "x": 900,
                                    "y": 150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "6cce949f-83ae-c661-669e-e4f853e70e4d": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                "visibility": "public",
                                "name": "HandOverInfoErrorReviewed",
                                "oldName": "",
                                "displayName": "인계자 정보 오류 검토됨",
                                "namePascalCase": "HandOverInfoErrorReviewed",
                                "nameCamelCase": "handOverInfoErrorReviewed",
                                "namePlural": "",
                                "description": "관리자가 인계자로부터 접수된 정보 오류 보고를 검토함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "x": 300,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "x": 300,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "db1b1a4b-6c80-5c97-6038-0803e93a69db": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                "visibility": "public",
                                "name": "HandOverInfoCorrected",
                                "oldName": "",
                                "displayName": "인계자 정보 수정됨",
                                "namePascalCase": "HandOverInfoCorrected",
                                "nameCamelCase": "handOverInfoCorrected",
                                "namePlural": "",
                                "description": "관리자가 인계자 정보를 올바르게 수정함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "x": 500,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "x": 500,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "6b223b99-3002-40fc-dae8-3708359c2492": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "6b223b99-3002-40fc-dae8-3708359c2492",
                                "visibility": "public",
                                "name": "GuideRegistered",
                                "oldName": "",
                                "displayName": "안내문구 등록됨",
                                "namePascalCase": "GuideRegistered",
                                "nameCamelCase": "guideRegistered",
                                "namePlural": "",
                                "description": "시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6b223b99-3002-40fc-dae8-3708359c2492",
                                    "x": 700,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "6b223b99-3002-40fc-dae8-3708359c2492",
                                    "x": 700,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "0ce33b77-ef60-a177-365a-1a7588e30950": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "0ce33b77-ef60-a177-365a-1a7588e30950",
                                "visibility": "public",
                                "name": "GuideModified",
                                "oldName": "",
                                "displayName": "안내문구 수정됨",
                                "namePascalCase": "GuideModified",
                                "nameCamelCase": "guideModified",
                                "namePlural": "",
                                "description": "시스템 관리자가 기존 안내문구를 수정함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "0ce33b77-ef60-a177-365a-1a7588e30950",
                                    "x": 900,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "0ce33b77-ef60-a177-365a-1a7588e30950",
                                    "x": 900,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "ac68d1cd-e176-8782-8710-dcf1702cf64b": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "ac68d1cd-e176-8782-8710-dcf1702cf64b",
                                "visibility": "public",
                                "name": "MailTemplateRegistered",
                                "oldName": "",
                                "displayName": "이메일 템플릿 등록됨",
                                "namePascalCase": "MailTemplateRegistered",
                                "nameCamelCase": "mailTemplateRegistered",
                                "namePlural": "",
                                "description": "시스템 관리자가 이메일 템플릿을 신규로 등록함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "ac68d1cd-e176-8782-8710-dcf1702cf64b",
                                    "x": 1100,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "ac68d1cd-e176-8782-8710-dcf1702cf64b",
                                    "x": 1100,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "e63e1371-3beb-0bea-d234-a9e4bf225b1d": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "e63e1371-3beb-0bea-d234-a9e4bf225b1d",
                                "visibility": "public",
                                "name": "MailTemplateModified",
                                "oldName": "",
                                "displayName": "이메일 템플릿 수정됨",
                                "namePascalCase": "MailTemplateModified",
                                "nameCamelCase": "mailTemplateModified",
                                "namePlural": "",
                                "description": "시스템 관리자가 기존 이메일 템플릿을 수정함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "e63e1371-3beb-0bea-d234-a9e4bf225b1d",
                                    "x": 1300,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "e63e1371-3beb-0bea-d234-a9e4bf225b1d",
                                    "x": 1300,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "217a791f-4d38-c8c6-a3d4-5a63b54fabe2": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "217a791f-4d38-c8c6-a3d4-5a63b54fabe2",
                                "visibility": "public",
                                "name": "AuthorizationConfigured",
                                "oldName": "",
                                "displayName": "권한/메뉴/코드 설정됨",
                                "namePascalCase": "AuthorizationConfigured",
                                "nameCamelCase": "authorizationConfigured",
                                "namePlural": "",
                                "description": "시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "217a791f-4d38-c8c6-a3d4-5a63b54fabe2",
                                    "x": 1500,
                                    "y": 900,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "217a791f-4d38-c8c6-a3d4-5a63b54fabe2",
                                    "x": 1500,
                                    "y": 900,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b0e35372-052a-761b-d155-ecea2343a17b": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                "visibility": "public",
                                "name": "HandOverInfoCorrectionNotified",
                                "oldName": "",
                                "displayName": "인계자 정보 수정 알림 발송됨",
                                "namePascalCase": "HandOverInfoCorrectionNotified",
                                "nameCamelCase": "handOverInfoCorrectionNotified",
                                "namePlural": "",
                                "description": "시스템이 인계자에게 정보 수정 사실을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                    "x": 300,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                    "x": 300,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                "visibility": "public",
                                "name": "ReceiverRegistrationNotified",
                                "oldName": "",
                                "displayName": "인수자 등록 알림 발송됨",
                                "namePascalCase": "ReceiverRegistrationNotified",
                                "nameCamelCase": "receiverRegistrationNotified",
                                "namePlural": "",
                                "description": "시스템이 인수자에게 등록 사실을 알리고, 관련 업무 인계 절차를 안내함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                    "x": 500,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                    "x": 500,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "9eb0d664-5923-2993-5d0b-6c08d0673138": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                "visibility": "public",
                                "name": "HandoverDetailRegistrationNotified",
                                "oldName": "",
                                "displayName": "인수인계 상세 내용 등록 알림 발송됨",
                                "namePascalCase": "HandoverDetailRegistrationNotified",
                                "nameCamelCase": "handoverDetailRegistrationNotified",
                                "namePlural": "",
                                "description": "시스템이 인수자에게 상세 내용이 등록되었음을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                    "x": 700,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                    "x": 700,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                "visibility": "public",
                                "name": "HandoverDocumentAttachmentNotified",
                                "oldName": "",
                                "displayName": "인수인계 문서 첨부 알림 발송됨",
                                "namePascalCase": "HandoverDocumentAttachmentNotified",
                                "nameCamelCase": "handoverDocumentAttachmentNotified",
                                "namePlural": "",
                                "description": "시스템이 인수자에게 문서 첨부 사실을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                    "x": 900,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                    "x": 900,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "3e50b1cd-6091-67a9-39c2-bf99d2f8b014": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                "visibility": "public",
                                "name": "HandoverResultRegistrationNotified",
                                "oldName": "",
                                "displayName": "인수인계 결과 등록 알림 발송됨",
                                "namePascalCase": "HandoverResultRegistrationNotified",
                                "nameCamelCase": "handoverResultRegistrationNotified",
                                "namePlural": "",
                                "description": "시스템이 인계자 및 상위자에게 결과 등록 사실을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                    "x": 1100,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                    "x": 1100,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "6d3fb018-f76d-d826-b188-fb0b544adc1b": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                "visibility": "public",
                                "name": "HandoverApprovalNotificationSent",
                                "oldName": "",
                                "displayName": "인수인계 승인 요청 알림 발송됨",
                                "namePascalCase": "HandoverApprovalNotificationSent",
                                "nameCamelCase": "handoverApprovalNotificationSent",
                                "namePlural": "",
                                "description": "시스템이 승인자에게 승인 요청 사실을 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                    "x": 1300,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                    "x": 1300,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "7798c866-9350-fcf1-0029-1cb6c3dff6bf": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                "visibility": "public",
                                "name": "HandoverApprovalResultNotified",
                                "oldName": "",
                                "displayName": "인수인계 승인/반려 결과 알림 발송됨",
                                "namePascalCase": "HandoverApprovalResultNotified",
                                "nameCamelCase": "handoverApprovalResultNotified",
                                "namePlural": "",
                                "description": "시스템이 인수자 및 인계자에게 승인/반려 결과를 신속하게 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "x": 1500,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "x": 1500,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "1d25656a-9a05-90aa-5d93-328c8299a4ad": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "1d25656a-9a05-90aa-5d93-328c8299a4ad",
                                "visibility": "public",
                                "name": "StageMailSent",
                                "oldName": "",
                                "displayName": "업무 단계별 메일 발송됨",
                                "namePascalCase": "StageMailSent",
                                "nameCamelCase": "stageMailSent",
                                "namePlural": "",
                                "description": "시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "1d25656a-9a05-90aa-5d93-328c8299a4ad",
                                    "x": 1700,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "1d25656a-9a05-90aa-5d93-328c8299a4ad",
                                    "x": 1700,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "488e92df-df9d-1b61-36d5-98586382e6a9": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                "visibility": "public",
                                "name": "UserRoleChangeNotified",
                                "oldName": "",
                                "displayName": "법인별 사용자 역할 변경 알림 발송됨",
                                "namePascalCase": "UserRoleChangeNotified",
                                "nameCamelCase": "userRoleChangeNotified",
                                "namePlural": "",
                                "description": "시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "x": 1900,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "x": 1900,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b8a7d1d6-8895-d968-1dbd-9a8e826d67f4": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b8a7d1d6-8895-d968-1dbd-9a8e826d67f4",
                                "visibility": "public",
                                "name": "PersonalInfoSyncedWithHR",
                                "oldName": "",
                                "displayName": "개인 정보가 HR 시스템과 동기화됨",
                                "namePascalCase": "PersonalInfoSyncedWithHR",
                                "nameCamelCase": "personalInfoSyncedWithHR",
                                "namePlural": "",
                                "description": "시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b8a7d1d6-8895-d968-1dbd-9a8e826d67f4",
                                    "x": 2100,
                                    "y": 1400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b8a7d1d6-8895-d968-1dbd-9a8e826d67f4",
                                    "x": 2100,
                                    "y": 1400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                "visibility": "public",
                                "name": "HandoverResultRegistered",
                                "oldName": "",
                                "displayName": "인수인계 결과 등록됨",
                                "namePascalCase": "HandoverResultRegistered",
                                "nameCamelCase": "handoverResultRegistered",
                                "namePlural": "",
                                "description": "인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                    "x": 300,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                    "x": 300,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "aadbd265-2025-7b0a-997f-ba8b690cf051": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                "visibility": "public",
                                "name": "HandoverApprovalRequested",
                                "oldName": "",
                                "displayName": "인수인계 승인 요청됨",
                                "namePascalCase": "HandoverApprovalRequested",
                                "nameCamelCase": "handoverApprovalRequested",
                                "namePlural": "",
                                "description": "인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                    "x": 500,
                                    "y": 400,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                    "x": 500,
                                    "y": 400,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "a68db9a7-2899-ddda-ca8e-054a0a8c4db9": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                "visibility": "public",
                                "name": "HandoverApproved",
                                "oldName": "",
                                "displayName": "인수인계 승인됨",
                                "namePascalCase": "HandoverApproved",
                                "nameCamelCase": "handoverApproved",
                                "namePlural": "",
                                "description": "승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                    "x": 300,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                    "x": 300,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "649b3e78-ba9e-a61a-425e-a0e49b7081b0": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                "visibility": "public",
                                "name": "HandoverRejected",
                                "oldName": "",
                                "displayName": "인수인계 반려됨",
                                "namePascalCase": "HandoverRejected",
                                "nameCamelCase": "handoverRejected",
                                "namePlural": "",
                                "description": "승인자가 인수인계 결과를 검토 후 반려 처리함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                    "x": 500,
                                    "y": 650,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                    "x": 500,
                                    "y": 650,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "b059106c-0f67-c15a-9846-090aca28fec1": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                "visibility": "public",
                                "name": "UserRoleRegistered",
                                "oldName": "",
                                "displayName": "법인별 사용자 및 역할 등록됨",
                                "namePascalCase": "UserRoleRegistered",
                                "nameCamelCase": "userRoleRegistered",
                                "namePlural": "",
                                "description": "슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                    "x": 300,
                                    "y": 1150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                    "x": 300,
                                    "y": 1150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            },
                            "9f571b8b-2cb2-6452-2293-5c7969b5d2ce": {
                                "_type": "org.uengine.modeling.model.Event",
                                "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                "visibility": "public",
                                "name": "UserRoleChanged",
                                "oldName": "",
                                "displayName": "법인별 사용자 역할 변경됨",
                                "namePascalCase": "UserRoleChanged",
                                "nameCamelCase": "userRoleChanged",
                                "namePlural": "",
                                "description": "슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.",
                                "author": null,
                                "aggregate": {},
                                "boundedContext": {},
                                "fieldDescriptors": [
                                    {
                                        "_type": "org.uengine.model.FieldDescriptor",
                                        "name": "id",
                                        "className": "Long",
                                        "nameCamelCase": "id",
                                        "namePascalCase": "Id",
                                        "isKey": true
                                    }
                                ],
                                "mirrorElement": null,
                                "elementView": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                    "x": 500,
                                    "y": 1150,
                                    "width": 100,
                                    "height": 100,
                                    "style": "{}",
                                    "angle": 0
                                },
                                "hexagonalView": {
                                    "_type": "org.uengine.modeling.model.EventHexagonal",
                                    "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                    "x": 500,
                                    "y": 1150,
                                    "subWidth": 100,
                                    "width": 20,
                                    "height": 20,
                                    "style": "{}"
                                },
                                "relationPolicyInfo": [],
                                "relationCommandInfo": [],
                                "trigger": "@PostPersist"
                            }
                        },
                        "relations": {
                            "5d290e00-1cd1-fa30-8baa-2507fd252bab": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "5d290e00-1cd1-fa30-8baa-2507fd252bab",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "5d290e00-1cd1-fa30-8baa-2507fd252bab",
                                "to": "5d290e00-1cd1-fa30-8baa-2507fd252bab",
                                "description": "",
                                "relationView": {
                                    "id": "5d290e00-1cd1-fa30-8baa-2507fd252bab",
                                    "value": "[[0,275],[2000,275]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,275],[2000,275]]"
                            },
                            "646dd202-aa65-e39c-c7b3-5c150e5c90ae": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "646dd202-aa65-e39c-c7b3-5c150e5c90ae",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "646dd202-aa65-e39c-c7b3-5c150e5c90ae",
                                "to": "646dd202-aa65-e39c-c7b3-5c150e5c90ae",
                                "description": "",
                                "relationView": {
                                    "id": "646dd202-aa65-e39c-c7b3-5c150e5c90ae",
                                    "value": "[[0,525],[2000,525]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,525],[2000,525]]"
                            },
                            "630a16d5-5af6-6c06-cc89-590de8261f94": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "630a16d5-5af6-6c06-cc89-590de8261f94",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "630a16d5-5af6-6c06-cc89-590de8261f94",
                                "to": "630a16d5-5af6-6c06-cc89-590de8261f94",
                                "description": "",
                                "relationView": {
                                    "id": "630a16d5-5af6-6c06-cc89-590de8261f94",
                                    "value": "[[0,775],[2000,775]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,775],[2000,775]]"
                            },
                            "e9493d6c-bcb7-de8f-6eeb-ae380babe763": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "e9493d6c-bcb7-de8f-6eeb-ae380babe763",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "e9493d6c-bcb7-de8f-6eeb-ae380babe763",
                                "to": "e9493d6c-bcb7-de8f-6eeb-ae380babe763",
                                "description": "",
                                "relationView": {
                                    "id": "e9493d6c-bcb7-de8f-6eeb-ae380babe763",
                                    "value": "[[0,1025],[2000,1025]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,1025],[2000,1025]]"
                            },
                            "7c97da56-d7f5-87ca-bb64-35161df2e495": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "7c97da56-d7f5-87ca-bb64-35161df2e495",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "7c97da56-d7f5-87ca-bb64-35161df2e495",
                                "to": "7c97da56-d7f5-87ca-bb64-35161df2e495",
                                "description": "",
                                "relationView": {
                                    "id": "7c97da56-d7f5-87ca-bb64-35161df2e495",
                                    "value": "[[0,1275],[2000,1275]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,1275],[2000,1275]]"
                            },
                            "4a654df0-f89e-e041-0e4e-350187789817": {
                                "_type": "org.uengine.modeling.model.Line",
                                "id": "4a654df0-f89e-e041-0e4e-350187789817",
                                "name": "",
                                "author": null,
                                "oldName": "",
                                "displayName": "",
                                "from": "4a654df0-f89e-e041-0e4e-350187789817",
                                "to": "4a654df0-f89e-e041-0e4e-350187789817",
                                "description": "",
                                "relationView": {
                                    "id": "4a654df0-f89e-e041-0e4e-350187789817",
                                    "value": "[[0,1525],[2000,1525]]"
                                },
                                "size": 10,
                                "color": "#cccccc",
                                "dashStyle": "3,3",
                                "imgSrc": "https://www.msaez.io:8081/static/image/symbol/edge.png",
                                "vertices": "[[0,1525],[2000,1525]]"
                            },
                            "cc5ffa0e-9bfb-025a-47db-833ed5b83cd2": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "cc5ffa0e-9bfb-025a-47db-833ed5b83cd2",
                                "name": "1",
                                "displayName": "1",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                    "visibility": "public",
                                    "name": "HandOverInfoErrorReported",
                                    "oldName": "",
                                    "displayName": "인계자 정보 오류 보고됨",
                                    "namePascalCase": "HandOverInfoErrorReported",
                                    "nameCamelCase": "handOverInfoErrorReported",
                                    "namePlural": "",
                                    "description": "인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                        "x": 300,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                        "x": 300,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "visibility": "public",
                                    "name": "HandOverInfoErrorReviewed",
                                    "oldName": "",
                                    "displayName": "인계자 정보 오류 검토됨",
                                    "namePascalCase": "HandOverInfoErrorReviewed",
                                    "nameCamelCase": "handOverInfoErrorReviewed",
                                    "namePlural": "",
                                    "description": "관리자가 인계자로부터 접수된 정보 오류 보고를 검토함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                        "x": 300,
                                        "y": 900,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                        "x": 300,
                                        "y": 900,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                "to": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                "relationView": {
                                    "id": "cc5ffa0e-9bfb-025a-47db-833ed5b83cd2",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "415f0769-1513-c4eb-1471-fe7d037d7c55",
                                    "to": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "needReconnect": true
                                }
                            },
                            "44a6947b-dde1-6bb4-d284-a16634e2e7fd": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "44a6947b-dde1-6bb4-d284-a16634e2e7fd",
                                "name": "2",
                                "displayName": "2",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "visibility": "public",
                                    "name": "HandOverInfoErrorReviewed",
                                    "oldName": "",
                                    "displayName": "인계자 정보 오류 검토됨",
                                    "namePascalCase": "HandOverInfoErrorReviewed",
                                    "nameCamelCase": "handOverInfoErrorReviewed",
                                    "namePlural": "",
                                    "description": "관리자가 인계자로부터 접수된 정보 오류 보고를 검토함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                        "x": 300,
                                        "y": 900,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                        "x": 300,
                                        "y": 900,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "visibility": "public",
                                    "name": "HandOverInfoCorrected",
                                    "oldName": "",
                                    "displayName": "인계자 정보 수정됨",
                                    "namePascalCase": "HandOverInfoCorrected",
                                    "nameCamelCase": "handOverInfoCorrected",
                                    "namePlural": "",
                                    "description": "관리자가 인계자 정보를 올바르게 수정함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                        "x": 500,
                                        "y": 900,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                        "x": 500,
                                        "y": 900,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                "to": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                "relationView": {
                                    "id": "44a6947b-dde1-6bb4-d284-a16634e2e7fd",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "6cce949f-83ae-c661-669e-e4f853e70e4d",
                                    "to": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "needReconnect": true
                                }
                            },
                            "dae45a55-02be-667d-0983-bc864952fb5a": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "dae45a55-02be-667d-0983-bc864952fb5a",
                                "name": "3",
                                "displayName": "3",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "visibility": "public",
                                    "name": "HandOverInfoCorrected",
                                    "oldName": "",
                                    "displayName": "인계자 정보 수정됨",
                                    "namePascalCase": "HandOverInfoCorrected",
                                    "nameCamelCase": "handOverInfoCorrected",
                                    "namePlural": "",
                                    "description": "관리자가 인계자 정보를 올바르게 수정함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                        "x": 500,
                                        "y": 900,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                        "x": 500,
                                        "y": 900,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                    "visibility": "public",
                                    "name": "HandOverInfoCorrectionNotified",
                                    "oldName": "",
                                    "displayName": "인계자 정보 수정 알림 발송됨",
                                    "namePascalCase": "HandOverInfoCorrectionNotified",
                                    "nameCamelCase": "handOverInfoCorrectionNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인계자에게 정보 수정 사실을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                        "x": 300,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b0e35372-052a-761b-d155-ecea2343a17b",
                                        "x": 300,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                "to": "b0e35372-052a-761b-d155-ecea2343a17b",
                                "relationView": {
                                    "id": "dae45a55-02be-667d-0983-bc864952fb5a",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "db1b1a4b-6c80-5c97-6038-0803e93a69db",
                                    "to": "b0e35372-052a-761b-d155-ecea2343a17b",
                                    "needReconnect": true
                                }
                            },
                            "f036127a-0074-065f-ac9a-b0a76a3c9f4b": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "f036127a-0074-065f-ac9a-b0a76a3c9f4b",
                                "name": "5",
                                "displayName": "5",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                    "visibility": "public",
                                    "name": "ReceiverRegistered",
                                    "oldName": "",
                                    "displayName": "인수자 등록됨",
                                    "namePascalCase": "ReceiverRegistered",
                                    "nameCamelCase": "receiverRegistered",
                                    "namePlural": "",
                                    "description": "인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                        "x": 500,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                        "x": 500,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                    "visibility": "public",
                                    "name": "ReceiverRegistrationNotified",
                                    "oldName": "",
                                    "displayName": "인수자 등록 알림 발송됨",
                                    "namePascalCase": "ReceiverRegistrationNotified",
                                    "nameCamelCase": "receiverRegistrationNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인수자에게 등록 사실을 알리고, 관련 업무 인계 절차를 안내함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                        "x": 500,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                        "x": 500,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                "to": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                "relationView": {
                                    "id": "f036127a-0074-065f-ac9a-b0a76a3c9f4b",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "32e60e15-ba25-6ce0-27b8-c11d40e150b8",
                                    "to": "b3f7c27a-18d7-b3af-ef1c-c12d99e8fb95",
                                    "needReconnect": true
                                }
                            },
                            "250e7f33-7d42-9489-8da2-b5c25d1c380b": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "250e7f33-7d42-9489-8da2-b5c25d1c380b",
                                "name": "7",
                                "displayName": "7",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                    "visibility": "public",
                                    "name": "HandoverDetailRegistered",
                                    "oldName": "",
                                    "displayName": "인수인계 상세 내용 등록됨",
                                    "namePascalCase": "HandoverDetailRegistered",
                                    "nameCamelCase": "handoverDetailRegistered",
                                    "namePlural": "",
                                    "description": "인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                        "x": 700,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                        "x": 700,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                    "visibility": "public",
                                    "name": "HandoverDetailRegistrationNotified",
                                    "oldName": "",
                                    "displayName": "인수인계 상세 내용 등록 알림 발송됨",
                                    "namePascalCase": "HandoverDetailRegistrationNotified",
                                    "nameCamelCase": "handoverDetailRegistrationNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인수자에게 상세 내용이 등록되었음을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                        "x": 700,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                        "x": 700,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                "to": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                "relationView": {
                                    "id": "250e7f33-7d42-9489-8da2-b5c25d1c380b",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "d9e8d40b-f8f5-2d9c-15f7-3461bb16fcf4",
                                    "to": "9eb0d664-5923-2993-5d0b-6c08d0673138",
                                    "needReconnect": true
                                }
                            },
                            "db89c758-a9e4-b81e-b343-918a8287779c": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "db89c758-a9e4-b81e-b343-918a8287779c",
                                "name": "9",
                                "displayName": "9",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                    "visibility": "public",
                                    "name": "HandoverDocumentAttached",
                                    "oldName": "",
                                    "displayName": "인수인계 문서 첨부됨",
                                    "namePascalCase": "HandoverDocumentAttached",
                                    "nameCamelCase": "handoverDocumentAttached",
                                    "namePlural": "",
                                    "description": "인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                        "x": 900,
                                        "y": 150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "a1178695-6361-524a-3f38-d18b582583fc",
                                        "x": 900,
                                        "y": 150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                    "visibility": "public",
                                    "name": "HandoverDocumentAttachmentNotified",
                                    "oldName": "",
                                    "displayName": "인수인계 문서 첨부 알림 발송됨",
                                    "namePascalCase": "HandoverDocumentAttachmentNotified",
                                    "nameCamelCase": "handoverDocumentAttachmentNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인수자에게 문서 첨부 사실을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                        "x": 900,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                        "x": 900,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "a1178695-6361-524a-3f38-d18b582583fc",
                                "to": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                "relationView": {
                                    "id": "db89c758-a9e4-b81e-b343-918a8287779c",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "a1178695-6361-524a-3f38-d18b582583fc",
                                    "to": "b4fb24b8-9dca-fcc3-c112-261e3b3dc3a3",
                                    "needReconnect": true
                                }
                            },
                            "fb43d87a-b70c-c06a-aa8d-9a6120d85b5f": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "fb43d87a-b70c-c06a-aa8d-9a6120d85b5f",
                                "name": "11",
                                "displayName": "11",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                    "visibility": "public",
                                    "name": "HandoverResultRegistered",
                                    "oldName": "",
                                    "displayName": "인수인계 결과 등록됨",
                                    "namePascalCase": "HandoverResultRegistered",
                                    "nameCamelCase": "handoverResultRegistered",
                                    "namePlural": "",
                                    "description": "인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                        "x": 300,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                        "x": 300,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                    "visibility": "public",
                                    "name": "HandoverResultRegistrationNotified",
                                    "oldName": "",
                                    "displayName": "인수인계 결과 등록 알림 발송됨",
                                    "namePascalCase": "HandoverResultRegistrationNotified",
                                    "nameCamelCase": "handoverResultRegistrationNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인계자 및 상위자에게 결과 등록 사실을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                        "x": 1100,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                        "x": 1100,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                "to": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                "relationView": {
                                    "id": "fb43d87a-b70c-c06a-aa8d-9a6120d85b5f",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "20b9bdca-e1c5-8188-4c61-1ccb2d9f14f5",
                                    "to": "3e50b1cd-6091-67a9-39c2-bf99d2f8b014",
                                    "needReconnect": true
                                }
                            },
                            "94cbb6c9-eb15-b17b-139e-b8b7ebb5d745": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "94cbb6c9-eb15-b17b-139e-b8b7ebb5d745",
                                "name": "13",
                                "displayName": "13",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                    "visibility": "public",
                                    "name": "HandoverApprovalRequested",
                                    "oldName": "",
                                    "displayName": "인수인계 승인 요청됨",
                                    "namePascalCase": "HandoverApprovalRequested",
                                    "nameCamelCase": "handoverApprovalRequested",
                                    "namePlural": "",
                                    "description": "인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                        "x": 500,
                                        "y": 400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                        "x": 500,
                                        "y": 400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                    "visibility": "public",
                                    "name": "HandoverApprovalNotificationSent",
                                    "oldName": "",
                                    "displayName": "인수인계 승인 요청 알림 발송됨",
                                    "namePascalCase": "HandoverApprovalNotificationSent",
                                    "nameCamelCase": "handoverApprovalNotificationSent",
                                    "namePlural": "",
                                    "description": "시스템이 승인자에게 승인 요청 사실을 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                        "x": 1300,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                        "x": 1300,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                "to": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                "relationView": {
                                    "id": "94cbb6c9-eb15-b17b-139e-b8b7ebb5d745",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "aadbd265-2025-7b0a-997f-ba8b690cf051",
                                    "to": "6d3fb018-f76d-d826-b188-fb0b544adc1b",
                                    "needReconnect": true
                                }
                            },
                            "20b49424-4293-92c5-ab11-a7f3fa80ee29": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "20b49424-4293-92c5-ab11-a7f3fa80ee29",
                                "name": "15",
                                "displayName": "15",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                    "visibility": "public",
                                    "name": "HandoverApproved",
                                    "oldName": "",
                                    "displayName": "인수인계 승인됨",
                                    "namePascalCase": "HandoverApproved",
                                    "nameCamelCase": "handoverApproved",
                                    "namePlural": "",
                                    "description": "승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                        "x": 300,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                        "x": 300,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "visibility": "public",
                                    "name": "HandoverApprovalResultNotified",
                                    "oldName": "",
                                    "displayName": "인수인계 승인/반려 결과 알림 발송됨",
                                    "namePascalCase": "HandoverApprovalResultNotified",
                                    "nameCamelCase": "handoverApprovalResultNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인수자 및 인계자에게 승인/반려 결과를 신속하게 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                        "x": 1500,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                        "x": 1500,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                "to": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                "relationView": {
                                    "id": "20b49424-4293-92c5-ab11-a7f3fa80ee29",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "a68db9a7-2899-ddda-ca8e-054a0a8c4db9",
                                    "to": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "needReconnect": true
                                }
                            },
                            "158f5a53-c343-f87d-9acf-dcd4f8ab6268": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "158f5a53-c343-f87d-9acf-dcd4f8ab6268",
                                "name": "15",
                                "displayName": "15",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                    "visibility": "public",
                                    "name": "HandoverRejected",
                                    "oldName": "",
                                    "displayName": "인수인계 반려됨",
                                    "namePascalCase": "HandoverRejected",
                                    "nameCamelCase": "handoverRejected",
                                    "namePlural": "",
                                    "description": "승인자가 인수인계 결과를 검토 후 반려 처리함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                        "x": 500,
                                        "y": 650,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                        "x": 500,
                                        "y": 650,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "visibility": "public",
                                    "name": "HandoverApprovalResultNotified",
                                    "oldName": "",
                                    "displayName": "인수인계 승인/반려 결과 알림 발송됨",
                                    "namePascalCase": "HandoverApprovalResultNotified",
                                    "nameCamelCase": "handoverApprovalResultNotified",
                                    "namePlural": "",
                                    "description": "시스템이 인수자 및 인계자에게 승인/반려 결과를 신속하게 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                        "x": 1500,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                        "x": 1500,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                "to": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                "relationView": {
                                    "id": "158f5a53-c343-f87d-9acf-dcd4f8ab6268",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "649b3e78-ba9e-a61a-425e-a0e49b7081b0",
                                    "to": "7798c866-9350-fcf1-0029-1cb6c3dff6bf",
                                    "needReconnect": true
                                }
                            },
                            "6c7ef930-f57b-85f2-7907-59da9e250446": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "6c7ef930-f57b-85f2-7907-59da9e250446",
                                "name": "22",
                                "displayName": "22",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                    "visibility": "public",
                                    "name": "UserRoleRegistered",
                                    "oldName": "",
                                    "displayName": "법인별 사용자 및 역할 등록됨",
                                    "namePascalCase": "UserRoleRegistered",
                                    "nameCamelCase": "userRoleRegistered",
                                    "namePlural": "",
                                    "description": "슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                        "x": 300,
                                        "y": 1150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "b059106c-0f67-c15a-9846-090aca28fec1",
                                        "x": 300,
                                        "y": 1150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "visibility": "public",
                                    "name": "UserRoleChangeNotified",
                                    "oldName": "",
                                    "displayName": "법인별 사용자 역할 변경 알림 발송됨",
                                    "namePascalCase": "UserRoleChangeNotified",
                                    "nameCamelCase": "userRoleChangeNotified",
                                    "namePlural": "",
                                    "description": "시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                        "x": 1900,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                        "x": 1900,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "b059106c-0f67-c15a-9846-090aca28fec1",
                                "to": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                "relationView": {
                                    "id": "6c7ef930-f57b-85f2-7907-59da9e250446",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "b059106c-0f67-c15a-9846-090aca28fec1",
                                    "to": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "needReconnect": true
                                }
                            },
                            "d5ec72f9-10d8-5c53-0308-044742046934": {
                                "_type": "org.uengine.modeling.model.Relation",
                                "id": "d5ec72f9-10d8-5c53-0308-044742046934",
                                "name": "23",
                                "displayName": "23",
                                "sourceElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                    "visibility": "public",
                                    "name": "UserRoleChanged",
                                    "oldName": "",
                                    "displayName": "법인별 사용자 역할 변경됨",
                                    "namePascalCase": "UserRoleChanged",
                                    "nameCamelCase": "userRoleChanged",
                                    "namePlural": "",
                                    "description": "슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                        "x": 500,
                                        "y": 1150,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                        "x": 500,
                                        "y": 1150,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "targetElement": {
                                    "_type": "org.uengine.modeling.model.Event",
                                    "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "visibility": "public",
                                    "name": "UserRoleChangeNotified",
                                    "oldName": "",
                                    "displayName": "법인별 사용자 역할 변경 알림 발송됨",
                                    "namePascalCase": "UserRoleChangeNotified",
                                    "nameCamelCase": "userRoleChangeNotified",
                                    "namePlural": "",
                                    "description": "시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.",
                                    "author": null,
                                    "aggregate": {},
                                    "boundedContext": {},
                                    "fieldDescriptors": [
                                        {
                                            "_type": "org.uengine.model.FieldDescriptor",
                                            "name": "id",
                                            "className": "Long",
                                            "nameCamelCase": "id",
                                            "namePascalCase": "Id",
                                            "isKey": true
                                        }
                                    ],
                                    "mirrorElement": null,
                                    "elementView": {
                                        "_type": "org.uengine.modeling.model.Event",
                                        "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                        "x": 1900,
                                        "y": 1400,
                                        "width": 100,
                                        "height": 100,
                                        "style": "{}",
                                        "angle": 0
                                    },
                                    "hexagonalView": {
                                        "_type": "org.uengine.modeling.model.EventHexagonal",
                                        "id": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                        "x": 1900,
                                        "y": 1400,
                                        "subWidth": 100,
                                        "width": 20,
                                        "height": 20,
                                        "style": "{}"
                                    },
                                    "relationPolicyInfo": [],
                                    "relationCommandInfo": [],
                                    "trigger": "@PostPersist"
                                },
                                "from": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                "to": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                "relationView": {
                                    "id": "d5ec72f9-10d8-5c53-0308-044742046934",
                                    "style": "{\"arrow-start\":\"none\",\"arrow-end\":\"block\",\"stroke\":\"grey\",\"stroke-width\":\"1.4\",\"font-size\":\"12px\",\"font-weight\":\"bold\"}",
                                    "value": null,
                                    "from": "9f571b8b-2cb2-6452-2293-5c7969b5d2ce",
                                    "to": "488e92df-df9d-1b61-36d5-98586382e6a9",
                                    "needReconnect": true
                                }
                            }
                        }
                    },
                    "analysisResult": {
                        "recommendedBoundedContextsNumber": 5,
                        "events": [
                            {
                                "name": "HandOverInfoErrorReported",
                                "displayName": "인계자 정보 오류 보고됨",
                                "actor": "HandOverUser",
                                "level": 1,
                                "description": "인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.",
                                "inputs": [
                                    "인계자 정보",
                                    "오류 발견 내역"
                                ],
                                "outputs": [
                                    "오류 보고 내역",
                                    "관리자에게 알림"
                                ],
                                "nextEvents": [
                                    "HandOverInfoErrorReviewed"
                                ]
                            },
                            {
                                "name": "HandOverInfoErrorReviewed",
                                "displayName": "인계자 정보 오류 검토됨",
                                "actor": "SystemAdmin",
                                "level": 2,
                                "description": "관리자가 인계자로부터 접수된 정보 오류 보고를 검토함.",
                                "inputs": [
                                    "오류 보고 내역"
                                ],
                                "outputs": [
                                    "오류 수정 필요 여부 결정"
                                ],
                                "nextEvents": [
                                    "HandOverInfoCorrected"
                                ]
                            },
                            {
                                "name": "HandOverInfoCorrected",
                                "displayName": "인계자 정보 수정됨",
                                "actor": "SystemAdmin",
                                "level": 3,
                                "description": "관리자가 인계자 정보를 올바르게 수정함.",
                                "inputs": [
                                    "수정 요청 정보",
                                    "HR 연계 데이터"
                                ],
                                "outputs": [
                                    "수정된 인계자 정보"
                                ],
                                "nextEvents": [
                                    "HandOverInfoCorrectionNotified"
                                ]
                            },
                            {
                                "name": "HandOverInfoCorrectionNotified",
                                "displayName": "인계자 정보 수정 알림 발송됨",
                                "actor": "System",
                                "level": 4,
                                "description": "시스템이 인계자에게 정보 수정 사실을 알림.",
                                "inputs": [
                                    "수정 완료 정보"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "ReceiverRegistered",
                                "displayName": "인수자 등록됨",
                                "actor": "HandOverUser",
                                "level": 5,
                                "description": "인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.",
                                "inputs": [
                                    "인수자 정보",
                                    "업무 인계내역"
                                ],
                                "outputs": [
                                    "인수자 등록 내역"
                                ],
                                "nextEvents": [
                                    "ReceiverRegistrationNotified"
                                ]
                            },
                            {
                                "name": "ReceiverRegistrationNotified",
                                "displayName": "인수자 등록 알림 발송됨",
                                "actor": "System",
                                "level": 6,
                                "description": "시스템이 인수자에게 등록 사실을 알리고, 관련 업무 인계 절차를 안내함.",
                                "inputs": [
                                    "등록된 인수자 정보"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "HandoverDetailRegistered",
                                "displayName": "인수인계 상세 내용 등록됨",
                                "actor": "HandOverUser",
                                "level": 7,
                                "description": "인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.",
                                "inputs": [
                                    "상세 인수인계 내용",
                                    "첨부 문서 정보"
                                ],
                                "outputs": [
                                    "등록된 인수인계 상세 내역"
                                ],
                                "nextEvents": [
                                    "HandoverDetailRegistrationNotified"
                                ]
                            },
                            {
                                "name": "HandoverDetailRegistrationNotified",
                                "displayName": "인수인계 상세 내용 등록 알림 발송됨",
                                "actor": "System",
                                "level": 8,
                                "description": "시스템이 인수자에게 상세 내용이 등록되었음을 알림.",
                                "inputs": [
                                    "상세 내용 등록 내역"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "HandoverDocumentAttached",
                                "displayName": "인수인계 문서 첨부됨",
                                "actor": "HandOverUser",
                                "level": 9,
                                "description": "인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.",
                                "inputs": [
                                    "첨부 문서",
                                    "문서 분류 정보"
                                ],
                                "outputs": [
                                    "문서 첨부 내역"
                                ],
                                "nextEvents": [
                                    "HandoverDocumentAttachmentNotified"
                                ]
                            },
                            {
                                "name": "HandoverDocumentAttachmentNotified",
                                "displayName": "인수인계 문서 첨부 알림 발송됨",
                                "actor": "System",
                                "level": 10,
                                "description": "시스템이 인수자에게 문서 첨부 사실을 알림.",
                                "inputs": [
                                    "첨부 문서 내역"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "HandoverResultRegistered",
                                "displayName": "인수인계 결과 등록됨",
                                "actor": "ReceiverUser",
                                "level": 11,
                                "description": "인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.",
                                "inputs": [
                                    "업무 인수 결과",
                                    "코멘트, 후속 조치 등"
                                ],
                                "outputs": [
                                    "등록된 인수인계 결과"
                                ],
                                "nextEvents": [
                                    "HandoverResultRegistrationNotified"
                                ]
                            },
                            {
                                "name": "HandoverResultRegistrationNotified",
                                "displayName": "인수인계 결과 등록 알림 발송됨",
                                "actor": "System",
                                "level": 12,
                                "description": "시스템이 인계자 및 상위자에게 결과 등록 사실을 알림.",
                                "inputs": [
                                    "등록된 결과"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "HandoverApprovalRequested",
                                "displayName": "인수인계 승인 요청됨",
                                "actor": "ReceiverUser",
                                "level": 13,
                                "description": "인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.",
                                "inputs": [
                                    "인수인계 결과",
                                    "요청 사유"
                                ],
                                "outputs": [
                                    "승인 요청 내역"
                                ],
                                "nextEvents": [
                                    "HandoverApprovalNotificationSent"
                                ]
                            },
                            {
                                "name": "HandoverApprovalNotificationSent",
                                "displayName": "인수인계 승인 요청 알림 발송됨",
                                "actor": "System",
                                "level": 14,
                                "description": "시스템이 승인자에게 승인 요청 사실을 알림.",
                                "inputs": [
                                    "승인 요청 내역"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "HandoverApproved",
                                "displayName": "인수인계 승인됨",
                                "actor": "ApproverUser",
                                "level": 15,
                                "description": "승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.",
                                "inputs": [
                                    "인수인계 결과",
                                    "승인 의견"
                                ],
                                "outputs": [
                                    "최종 승인 결과"
                                ],
                                "nextEvents": [
                                    "HandoverApprovalResultNotified"
                                ]
                            },
                            {
                                "name": "HandoverRejected",
                                "displayName": "인수인계 반려됨",
                                "actor": "ApproverUser",
                                "level": 15,
                                "description": "승인자가 인수인계 결과를 검토 후 반려 처리함.",
                                "inputs": [
                                    "인수인계 결과",
                                    "반려 사유"
                                ],
                                "outputs": [
                                    "최종 반려 결과"
                                ],
                                "nextEvents": [
                                    "HandoverApprovalResultNotified"
                                ]
                            },
                            {
                                "name": "HandoverApprovalResultNotified",
                                "displayName": "인수인계 승인/반려 결과 알림 발송됨",
                                "actor": "System",
                                "level": 16,
                                "description": "시스템이 인수자 및 인계자에게 승인/반려 결과를 신속하게 알림.",
                                "inputs": [
                                    "승인/반려 결과"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "GuideRegistered",
                                "displayName": "안내문구 등록됨",
                                "actor": "SystemAdmin",
                                "level": 17,
                                "description": "시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.",
                                "inputs": [
                                    "가이드 문구",
                                    "적용 범위"
                                ],
                                "outputs": [
                                    "등록된 가이드 정보"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "GuideModified",
                                "displayName": "안내문구 수정됨",
                                "actor": "SystemAdmin",
                                "level": 18,
                                "description": "시스템 관리자가 기존 안내문구를 수정함.",
                                "inputs": [
                                    "수정 대상 가이드",
                                    "수정 내용"
                                ],
                                "outputs": [
                                    "수정된 가이드 정보"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "MailTemplateRegistered",
                                "displayName": "이메일 템플릿 등록됨",
                                "actor": "SystemAdmin",
                                "level": 19,
                                "description": "시스템 관리자가 이메일 템플릿을 신규로 등록함.",
                                "inputs": [
                                    "이메일 템플릿 내용",
                                    "적용 단계 정보"
                                ],
                                "outputs": [
                                    "등록된 이메일 템플릿"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "MailTemplateModified",
                                "displayName": "이메일 템플릿 수정됨",
                                "actor": "SystemAdmin",
                                "level": 20,
                                "description": "시스템 관리자가 기존 이메일 템플릿을 수정함.",
                                "inputs": [
                                    "수정 대상 템플릿",
                                    "수정 내용"
                                ],
                                "outputs": [
                                    "수정된 이메일 템플릿"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "StageMailSent",
                                "displayName": "업무 단계별 메일 발송됨",
                                "actor": "System",
                                "level": 21,
                                "description": "시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.",
                                "inputs": [
                                    "업무 단계 이벤트",
                                    "메일 템플릿"
                                ],
                                "outputs": [
                                    "발송된 이메일",
                                    "발송 이력"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "UserRoleRegistered",
                                "displayName": "법인별 사용자 및 역할 등록됨",
                                "actor": "SuperAdmin",
                                "level": 22,
                                "description": "슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.",
                                "inputs": [
                                    "법인 정보",
                                    "담당자 정보",
                                    "역할 정보"
                                ],
                                "outputs": [
                                    "등록된 담당자/역할 내역"
                                ],
                                "nextEvents": [
                                    "UserRoleChangeNotified"
                                ]
                            },
                            {
                                "name": "UserRoleChanged",
                                "displayName": "법인별 사용자 역할 변경됨",
                                "actor": "SuperAdmin",
                                "level": 23,
                                "description": "슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.",
                                "inputs": [
                                    "변경 대상",
                                    "변경 내용"
                                ],
                                "outputs": [
                                    "변경된 역할/담당자 내역"
                                ],
                                "nextEvents": [
                                    "UserRoleChangeNotified"
                                ]
                            },
                            {
                                "name": "UserRoleChangeNotified",
                                "displayName": "법인별 사용자 역할 변경 알림 발송됨",
                                "actor": "System",
                                "level": 24,
                                "description": "시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.",
                                "inputs": [
                                    "등록 또는 변경 내역"
                                ],
                                "outputs": [
                                    "알림 메일 또는 메시지"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "AuthorizationConfigured",
                                "displayName": "권한/메뉴/코드 설정됨",
                                "actor": "SystemAdmin",
                                "level": 25,
                                "description": "시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.",
                                "inputs": [
                                    "사용자 정보",
                                    "권한/메뉴/코드 정보"
                                ],
                                "outputs": [
                                    "설정된 권한/메뉴/코드"
                                ],
                                "nextEvents": []
                            },
                            {
                                "name": "PersonalInfoSyncedWithHR",
                                "displayName": "개인 정보가 HR 시스템과 동기화됨",
                                "actor": "System",
                                "level": 26,
                                "description": "시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.",
                                "inputs": [
                                    "HR 시스템 데이터",
                                    "사용자 ID"
                                ],
                                "outputs": [
                                    "최신 인사정보로 갱신"
                                ],
                                "nextEvents": []
                            }
                        ],
                        "actors": [
                            {
                                "name": "HandOverUser",
                                "events": [
                                    "HandOverInfoErrorReported",
                                    "ReceiverRegistered",
                                    "HandoverDetailRegistered",
                                    "HandoverDocumentAttached"
                                ],
                                "lane": 0
                            },
                            {
                                "name": "ReceiverUser",
                                "events": [
                                    "HandoverResultRegistered",
                                    "HandoverApprovalRequested"
                                ],
                                "lane": 1
                            },
                            {
                                "name": "ApproverUser",
                                "events": [
                                    "HandoverApproved",
                                    "HandoverRejected"
                                ],
                                "lane": 2
                            },
                            {
                                "name": "SystemAdmin",
                                "events": [
                                    "HandOverInfoErrorReviewed",
                                    "HandOverInfoCorrected",
                                    "GuideRegistered",
                                    "GuideModified",
                                    "MailTemplateRegistered",
                                    "MailTemplateModified",
                                    "AuthorizationConfigured"
                                ],
                                "lane": 3
                            },
                            {
                                "name": "SuperAdmin",
                                "events": [
                                    "UserRoleRegistered",
                                    "UserRoleChanged"
                                ],
                                "lane": 4
                            },
                            {
                                "name": "System",
                                "events": [
                                    "HandOverInfoCorrectionNotified",
                                    "ReceiverRegistrationNotified",
                                    "HandoverDetailRegistrationNotified",
                                    "HandoverDocumentAttachmentNotified",
                                    "HandoverResultRegistrationNotified",
                                    "HandoverApprovalNotificationSent",
                                    "HandoverApprovalResultNotified",
                                    "UserRoleChangeNotified",
                                    "StageMailSent",
                                    "PersonalInfoSyncedWithHR"
                                ],
                                "lane": 5
                            }
                        ]
                    },
                    "currentGeneratedLength": 13256
                },
                "currentGeneratedLength": 0,
                "timestamp": "2025-07-08T06:10:11.339Z"
            },
            {
                "uniqueId": "3f4287810c8b5e86f9ebf159dba659b8",
                "type": "bcGenerationOption",
                "isSummarizeStarted": false,
                "isGeneratingBoundedContext": false,
                "isStartMapping": false,
                "isAnalizing": false,
                "generateOption": {
                    "numberOfBCs": 4,
                    "selectedAspects": [
                        "도메인 복잡도 분리",
                        "프로세스(value stream) 기반 분리"
                    ],
                    "additionalOptions": "",
                    "aspectDetails": {},
                    "isProtocolMode": true
                },
                "recommendedBoundedContextsNumber": 5,
                "timestamp": "2025-07-08T06:10:55.306Z"
            },
            {
                "uniqueId": "cd187829eebf80fd4e6c9205237366fe",
                "type": "boundedContextResult",
                "result": {
                    "도메인 복잡도 분리+프로세스(value stream) 기반 분리": {
                        "boundedContexts": [
                            {
                                "name": "HandoverManagement",
                                "alias": "인수인계 관리",
                                "importance": "Core Domain",
                                "complexity": "0.85",
                                "differentiation": "0.95",
                                "implementationStrategy": "Rich Domain Model",
                                "aggregates": [
                                    {
                                        "name": "HandoverProcess",
                                        "alias": "인수인계 프로세스"
                                    },
                                    {
                                        "name": "HandoverDetail",
                                        "alias": "인수인계 상세"
                                    },
                                    {
                                        "name": "HandoverResult",
                                        "alias": "인수인계 결과"
                                    }
                                ],
                                "events": [
                                    "HandOverInfoErrorReported",
                                    "ReceiverRegistered",
                                    "HandoverDetailRegistered",
                                    "HandoverResultRegistered",
                                    "HandoverApprovalRequested",
                                    "HandoverApproved",
                                    "HandoverRejected"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';"
                                    }
                                ],
                                "role": "인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다."
                            },
                            {
                                "name": "UserOrganization",
                                "alias": "사용자 및 조직 관리",
                                "importance": "Supporting Domain",
                                "complexity": "0.6",
                                "differentiation": "0.45",
                                "implementationStrategy": "Transaction Script",
                                "aggregates": [
                                    {
                                        "name": "User",
                                        "alias": "사용자"
                                    },
                                    {
                                        "name": "Role",
                                        "alias": "역할"
                                    },
                                    {
                                        "name": "Corporation",
                                        "alias": "법인"
                                    }
                                ],
                                "events": [
                                    "HandOverInfoErrorReviewed",
                                    "HandOverInfoCorrected",
                                    "UserRoleRegistered",
                                    "UserRoleChanged",
                                    "AuthorizationConfigured",
                                    "PersonalInfoSyncedWithHR"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );"
                                    }
                                ],
                                "role": "법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다."
                            },
                            {
                                "name": "CommunicationNotification",
                                "alias": "커뮤니케이션 및 알림",
                                "importance": "Supporting Domain",
                                "complexity": "0.7",
                                "differentiation": "0.4",
                                "implementationStrategy": "Transaction Script",
                                "aggregates": [
                                    {
                                        "name": "MailTemplate",
                                        "alias": "이메일 템플릿"
                                    },
                                    {
                                        "name": "Guide",
                                        "alias": "안내문구"
                                    }
                                ],
                                "events": [
                                    "GuideRegistered",
                                    "GuideModified",
                                    "MailTemplateRegistered",
                                    "MailTemplateModified",
                                    "StageMailSent"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';"
                                    },
                                    {
                                        "type": "DDL",
                                        "text": "comment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';"
                                    }
                                ],
                                "role": "업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다."
                            },
                            {
                                "name": "document-management",
                                "alias": "문서관리(PBC)",
                                "importance": "Generic Domain",
                                "complexity": "0.8",
                                "differentiation": "0.2",
                                "implementationStrategy": "PBC: document-management",
                                "aggregates": [
                                    {
                                        "name": "Document",
                                        "alias": "문서"
                                    }
                                ],
                                "events": [
                                    "HandoverDocumentAttached",
                                    "HandoverDocumentAttachmentNotified"
                                ],
                                "requirements": [
                                    {
                                        "type": "userStory",
                                        "text": "US-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "userStory",
                                        "text": "US-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다."
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverDocumentAttached\",\"displayName\":\"인수인계 문서 첨부됨\",\"actor\":\"HandOverUser\",\"level\":9,\"description\":\"인계자가 인수인계에 필요한 중요 문서를 ECM 연동을 통해 첨부함.\",\"inputs\":[\"첨부 문서\",\"문서 분류 정보\"],\"outputs\":[\"문서 첨부 내역\"],\"nextEvents\":[\"HandoverDocumentAttachmentNotified\"]}"
                                    },
                                    {
                                        "type": "Event",
                                        "text": "{\"name\":\"HandoverDocumentAttachmentNotified\",\"displayName\":\"인수인계 문서 첨부 알림 발송됨\",\"actor\":\"System\",\"level\":10,\"description\":\"시스템이 인수자에게 문서 첨부 사실을 알림.\",\"inputs\":[\"첨부 문서 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}"
                                    }
                                ],
                                "role": "문서관리(PBC)에서는 인수인계에 첨부되는 중요 문서의 저장, 검색, 연동을 담당한다."
                            }
                        ],
                        "relations": [
                            {
                                "name": "HandoverManagement-UserOrganization",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "UserOrganization",
                                    "alias": "사용자 및 조직 관리"
                                },
                                "downStream": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리"
                                }
                            },
                            {
                                "name": "HandoverManagement-CommunicationNotification",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리"
                                },
                                "downStream": {
                                    "name": "CommunicationNotification",
                                    "alias": "커뮤니케이션 및 알림"
                                }
                            },
                            {
                                "name": "HandoverManagement-document-management",
                                "type": "Request/Response",
                                "upStream": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리"
                                },
                                "downStream": {
                                    "name": "document-management",
                                    "alias": "문서관리(PBC)"
                                }
                            },
                            {
                                "name": "UserOrganization-CommunicationNotification",
                                "type": "Pub/Sub",
                                "upStream": {
                                    "name": "UserOrganization",
                                    "alias": "사용자 및 조직 관리"
                                },
                                "downStream": {
                                    "name": "CommunicationNotification",
                                    "alias": "커뮤니케이션 및 알림"
                                }
                            }
                        ],
                        "thoughts": "PBC 우선 매칭 원칙에 따라 문서 첨부 및 관리는 기존 PBC(document-management)로 지정해 Generic Domain으로 분리하였다. 프로세스(인수인계 업무 플로우)와 도메인 복잡성(프로세스 내 주체 간 상호작용)을 고려해 인수인계 관리(핵심 프로세스)와 사용자/조직 관리(지원 인프라)를 분리하였고, 알림/이메일/가이드 등 커뮤니케이션 기능은 프로세스별 독립적 운영과 기술적 응집도를 위해 별도의 커뮤니케이션 및 알림 컨텍스트로 나누었다. 각 컨텍스트는 이벤트 기반(pub/sub)으로 약결합, PBC는 외부 의존성(request/response)으로 처리하여, 도메인 전문성-기술적 응집-업무/기능적 경계 기준을 모두 반영하였다.",
                        "explanations": [
                            {
                                "sourceContext": "사용자 및 조직 관리",
                                "targetContext": "인수인계 관리",
                                "relationType": "Pub/Sub",
                                "reason": "사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.",
                                "interactionPattern": "사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다."
                            },
                            {
                                "sourceContext": "인수인계 관리",
                                "targetContext": "커뮤니케이션 및 알림",
                                "relationType": "Pub/Sub",
                                "reason": "인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.",
                                "interactionPattern": "인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리."
                            },
                            {
                                "sourceContext": "인수인계 관리",
                                "targetContext": "문서관리(PBC)",
                                "relationType": "Request/Response",
                                "reason": "문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.",
                                "interactionPattern": "인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                            },
                            {
                                "sourceContext": "사용자 및 조직 관리",
                                "targetContext": "커뮤니케이션 및 알림",
                                "relationType": "Pub/Sub",
                                "reason": "조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.",
                                "interactionPattern": "사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                            }
                        ],
                        "devisionAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                        "currentGeneratedLength": 5913
                    }
                },
                "isStartMapping": false,
                "isGeneratingBoundedContext": false,
                "isSummarizeStarted": false,
                "isAnalizing": false,
                "processingRate": 100,
                "currentProcessingBoundedContext": "문서관리(PBC)",
                "selectedAspect": "도메인 복잡도 분리+프로세스(value stream) 기반 분리",
                "summarizedResult": "",
                "pbcLists": [
                    {
                        "name": "chat-vue3-en",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "Chat service (Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat System Overview <br>\nThe PBC Chat system is designed to handle all chat-related tasks efficiently and securely. It provides a robust framework for chat room creation, conversation history storage, and retrieval. The system ensures seamless integration with Supabase and offers a user-friendly interface for both developers and users. Specifically optimized for Vue3-based environments, it delivers a smooth and responsive user experience utilizing modern web technologies. Through this integration, it offers various chat options and leverages Supabase's unique features to provide an optimal chat experience. The PBC Chat system ensures both reliability and scalability while offering users more diverse options to make the chat process smoother and more convenient.\n\n## Available Features\n### 1) Chat Room Creation <br>\n  Enables users to create chat rooms through various supported methods, ensuring a safe and fast chat environment.\n\n### 2) Conversation History Storage <br>\n  Provides functionality to securely store and manage all conversation history using Supabase.\n\n### 3) Conversation History Retrieval <br>\n  Allows users to view detailed records of past conversations, providing information including chat status and timestamps.\n\n## Usage Guide\n\n### 1) Analysis/Design\n1. Double-click the applied PBC's bounded context area to activate the PBC panel.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<Example of PBC Panel Creation>\n\n2. From the PBC panel options, select the event storming stickers corresponding to the features you want to use from reading elements, command elements, and event elements.\n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Example of Panel Sticker Option Selection>\n\n### 2) Implementation\n1. After closing the panel, click CODE to preview the event storming-based generated code.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. In the generated code, click on the selected PBC folder > README.md to check the source code usage instructions.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<Example of PBC README.md File>\n\n3. After loading the source code in your IDE environment, follow the README instructions to download and extract the files, then verify that the downloaded PBC has been created in your source code.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<Example of PBC Source Code Download>\n\n4. To avoid port conflicts, modify the port appropriately in application.yml (payment/src/main/resources/application.yml).\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<Example of PBC Port Modification>\n",
                        "id": 14,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat-vue3-en/blob/main/model.json"
                    },
                    {
                        "name": "review",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/fec3779d-2eb8-40bb-8a07-1a03ee120f6f",
                        "description": "review",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Review 시스템 개요\nPBC Review 시스템은 모든 리뷰 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 리뷰 등록, 평점 등록 및 조회를 위한 견고한 프레임워크를 제공합니다. 사용자 친화적인 인터페이스를 통해 특정 정보에 대한 평점과 리뷰를 쉽게 남길 수 있도록 지원합니다. 이러한 기능을 통해 다양한 리뷰 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 리뷰 과정을 제공합니다. PBC Review 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 리뷰 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 리뷰 등록 <br>\n  사용자가 특정 정보에 대한 리뷰를 쉽게 등록할 수 있도록 하며, 안전하고 빠른 리뷰 환경을 보장합니다.\n\n### 2) 평점 등록 <br>\n  사용자 친화적인 인터페이스를 통해 사용자가 평점을 등록할 수 있는 기능을 제공합니다.\n\n### 3) 리뷰 및 평점 조회 <br>\n  등록된 모든 리뷰와 평점을 서비스를 이용하는 모든 사용자가 확인할 수 있도록 하는 기능을 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1422\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f1e557a5-7ac9-44d0-9ba2-30fd6fa11ba8\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"767\" alt=\"image\" src=\"https://github.com/user-attachments/assets/2b255acd-934d-4565-8981-b16a2fe7e087\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"509\" alt=\"image\" src=\"https://github.com/user-attachments/assets/717d6253-1f07-43f7-b949-6bd7350e459b\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인하여 사용할 수 있습니다.\n<img width=\"998\" alt=\"image\" src=\"https://github.com/user-attachments/assets/699bda6a-7167-4c50-98b4-1afe1ccb1607\" /> <br>\n<PBC README.md 파일 예시>\n",
                        "id": 16,
                        "pbcPath": "https://github.com/msa-ez/pbc-review/blob/main/model.json"
                    },
                    {
                        "name": "reservation-notification",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/88a59203-26e6-4f9e-8349-169b8737ef8a",
                        "description": "예약 & 알림 서비스",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Alarm 시스템 개요\nPBC Alarm 시스템은 모든 알림 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 즉각 알람 발송 및 예약 알림 발송을 위한 견고한 프레임워크를 제공합니다. SSE(Server-Sent Events) 기반의 기술을 활용하여 실시간으로 알림을 전송하며, 사용자 친화적인 인터페이스를 통해 알림 설정을 쉽게 관리할 수 있도록 지원합니다. 이러한 기능을 통해 다양한 알림 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 알림 과정을 제공합니다. PBC Alarm 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 알림 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 즉각 알람 발송 <br>\n  SSE 기반의 기술을 통해 사용자가 즉각적인 알람을 받을 수 있도록 하며, 안전하고 빠른 알림 환경을 보장합니다.\n\n### 2) 예약 알림 발송 <br>\n  사용자가 정해진 날짜와 시간에 알림을 설정할 수 있는 기능을 제공하여, 예약된 알림을 정확하게 발송할 수 있도록 지원합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n* 결제를 통한 결제정보 업데이트와 같은 다른 마이크로서비스와의 통신이 발생할 경우\n  Event - Policy Relation을 연결해야합니다.\n\n  예시) 결제성공을 통한 주문 애그리거트의 결제정보 변경\n  \n  <img width=\"823\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cfaa6b70-a489-42eb-8c18-823b8c9ed7dc\" /> <br>\n  \n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 17,
                        "pbcPath": "https://github.com/msa-ez/pbc-reservation-notification/blob/main/model.json"
                    },
                    {
                        "name": "reservation-notification-vue3",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/88a59203-26e6-4f9e-8349-169b8737ef8a",
                        "description": "예약 & 알림 서비스(Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Alarm 시스템 개요\nPBC Alarm 시스템은 모든 알림 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 즉각 알람 발송 및 예약 알림 발송을 위한 견고한 프레임워크를 제공합니다. SSE(Server-Sent Events) 기반의 기술을 활용하여 실시간으로 알림을 전송하며, 사용자 친화적인 인터페이스를 통해 알림 설정을 쉽게 관리할 수 있도록 지원합니다. 특히, Vue3 기반 환경에서 원활하게 동작하도록 최적화되어 있어, 최신 웹 기술을 활용한 매끄럽고 반응성 높은 사용자 경험을 제공합니다. 이러한 기능을 통해 다양한 알림 옵션을 제공하고, 사용자 경험을 최적화하여 보다 매끄럽고 편리한 알림 과정을 제공합니다. PBC Alarm 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 알림 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 즉각 알람 발송 <br>\n  SSE 기반의 기술을 통해 사용자가 즉각적인 알람을 받을 수 있도록 하며, 안전하고 빠른 알림 환경을 보장합니다.\n\n### 2) 예약 알림 발송 <br>\n  사용자가 정해진 날짜와 시간에 알림을 설정할 수 있는 기능을 제공하여, 예약된 알림을 정확하게 발송할 수 있도록 지원합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 18,
                        "pbcPath": "https://github.com/msa-ez/pbc-reservation-notification-vue3/blob/main/model.json"
                    },
                    {
                        "name": "chat-vue3",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "채팅 서비스(Vue3)",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat 시스템 개요 <br>\nPBC Chat 시스템은 모든 채팅 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 채팅방 생성, 대화 내역 저장 및 조회를 위한 견고한 프레임워크를 제공합니다. Supabase와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 특히, Vue3 기반 환경에서 원활하게 동작하도록 최적화되어 있어, 최신 웹 기술을 활용한 매끄럽고 반응성 높은 사용자 경험을 제공합니다. 이러한 통합을 통해 다양한 채팅 옵션을 제공하고, Supabase의 고유한 기능을 활용하여 최적의 채팅 경험을 제공합니다. PBC Chat 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 채팅 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 채팅방 생성 <br>\n  다양한 지원 방법을 통해 사용자가 채팅방을 생성할 수 있도록 하며, 안전하고 빠른 채팅 환경을 보장합니다.\n\n### 2) 대화 내역 저장 <br>\n  Supabase를 사용하여 모든 대화 내역을 안전하게 저장하고 관리할 수 있는 기능을 제공합니다.\n\n### 3) 대화 내역 조회 <br>\n  과거 대화의 상세 기록을 사용자가 볼 수 있도록 하여, 채팅 상태 및 타임스탬프를 포함한 정보를 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 19,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat-vue3/blob/main/model.json"
                    },
                    {
                        "name": "chat",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/caa875dd-dc2c-402f-8d6b-66431c45cd6c",
                        "description": "채팅 서비스",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC Chat 시스템 개요 <br>\nPBC Chat 시스템은 모든 채팅 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 채팅방 생성, 대화 내역 저장 및 조회를 위한 견고한 프레임워크를 제공합니다. Supabase와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 이러한 통합을 통해 다양한 채팅 옵션을 제공하고, Supabase의 고유한 기능을 활용하여 최적의 채팅 경험을 제공합니다. PBC Chat 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 채팅 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n### 1) 채팅방 생성 <br>\n  다양한 지원 방법을 통해 사용자가 채팅방을 생성할 수 있도록 하며, 안전하고 빠른 채팅 환경을 보장합니다.\n\n### 2) 대화 내역 저장 <br>\n  Supabase를 사용하여 모든 대화 내역을 안전하게 저장하고 관리할 수 있는 기능을 제공합니다.\n\n### 3) 대화 내역 조회 <br>\n  과거 대화의 상세 기록을 사용자가 볼 수 있도록 하여, 채팅 상태 및 타임스탬프를 포함한 정보를 제공합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n",
                        "id": 20,
                        "pbcPath": "https://github.com/msa-ez/pbc-chat/blob/main/model.json"
                    },
                    {
                        "name": "payment-system",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/7577d207-dec2-4421-9f4d-754efea9f41d",
                        "description": "결제를 위한 공통 기능",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## PBC 결제 시스템 개요 <br>\nPBC 결제 시스템은 모든 결제 관련 작업을 효율적이고 안전하게 처리하도록 설계되었습니다. 이 시스템은 결제 처리, 취소 관리, 거래 내역 조회를 위한 견고한 프레임워크를 제공합니다. 다양한 결제 게이트웨이(PG사)와의 원활한 통합을 보장하며, 개발자와 사용자 모두에게 사용자 친화적인 인터페이스를 제공합니다. 이러한 통합을 통해 다양한 결제 옵션을 제공하고, 각 게이트웨이의 고유한 기능을 활용하여 최적의 결제 경험을 제공합니다. PBC 결제 시스템은 신뢰성과 확장성을 동시에 확보하며, 사용자에게 보다 다양한 선택지를 제공하여 결제 과정을 더욱 매끄럽고 편리하게 만듭니다.\n\n## 사용 가능한 기능\n\n### 1) 결제 처리 <br>\n  다양한 지원 방법을 통해 사용자가 결제를 할 수 있도록 하며, 안전하고 빠른 거래를 보장합니다.\n\n### 2) 결제 취소 <br>\n   전체 또는 부분 환불 옵션을 통해 결제를 취소할 수 있는 기능을 제공합니다.\n\n### 3) 거래 내역 조회 <br>\n   결제 상태 및 타임스탬프를 포함한 과거 거래의 상세 기록을 사용자가 볼 수 있도록 합니다.\n\n## 사용 방법\n\n### 1) 분석/설계\n1. 적용한 PBC의 바운디드 컨텍스트 영역을 더블 클릭하여 PBC 패널을 활성화 합니다.\n\n<img width=\"1275\" alt=\"image\" src=\"https://github.com/user-attachments/assets/69cebda6-8334-4945-b0b7-7b061ad6c064\" /> <br>\n<PBC Panel 생성 예시>\n\n2. PBC 패널 옵션중 읽기 요소, 커맨드 요소, 이벤트 요소에서 각각 사용할 기능에 해당하는 이벤트스토밍 스티커를 선택합니다. \n\n<img width=\"435\" alt=\"image\" src=\"https://github.com/user-attachments/assets/22365ca1-139f-4582-a95f-bb425bb61383\" /> <br>\n<Panel 스티커 옵션 선택 예시>\n\n* 결제를 통한 결제정보 업데이트와 같은 다른 마이크로서비스와의 통신이 발생할 경우\n  Event - Policy Relation을 연결해야합니다.\n\n  예시) 결제성공을 통한 주문 애그리거트의 결제정보 변경\n  \n  <img width=\"823\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cfaa6b70-a489-42eb-8c18-823b8c9ed7dc\" /> <br>\n  \n\n### 2) 구현\n1. 패널을 닫은 후, CODE를 클릭하여 코드 프리뷰를 통해 이벤트스토밍기반 생성된 코드를 확인합니다.\n<img width=\"714\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4d3f35e7-30cb-483d-a3b5-2fd099101ed4\" /> <br>\n\n2. 생성된 코드에서 선택한 PBC 폴더 > README.md를 클릭하여 소스코드 사용방법을 확인합니다.\n<img width=\"716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/324887ab-53b3-4bd9-b8ba-823a62bcf764\" /> <br>\n<PBC README.md 파일 예시>\n\n3. IDE환경에서 소스코드를 Load한 후, README를 참고하여 다운로드 > 압축 해제를 진행하여 소스코드에 다운로드 받은 PBC가 생성되었는지 확인합니다.\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/037b4ac3-dc03-4b96-9d83-dd049629d24f\" /> <br>\n<PBC 소스코드 다운 예시>\n\n4. port 충돌을 고려해 application.yml(payment/src/main/resources/application.yml)의 port를 적절하게 변경합니다.\n<img width=\"290\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8809f047-3cc4-4e66-932e-9f89f6f8df5b\" /> <br>\n<PBC Port 변경 예시>\n\n6. 이후, EDA기반 통신이 이루어지도록 다른 마이크로서비스와 topic명을 일치 시키기 위해 destination을 수정합니다.\n<img width=\"314\" alt=\"image\" src=\"https://github.com/user-attachments/assets/634d95ea-3d50-43e2-8d95-2a42a51de390\" /> <br>\n\n7. Frontend도 동일하게 package.json(frontend/package.json)의 'start'에 명시된 port number를 변경합니다.\n<img width=\"366\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c750e392-c186-4d25-a8a1-2c088a412468\" /> <br>\n\n8. 아래 커맨드를 통해 Payment system의 backend, frontend를 기동합니다.\n```\n// 1. payment Backend\n\n// Root 기준\ncd payment-system-0-0-6\ncd payment\nmvn spring-boot:run\n\n// 2. payment Frontend\n\n// Root 기준\ncd frontend\nnpm install\nnpm run build\nnpm run start\n```\n\n8. Payment system의 Gateway 라우팅 설정을 진행하기 위해 application.yml(gateway/src/resources/application.yml)에 라우팅을 설정합니다.\n<img width=\"350\" alt=\"image\" src=\"https://github.com/user-attachments/assets/884ee895-b385-43be-aa37-7626b1d70056\" /> <br>\n\n9. Root에 위치한 Frontend에 web component 등록을 위해 index.html(frontend/public/index.html)에 Payment system의 17line에 아래와 같이 등록합니다.\n```\n<script src=\"<Payment system의 Frontend Url>/payment-system-app.js\"></script>\n```\n<img width=\"1013\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8a5e7b96-facd-4c0b-9e65-387c198a2d80\" /> <br>\n\n10. Payment system을 SingleSPA로 동작하기 위해 Component의 \\<template>과 <script>에 다음과 같이 코드를 생성합니다.\n```\n// template\n<template>\n  <payment-system-app>\n      <payment-system\n          service-type=\"<payment-system frontend의 Payment.vue에 생성된 타입 ex) pay, refund, receipt...>\"\n          :request-info=\"JSON.stringify(paymentData)\" \n          buyer-info-mode=\"<결제 detail 정보 옵션 ex) true, false>\"\n      ></payment-system>\n  </payment-system-app>\n</template>\n\n// script\ndata: () => ({\n  snackbar: {\n    paymentData: null,\n}),\nasync created() {\n  if(!this.paymentData){\n    this.paymentData = {\n      itemId : this.decode(this.value._links.self.href.split(\"/\")[this.value._links.self.href.split(\"/\").length - 1]),\n      price: , // 직접 설정\n      name: \"\", // 직접 설정\n      buyerId: \"\", // 직접 설정\n      buyerEmail: \"\", // 직접 설정\n      buyerTel: \"\", // 직접 설정\n      buyerName: \"\" // 직접 설정\n    }\n  }\n}\n```\n\nPayment system에 대한 설정이 완료되면 Root Frontend UI에 아래와 같이 Payment system에 대한 UI가 생성됩니다. <br>\n![image](https://github.com/user-attachments/assets/5792ce28-b318-4ed8-b65d-d908fb1524ec) <br>\n\n",
                        "id": 21,
                        "pbcPath": "https://github.com/msa-ez/pbc-payment-system/blob/main/model.json"
                    },
                    {
                        "name": "document-management",
                        "rating": 5,
                        "imageUrl": "https://github.com/user-attachments/assets/533ae0ee-e901-49f6-b1fe-ed24cc9e2626",
                        "description": "파일관리를 위한 공통 기능",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "### Instruction\n",
                        "id": 27,
                        "pbcPath": "https://github.com/msa-ez/pbc-document-management/blob/main/model.json"
                    },
                    {
                        "name": "gitlab",
                        "rating": 5,
                        "imageUrl": null,
                        "description": "openapi.yaml",
                        "tags": [
                            "COMMON"
                        ],
                        "instruction": "## instruction\n",
                        "id": 31,
                        "pbcPath": "https://github.com/msa-ez/pbc-gitlab/blob/main/openapi.yaml"
                    },
                    {
                        "name": "PBC-Test",
                        "rating": 5,
                        "imageUrl": "https://github.com/msa-ez/template-spring-boot-3/assets/123912988/a901ad8f-7548-42db-b4a4-67a34bfd9279",
                        "description": "Framework for rapidly and easily developing Java-based web applications.",
                        "tags": [
                            "PBC"
                        ],
                        "instruction": "### Spring Boot is a popular framework in the Java ecosystem for building microservices and web applications. Here are some of the key advantages of Spring Boot:\n\n#### Rapid Development: Spring Boot offers a range of out-of-the-box functionalities and default configurations, which helps in quick application development without much boilerplate code.\n\n#### Standalone: Spring Boot applications are standalone and web servers can be embedded in the application. This means applications can be run from the command line without needing an external server.\n\n#### Production Ready: It comes with built-in features like health checks and metrics, which makes it easy to monitor and manage production applications.\n\n#### Opinionated Defaults: Spring Boot gives you a set of default settings, libraries, and configurations so you can get started without needing to figure out what's the best way to set up a Spring application.\n\n#### Microservices Ready: Spring Boot works seamlessly with Spring Cloud, making it a natural choice for building microservices applications.\n\n#### No Code Generation: Spring Boot does not generate code and there is absolutely zero requirement for XML configuration.\n\n#### Customizable: While it provides a lot of default configurations, settings, and libraries, these can easily be overridden and customized as per the requirements.\n\n#### Spring Ecosystem: It integrates seamlessly with other Spring modules like Spring Data, Spring Security, and Spring Batch.\n\n#### Rich Developer Tools: Spring Boot includes an array of tools to improve the productivity of developers, such as the Spring Boot Initializr for bootstrapping a new project and the Actuator for introspecting and managing your application.\n\n#### Embedded Server Support: It supports embedded servers like Tomcat, Jetty, and Undertow, which reduces the need for external server setup.\n\n#### Wide Range of Plugins: Spring Boot offers a wide range of built-in plugins for developers, facilitating tasks such as creating executable JARs and WARs.\n\n#### Active Community: Spring Boot has a very active community which means that it's continuously updated, and developers can get support from community members, forums, and blogs.\n\n#### Extensive Documentation: Spring Boot provides comprehensive documentation, making it easier for developers to understand, adopt, and troubleshoot.\n",
                        "id": 32,
                        "pbcPath": "https://github.com/msa-ez/pbc-testRepo/blob/main/openapi.yaml"
                    }
                ],
                "currentGeneratedLength": 0,
                "timestamp": "2025-07-08T06:11:48.877Z"
            },
            {
                "type": "aggregateDraftDialogDto",
                "uniqueId": "1751955205990",
                "isShow": true,
                "draftOptions": [
                    {
                        "boundedContext": "HandoverManagement",
                        "boundedContextAlias": "인수인계 관리",
                        "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                        "options": [
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "HandoverStatus",
                                                "alias": "인수인계 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "UserReference",
                                                "alias": "사용자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "CorporationReference",
                                                "alias": "법인 참조",
                                                "referencedAggregate": {
                                                    "name": "Corporation",
                                                    "alias": "법인"
                                                }
                                            },
                                            {
                                                "name": "HandoverDetail",
                                                "alias": "인수인계 상세",
                                                "referencedAggregateName": ""
                                            },
                                            {
                                                "name": "HandoverResult",
                                                "alias": "인수인계 결과",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "인수인계의 전체 프로세스(등록, 상세, 결과, 승인/반려)를 하나의 Aggregate로 집중시켜 업무 흐름을 완전하게 트랜잭션 단위로 보장한다.",
                                    "coupling": "User, Corporation 등 외부 컨텍스트는 ValueObject 참조로 분리되어 있으므로 실제 Aggregate 경계 간 결합도가 낮다.",
                                    "consistency": "모든 인수인계 상태 및 주요 비즈니스 불변성(상태변경, 승인 등)이 하나의 트랜잭션에서 원자적으로 처리된다.",
                                    "encapsulation": "프로세스와 관련된 모든 규칙, 승인/반려, 상세 등록/수정/결과 기록이 내부적으로 숨겨져 관리된다.",
                                    "complexity": "도메인 구조가 단순하여 개발, 유지보수, 트랜잭션 관리가 용이하다.",
                                    "independence": "외부 컨텍스트의 변경(예: 사용자/법인)과 무관하게 프로세스의 비즈니스 로직을 독립적으로 유지 가능하다.",
                                    "performance": "인수인계 건 단위의 조회/변경이 많을 때 한 번의 Aggregate 접근으로 모든 정보 확인 및 변경이 가능하다."
                                },
                                "cons": {
                                    "cohesion": "상세 내역, 결과, 승인 등 세부 기능이 복합적으로 포함되어 Aggregate가 점차 비대해질 수 있다.",
                                    "coupling": "모든 세부 변경이 하나의 Aggregate 내에서 이루어지므로 동시성 요구가 높아질 경우 충돌 우려가 있다.",
                                    "consistency": "대용량 처리나 빈번한 변경(상세/결과/승인)이 집중될 경우 트랜잭션 지연 및 병목이 발생할 수 있다.",
                                    "encapsulation": "프로세스 내부의 다양한 도메인 규칙(예: 상세별 별도 검증)이 노출될 우려가 있다.",
                                    "complexity": "요구사항 확장(예: 다중 승인, 상세별 결과 기록 등) 시 내부 로직 복잡도가 증가한다.",
                                    "independence": "상세, 결과, 승인 등 개별 단계의 확장 혹은 재사용이 어렵다.",
                                    "performance": "빈번한 세부 업데이트와 대량 동시 요청 시 대기와 잠금 경쟁으로 인한 성능 저하가 발생할 수 있다."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리",
                                    "displayName": "인수인계 관리",
                                    "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                                    "aggregates": [
                                        {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        {
                                            "name": "HandoverDetail",
                                            "alias": "인수인계 상세"
                                        },
                                        {
                                            "name": "HandoverResult",
                                            "alias": "인수인계 결과"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                                        "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                                        "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "HandoverStatus",
                                                "alias": "인수인계 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "UserReference",
                                                "alias": "사용자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "CorporationReference",
                                                "alias": "법인 참조",
                                                "referencedAggregate": {
                                                    "name": "Corporation",
                                                    "alias": "법인"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "HandoverDetail",
                                            "alias": "인수인계 상세"
                                        },
                                        "enumerations": [],
                                        "valueObjects": [
                                            {
                                                "name": "Document",
                                                "alias": "문서",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "HandoverResult",
                                            "alias": "인수인계 결과"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "ApprovalStatus",
                                                "alias": "승인 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "ApproverReference",
                                                "alias": "승인자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "프로세스, 상세, 결과를 역할별로 분리하여 각 Aggregate가 단일 책임 원칙을 따른다.",
                                    "coupling": "프로세스와 상세/결과의 라이프사이클이 분리되어 트랜잭션 경계를 유연하게 설정할 수 있다.",
                                    "consistency": "주요 상태 변경과 승인/반려가 각 Aggregate 단위로 나뉘어 동시처리와 데이터 일관성 관리가 용이하다.",
                                    "encapsulation": "각 Aggregate가 자신의 비즈니스 규칙과 데이터를 효과적으로 숨기고 관리한다.",
                                    "complexity": "각 도메인 객체별 업무 기능을 세분화하여 도메인 모델이 명확해지고 확장성이 좋아진다.",
                                    "independence": "상세 등록, 결과 승인 등 각 기능별로 독립적인 유지보수 및 확장 가능성이 높다.",
                                    "performance": "상세 정보나 결과만 빈번하게 변경되는 경우 불필요한 데이터 잠금/로드 없이 필요한 부분만 처리할 수 있다."
                                },
                                "cons": {
                                    "cohesion": "프로세스와 상세/결과 간 비즈니스 규칙이 나뉘어 구현 복잡도가 증가한다.",
                                    "coupling": "프로세스의 변경 사항이 상세/결과 Aggregate에도 영향을 미칠 수 있어 상호 조정 필요성이 있다.",
                                    "consistency": "프로세스와 상세/결과 간 원자적 변경이 필요할 경우 어플리케이션 서비스 단의 보상 논리 등 추가 구현이 필요하다.",
                                    "encapsulation": "인수인계 전반의 흐름 제어 및 상태 검증이 분산되어 있어 전체 불변성 관리가 어려울 수 있다.",
                                    "complexity": "전체 프로세스 조회/처리 시 여러 Aggregate를 조합해 사용해야 하므로 복합 쿼리 및 조정 로직이 늘어난다.",
                                    "independence": "프로세스와 상세, 결과의 의존 관계가 존재해 완전한 독립은 어렵다.",
                                    "performance": "전체 건 조회 시 여러 Aggregate 조인이나 별도 조회가 필요하여 조회 성능이 다소 저하될 수 있다."
                                },
                                "isAIRecommended": true,
                                "boundedContext": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리",
                                    "displayName": "인수인계 관리",
                                    "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                                    "aggregates": [
                                        {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        {
                                            "name": "HandoverDetail",
                                            "alias": "인수인계 상세"
                                        },
                                        {
                                            "name": "HandoverResult",
                                            "alias": "인수인계 결과"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                                        "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                                        "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "HandoverStatus",
                                                "alias": "인수인계 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "UserReference",
                                                "alias": "사용자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "CorporationReference",
                                                "alias": "법인 참조",
                                                "referencedAggregate": {
                                                    "name": "Corporation",
                                                    "alias": "법인"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "HandoverDetail",
                                            "alias": "인수인계 상세"
                                        },
                                        "enumerations": [],
                                        "valueObjects": [
                                            {
                                                "name": "Document",
                                                "alias": "문서",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "HandoverResult",
                                            "alias": "인수인계 결과"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "ApprovalStatus",
                                                "alias": "승인 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "ApproverReference",
                                                "alias": "승인자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "HandoverApproval",
                                            "alias": "인수인계 승인"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "ApprovalDecision",
                                                "alias": "결재 결정"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "HandoverResultReference",
                                                "alias": "인수인계 결과 참조",
                                                "referencedAggregate": {
                                                    "name": "HandoverResult",
                                                    "alias": "인수인계 결과"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "각 단계(프로세스/상세/결과/승인)를 Aggregate 단위로 명확하게 분리, 도메인 책임이 매우 명확하다.",
                                    "coupling": "Aggregate 간 의존성이 ValueObject로만 연결되므로 컨텍스트 간 결합도가 낮다.",
                                    "consistency": "단계별로 상태 및 승인 관리가 명확하며, 변경 사항 추적 및 롤백 관리가 용이하다.",
                                    "encapsulation": "승인 및 반려 등 결재 로직을 별도 Aggregate에서 관리하므로 권한 및 이력 관리가 철저하다.",
                                    "complexity": "확장(다중 승인, 단계별 히스토리 등)에 매우 유리한 구조다.",
                                    "independence": "각 Aggregate를 별도로 개발/배포 가능해 대규모 조직에서 협업 및 확장성이 높다.",
                                    "performance": "부분 단위 조회/변경이 잦은 업무 환경에 적합하며, 대량 건 처리 시 분산 처리 및 병렬화에 유리하다."
                                },
                                "cons": {
                                    "cohesion": "업무 흐름에 따라 여러 Aggregate 조합 및 상태 동기화가 필수라 구현 난이도가 매우 높다.",
                                    "coupling": "상태 변이·승인·상세 간 데이터 정합성 보장을 위한 이벤트/보상 트랜잭션 구현이 필요하다.",
                                    "consistency": "트랜잭션 분리가 심화될수록 단일 프로세스 내 일관성 확보가 까다로워진다.",
                                    "encapsulation": "프로세스 상태 변화, 승인 이력 등 전체 규칙이 분산되어 관리 부담이 크다.",
                                    "complexity": "전체 플로우를 오케스트레이션하는 서비스 계층 복잡도가 크게 증가한다.",
                                    "independence": "상호 참조가 불가피해 완전한 독립 개발 및 배포가 제한적일 수 있다.",
                                    "performance": "여러 Aggregate 동시 조회/변경 시 I/O 및 네트워크 오버헤드가 발생한다."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "HandoverManagement",
                                    "alias": "인수인계 관리",
                                    "displayName": "인수인계 관리",
                                    "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                                    "aggregates": [
                                        {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        },
                                        {
                                            "name": "HandoverDetail",
                                            "alias": "인수인계 상세"
                                        },
                                        {
                                            "name": "HandoverResult",
                                            "alias": "인수인계 결과"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                                        "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                                        "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                            }
                        ],
                        "conclusions": "옵션 1은 단일 트랜잭션 내 일관성과 단순 개발·운영이 우선일 때 적합하다. 옵션 2는 업무 역할 및 상태별로 책임을 분리하여 확장성·유지보수성이 중요한 경우 이상적이며, 대부분의 인수인계 실무에 적합하다. 옵션 3은 승인·히스토리 등 결재 이력이 매우 중요하거나 대규모 확장·복잡 업무에 필요한 경우에만 추천된다.",
                        "defaultOptionIndex": 1,
                        "inference": "\n\n요구사항과 이벤트 흐름, DDL 및 컨텍스트 관계 분석 결과, 인수인계 관리의 핵심 불변성은 인수인계 프로세스 전체 단계(등록~상태변경~승인)에서 데이터 원자성을 보장하는 것이다. 또한 각 역할(인계자, 인수자, 승인자)은 이미 UserOrganization 컨텍스트에서 관리되고 있으므로, Aggregate 간 참조는 ValueObject로 일관되게 처리하였다. 다양한 옵션을 통해 Aggregate 수에 따라 트랜잭션 경계와 데이터 일관성, 유지보수성, 확장성에 차이가 생긴다. 모든 옵션에서 Naming Convention과 누적 정의를 엄격히 준수하였다."
                    },
                    {
                        "boundedContext": "UserOrganization",
                        "boundedContextAlias": "사용자 및 조직 관리",
                        "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                        "options": [
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "UserStatus",
                                                "alias": "사용자 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "CorporationReference",
                                                "alias": "법인 참조",
                                                "referencedAggregate": {
                                                    "name": "Corporation",
                                                    "alias": "법인"
                                                }
                                            },
                                            {
                                                "name": "RoleReference",
                                                "alias": "역할 참조",
                                                "referencedAggregate": {
                                                    "name": "Role",
                                                    "alias": "역할"
                                                }
                                            },
                                            {
                                                "name": "HRInfo",
                                                "alias": "인사 정보",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Role",
                                            "alias": "역할"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "RoleType",
                                                "alias": "역할 유형"
                                            }
                                        ],
                                        "valueObjects": []
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        },
                                        "enumerations": [],
                                        "valueObjects": []
                                    }
                                ],
                                "pros": {
                                    "cohesion": "핵심 정보별로 Aggregate를 분리하여 사용자, 역할, 법인 각각의 책임이 명확하다.",
                                    "coupling": "모든 교차 참조가 ValueObject를 통한 단방향 관계로 설계되어 낮은 결합도를 유지한다.",
                                    "consistency": "주요 업무 불변식(법인별 사용자 소속, 역할 할당 등)이 한 트랜잭션 내에서 보장된다.",
                                    "encapsulation": "각 Aggregate 내부에 관련 속성과 비즈니스 로직을 집중시켜 도메인 규칙 은닉이 우수하다.",
                                    "complexity": "Aggregate 수가 적어 개발 및 유지보수 난이도가 낮으며, 도메인 모델이 단순하다.",
                                    "independence": "핵심 개체 단위로 독립적으로 확장 및 변경이 가능하다.",
                                    "performance": "단일 Aggregate 단위로 CRUD 및 조회가 빠르며, 확장성에 유리하다."
                                },
                                "cons": {
                                    "cohesion": "권한/코드/조직구조 등 세부 관리가 User, Role 내에 통합될 경우 단일 책임 원칙이 일부 희석될 수 있다.",
                                    "coupling": "복잡한 권한, 조직, 코드 관리 요구 시 User, Role Aggregate 크기가 커질 수 있다.",
                                    "consistency": "복합 권한-메뉴-코드 변경시 트랜잭션 경계가 User, Role에 집중되어 다수 동시 작업 시 락 경합 가능성이 있다.",
                                    "encapsulation": "HR 연동, 권한 등 부가 속성이 User에 집중되면 객체 은닉성이 일부 약화된다.",
                                    "complexity": "세부 기능(예: 권한 부여 이력, 메뉴 세트 등) 확장 시 도메인 객체가 비대해질 수 있다.",
                                    "independence": "User 또는 Role 구조 변경 시 연관 비즈니스 로직 영향이 커질 수 있다.",
                                    "performance": "특정 권한, 코드 기반의 대용량 조회 시 단일 User, Role 집합이 병목이 될 수 있다."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "UserOrganization",
                                    "alias": "사용자 및 조직 관리",
                                    "displayName": "사용자 및 조직 관리",
                                    "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                    "aggregates": [
                                        {
                                            "name": "User",
                                            "alias": "사용자"
                                        },
                                        {
                                            "name": "Role",
                                            "alias": "역할"
                                        },
                                        {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.",
                                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );",
                                        "event": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}\n{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}\n{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}",
                                        "eventNames": "HandOverInfoErrorReviewed, HandOverInfoCorrected, UserRoleRegistered, UserRoleChanged, AuthorizationConfigured, PersonalInfoSyncedWithHR 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "UserStatus",
                                                "alias": "사용자 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "CorporationReference",
                                                "alias": "법인 참조",
                                                "referencedAggregate": {
                                                    "name": "Corporation",
                                                    "alias": "법인"
                                                }
                                            },
                                            {
                                                "name": "RoleReference",
                                                "alias": "역할 참조",
                                                "referencedAggregate": {
                                                    "name": "Role",
                                                    "alias": "역할"
                                                }
                                            },
                                            {
                                                "name": "HRInfo",
                                                "alias": "인사 정보",
                                                "referencedAggregateName": ""
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Role",
                                            "alias": "역할"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "RoleType",
                                                "alias": "역할 유형"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "MenuAuthorizationReference",
                                                "alias": "메뉴권한 참조",
                                                "referencedAggregate": {
                                                    "name": "MenuAuthorization",
                                                    "alias": "메뉴권한"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        },
                                        "enumerations": [],
                                        "valueObjects": []
                                    },
                                    {
                                        "aggregate": {
                                            "name": "MenuAuthorization",
                                            "alias": "메뉴권한"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "MenuType",
                                                "alias": "메뉴 유형"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "MenuCodeReference",
                                                "alias": "메뉴코드 참조",
                                                "referencedAggregate": {
                                                    "name": "MenuCode",
                                                    "alias": "메뉴코드"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "MenuCode",
                                            "alias": "메뉴코드"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "CodeType",
                                                "alias": "코드 유형"
                                            }
                                        ],
                                        "valueObjects": []
                                    }
                                ],
                                "pros": {
                                    "cohesion": "사용자, 역할, 법인, 메뉴권한, 메뉴코드 등 각 도메인별 세부 책임이 Aggregate 단위로 명확히 분리된다.",
                                    "coupling": "MenuAuthorization, MenuCode를 별도 Aggregate로 분리하여 역할, 권한 변경이 User/Role과 독립적으로 이뤄진다.",
                                    "consistency": "권한/메뉴/코드 등 변경이 각각의 트랜잭션 경계 내에서 일관되게 보장된다.",
                                    "encapsulation": "조직, 역할, 메뉴권한 등 각 도메인 규칙이 해당 Aggregate 내부에 은닉되어 유지된다.",
                                    "complexity": "도메인 복잡도가 기능별로 분산되어 개별 로직 파악 및 유지보수 용이성이 높다.",
                                    "independence": "Menu, Code 등 세부 관리 기능을 독립적으로 확장/변경/배포할 수 있다.",
                                    "performance": "대규모 권한/코드 기반 조회, 변경 작업에서 병렬처리 및 확장성이 뛰어나다."
                                },
                                "cons": {
                                    "cohesion": "Aggregate 수가 증가해 각 객체 간 참조 및 이벤트 설계가 복잡해진다.",
                                    "coupling": "User-Role-MenuAuthorization-MenuCode 간 참조 체인이 길어질 수 있다.",
                                    "consistency": "권한/메뉴/코드가 동시에 바뀌는 업무의 트랜잭션 일관성 보장이 상대적으로 복잡해진다.",
                                    "encapsulation": "업무 전체 플로우에서 데이터 통합 관점의 은닉성이 감소할 수 있다.",
                                    "complexity": "Aggregate 설계와 이벤트/동기화 로직이 복잡해져 전체적인 도메인 이해 난이도가 높아진다.",
                                    "independence": "업무 특성상 권한-메뉴-코드 변경 이벤트가 상호 연동되어 완전 독립 개발/배포에 제한이 있다.",
                                    "performance": "복합 조회 시 여러 Aggregate 조인 및 연속 참조로 인해 조회 성능이 저하될 수 있다."
                                },
                                "isAIRecommended": true,
                                "boundedContext": {
                                    "name": "UserOrganization",
                                    "alias": "사용자 및 조직 관리",
                                    "displayName": "사용자 및 조직 관리",
                                    "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                    "aggregates": [
                                        {
                                            "name": "User",
                                            "alias": "사용자"
                                        },
                                        {
                                            "name": "Role",
                                            "alias": "역할"
                                        },
                                        {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.",
                                        "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );",
                                        "event": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}\n{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}\n{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}",
                                        "eventNames": "HandOverInfoErrorReviewed, HandOverInfoCorrected, UserRoleRegistered, UserRoleChanged, AuthorizationConfigured, PersonalInfoSyncedWithHR 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                            }
                        ],
                        "conclusions": "1안(핵심 3개 Aggregate 구조)은 사용자-역할-법인 중심의 단순화된 조직 관리가 필요한 경우 적합하며, 시스템 확장 및 유지보수가 용이하다. 2안(5개 Aggregate 구조)은 권한/메뉴/코드 관리, 메뉴 기반 세분화가 중요한 엔터프라이즈 환경에 적합하며, 각 도메인별 독립성·확장성이 높다. 조직 규모가 크고 권한/코드/메뉴 관리의 복잡성이 높은 환경에서는 2안을 선택하는 것이 바람직하다.",
                        "defaultOptionIndex": 1,
                        "inference": "\n\n요구사항 및 이벤트 흐름을 분석한 결과, 핵심 도메인 개념인 User, Role, Corporation을 중심으로 설계안을 도출했다. 1안은 최소 핵심(3개), 2안은 확장 구조(5개)로 나누어 기능별 분리를 달리했다. Handover, Communication 관련 기존 Aggregate는 ValueObject 참조로 일관성을 지켰다."
                    },
                    {
                        "boundedContext": "CommunicationNotification",
                        "boundedContextAlias": "커뮤니케이션 및 알림",
                        "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                        "options": [
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Guide",
                                            "alias": "안내문구"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "GuideScope",
                                                "alias": "안내문구 적용범위"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "GuideModifierReference",
                                                "alias": "수정자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "MailTemplate",
                                            "alias": "이메일 템플릿"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "TemplateStage",
                                                "alias": "템플릿 적용단계"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "TemplateModifierReference",
                                                "alias": "템플릿 수정자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "aggregate": {
                                            "name": "MailSendLog",
                                            "alias": "메일 발송 이력"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "MailSendStatus",
                                                "alias": "메일 발송 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "RecipientReference",
                                                "alias": "수신자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "SenderReference",
                                                "alias": "발신자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "RelatedHandoverProcessReference",
                                                "alias": "관련 인수인계 참조",
                                                "referencedAggregate": {
                                                    "name": "HandoverProcess",
                                                    "alias": "인수인계 프로세스"
                                                }
                                            },
                                            {
                                                "name": "MailTemplateReference",
                                                "alias": "메일 템플릿 참조",
                                                "referencedAggregate": {
                                                    "name": "MailTemplate",
                                                    "alias": "이메일 템플릿"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "각 Aggregate가 안내문구, 템플릿, 메일 발송 내역 등 주요 도메인 기능별로 잘 분리되어 있어 도메인 책임이 명확합니다.",
                                    "coupling": "외부 Aggregate와의 참조는 ValueObject로 일방향 연결만 사용해, 컨텍스트 경계를 넘는 의존성이 최소화됩니다.",
                                    "consistency": "메일 발송, 템플릿 수정, 가이드 등록 등 모든 중요 비즈니스 규칙이 각 Aggregate 트랜잭션 내에서 일관성 있게 보장됩니다.",
                                    "encapsulation": "Aggregate 내부에 모든 상태와 행위가 집중되어 있어, 도메인 규칙이 효과적으로 은닉됩니다.",
                                    "complexity": "각 기능별 Aggregate로 분산 설계되어 복잡한 비즈니스 로직도 관리 및 유지보수가 용이합니다.",
                                    "independence": "안내문구, 템플릿, 메일 발송 기록이 서로 독립적으로 확장 및 배포 가능합니다.",
                                    "performance": "조회/기록 기능이 별도의 Aggregate로 분리되어, 빈번한 메일 발송 로깅에도 성능 저하가 적습니다."
                                },
                                "cons": {
                                    "cohesion": "메일 발송 시 템플릿과 가이드, 내역이 밀접하게 연관되지만, 분리 Aggregate 설계로 복합 워크플로우에서는 서비스 계층에서의 조율이 필요합니다.",
                                    "coupling": "여러 Aggregate를 조합하는 트랜잭션은 결국 애플리케이션 계층에서 보상 트랜잭션이나 이벤트 조율이 필요합니다.",
                                    "consistency": "템플릿 수정 중에 동시 메일 발송이 일어나면 최신 문구 반영이 일관성 있게 보장되도록 별도 로직이 필요합니다.",
                                    "encapsulation": "전체 커뮤니케이션 흐름을 한 곳에서 파악하기 위해서는 여러 Aggregate를 따라가야 합니다.",
                                    "complexity": "여러 Aggregate를 동시에 관리하는 오케스트레이션 로직이 일부 추가됩니다.",
                                    "independence": "이벤트 흐름상 Aggregate 간 관계를 정확히 설계하지 않으면 서비스 연계시 장애 가능성이 있습니다.",
                                    "performance": "메일 발송시 템플릿, 가이드, 유저, 인수인계 등 여러 Aggregate를 조합 조회하면 초기 로딩 비용이 증가할 수 있습니다."
                                },
                                "isAIRecommended": false,
                                "boundedContext": {
                                    "name": "CommunicationNotification",
                                    "alias": "커뮤니케이션 및 알림",
                                    "displayName": "커뮤니케이션 및 알림",
                                    "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                    "aggregates": [
                                        {
                                            "name": "MailTemplate",
                                            "alias": "이메일 템플릿"
                                        },
                                        {
                                            "name": "Guide",
                                            "alias": "안내문구"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.",
                                        "ddl": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';",
                                        "event": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}",
                                        "eventNames": "GuideRegistered, GuideModified, MailTemplateRegistered, MailTemplateModified, StageMailSent 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                            },
                            {
                                "structure": [
                                    {
                                        "aggregate": {
                                            "name": "Communication",
                                            "alias": "커뮤니케이션 통합"
                                        },
                                        "enumerations": [
                                            {
                                                "name": "GuideScope",
                                                "alias": "안내문구 적용범위"
                                            },
                                            {
                                                "name": "TemplateStage",
                                                "alias": "템플릿 적용단계"
                                            },
                                            {
                                                "name": "MailSendStatus",
                                                "alias": "메일 발송 상태"
                                            }
                                        ],
                                        "valueObjects": [
                                            {
                                                "name": "GuideInfo",
                                                "alias": "안내문구 정보",
                                                "referencedAggregateName": ""
                                            },
                                            {
                                                "name": "MailTemplateInfo",
                                                "alias": "이메일 템플릿 정보",
                                                "referencedAggregateName": ""
                                            },
                                            {
                                                "name": "MailSendRecord",
                                                "alias": "메일 발송 내역",
                                                "referencedAggregateName": ""
                                            },
                                            {
                                                "name": "RecipientReference",
                                                "alias": "수신자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "SenderReference",
                                                "alias": "발신자 참조",
                                                "referencedAggregate": {
                                                    "name": "User",
                                                    "alias": "사용자"
                                                }
                                            },
                                            {
                                                "name": "RelatedHandoverProcessReference",
                                                "alias": "관련 인수인계 참조",
                                                "referencedAggregate": {
                                                    "name": "HandoverProcess",
                                                    "alias": "인수인계 프로세스"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "pros": {
                                    "cohesion": "모든 커뮤니케이션 기능이 하나의 Aggregate로 묶여서 업무 전체 흐름과 상태를 한 번에 관리할 수 있습니다.",
                                    "coupling": "내부에서 모든 연관정보를 관리하므로 외부와의 데이터 이동/변환 비용이 최소화됩니다.",
                                    "consistency": "메일 발송, 템플릿, 안내문구 변경 등 전체 커뮤니케이션 업무가 하나의 트랜잭션으로 일관성 있게 처리됩니다.",
                                    "encapsulation": "통합 Aggregate 내부에서 상태, 이력, 템플릿, 안내문구 규칙을 완전히 숨길 수 있습니다.",
                                    "complexity": "통합적인 설계로 복잡한 워크플로우/업무 규칙 구현에 유리합니다.",
                                    "independence": "한 Aggregate만 관리하면 되므로 배포·운영·변경이 단일 포인트로 집중됩니다.",
                                    "performance": "단일 Aggregate 접근만으로 전체 커뮤니케이션 데이터를 일괄 조회할 수 있어, 단건 조회/수정이 빠릅니다."
                                },
                                "cons": {
                                    "cohesion": "안내문구, 템플릿, 발송이력 등 서로 다른 라이프사이클과 담당 조직이 하나의 집합체로 묶여 응집도가 저하될 수 있습니다.",
                                    "coupling": "업무 영역별로 확장/변경 시 전체 Aggregate가 영향을 받아 변경 비용이 급격히 증가합니다.",
                                    "consistency": "동시 메일 발송, 템플릿/가이드 변경 등이 한 Aggregate 내에서 충돌/경합을 유발할 수 있습니다.",
                                    "encapsulation": "업무별 분리된 규칙·정책의 변경이 Aggregate 전체 설계에 파급될 위험이 큽니다.",
                                    "complexity": "Aggregate 내부 구조가 방대해져서 유지보수, 테스트, 장애 분석이 어려워집니다.",
                                    "independence": "특정 커뮤니케이션 기능만 개별적으로 확장하거나 리팩토링하기가 어렵습니다.",
                                    "performance": "동시성 많은 메일 발송·조회 시 큰 Aggregate가 병목을 유발할 수 있습니다."
                                },
                                "isAIRecommended": true,
                                "boundedContext": {
                                    "name": "CommunicationNotification",
                                    "alias": "커뮤니케이션 및 알림",
                                    "displayName": "커뮤니케이션 및 알림",
                                    "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                    "aggregates": [
                                        {
                                            "name": "MailTemplate",
                                            "alias": "이메일 템플릿"
                                        },
                                        {
                                            "name": "Guide",
                                            "alias": "안내문구"
                                        }
                                    ],
                                    "requirements": {
                                        "userStory": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.",
                                        "ddl": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';",
                                        "event": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}",
                                        "eventNames": "GuideRegistered, GuideModified, MailTemplateRegistered, MailTemplateModified, StageMailSent 이벤트가 발생할 수 있어."
                                    }
                                },
                                "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                            }
                        ],
                        "conclusions": "옵션 1은 안내문구, 템플릿, 메일 발송 내역 등 핵심 도메인별로 Aggregate가 분리되어 있어 실제 조직별 업무 책임, 기능별 확장, 외부 시스템과의 이벤트 연계에 유리합니다. 메일 발송 내역 등 실시간 처리량이 많은 작업에도 안정적인 확장성이 필요할 때 적합합니다. 옵션 2는 관리 포인트가 적고, 전체 커뮤니케이션 흐름을 단일 트랜잭션으로 다뤄야 하는 단순화된 시나리오(커뮤니케이션 변경이 드물고, 트랜잭션 경합이 심하지 않을 때)에 적합합니다.",
                        "defaultOptionIndex": 1,
                        "inference": "\n\n주요 비즈니스 요구 사항, 이벤트, DDL, 그리고 컨텍스트 관계를 바탕으로, 안내문구(Guide), 이메일 템플릿(MailTemplate), 메일 발송 이력(MailSendLog) 등 핵심 기능별로 집계 기준을 도출했습니다. 기존에 존재하는 외부 집계(HandoverProcess, User 등)는 ValueObject 참조로 연결하고, 옵션별로 Aggregate 수를 다르게 구성했습니다. 이벤트 원자성, Pub/Sub 패턴, 템플릿/가이드의 수정 및 등록, 메일 발송 내역의 원자적 기록이 중요한 기준이었습니다."
                    }
                ],
                "draftUIInfos": {
                    "leftBoundedContextCount": 0,
                    "directMessage": "Generating options for 커뮤니케이션 및 알림 Bounded Context... (6883 characters generated)",
                    "progress": 100
                },
                "isGeneratorButtonEnabled": true,
                "boundedContextVersion": 1,
                "retryInputs": {
                    "initialInputs": [
                        {
                            "boundedContext": {
                                "name": "HandoverManagement",
                                "alias": "인수인계 관리",
                                "displayName": "인수인계 관리",
                                "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                                "aggregates": [
                                    {
                                        "name": "HandoverProcess",
                                        "alias": "인수인계 프로세스"
                                    },
                                    {
                                        "name": "HandoverDetail",
                                        "alias": "인수인계 상세"
                                    },
                                    {
                                        "name": "HandoverResult",
                                        "alias": "인수인계 결과"
                                    }
                                ],
                                "requirements": {
                                    "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                                    "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                                    "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                                    "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                                }
                            },
                            "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                        },
                        {
                            "boundedContext": {
                                "name": "UserOrganization",
                                "alias": "사용자 및 조직 관리",
                                "displayName": "사용자 및 조직 관리",
                                "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                "aggregates": [
                                    {
                                        "name": "User",
                                        "alias": "사용자"
                                    },
                                    {
                                        "name": "Role",
                                        "alias": "역할"
                                    },
                                    {
                                        "name": "Corporation",
                                        "alias": "법인"
                                    }
                                ],
                                "requirements": {
                                    "userStory": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.",
                                    "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );",
                                    "event": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}\n{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}\n{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}",
                                    "eventNames": "HandOverInfoErrorReviewed, HandOverInfoCorrected, UserRoleRegistered, UserRoleChanged, AuthorizationConfigured, PersonalInfoSyncedWithHR 이벤트가 발생할 수 있어."
                                }
                            },
                            "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                        },
                        {
                            "boundedContext": {
                                "name": "CommunicationNotification",
                                "alias": "커뮤니케이션 및 알림",
                                "displayName": "커뮤니케이션 및 알림",
                                "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                                "aggregates": [
                                    {
                                        "name": "MailTemplate",
                                        "alias": "이메일 템플릿"
                                    },
                                    {
                                        "name": "Guide",
                                        "alias": "안내문구"
                                    }
                                ],
                                "requirements": {
                                    "userStory": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.",
                                    "ddl": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';",
                                    "event": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}",
                                    "eventNames": "GuideRegistered, GuideModified, MailTemplateRegistered, MailTemplateModified, StageMailSent 이벤트가 발생할 수 있어."
                                }
                            },
                            "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                        }
                    ],
                    "initialAccumulatedDrafts": {
                        "HandoverManagement": [
                            {
                                "aggregate": {
                                    "name": "HandoverProcess",
                                    "alias": "인수인계 프로세스"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "HandoverDetail",
                                    "alias": "인수인계 상세"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "HandoverResult",
                                    "alias": "인수인계 결과"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            }
                        ],
                        "UserOrganization": [
                            {
                                "aggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "Role",
                                    "alias": "역할"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "Corporation",
                                    "alias": "법인"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            }
                        ],
                        "CommunicationNotification": [
                            {
                                "aggregate": {
                                    "name": "MailTemplate",
                                    "alias": "이메일 템플릿"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "Guide",
                                    "alias": "안내문구"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            }
                        ]
                    }
                },
                "selectedOptionItem": {
                    "HandoverManagement": {
                        "structure": [
                            {
                                "aggregate": {
                                    "name": "HandoverProcess",
                                    "alias": "인수인계 프로세스"
                                },
                                "enumerations": [
                                    {
                                        "name": "HandoverStatus",
                                        "alias": "인수인계 상태"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "UserReference",
                                        "alias": "사용자 참조",
                                        "referencedAggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        }
                                    },
                                    {
                                        "name": "CorporationReference",
                                        "alias": "법인 참조",
                                        "referencedAggregate": {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        }
                                    }
                                ]
                            },
                            {
                                "aggregate": {
                                    "name": "HandoverDetail",
                                    "alias": "인수인계 상세"
                                },
                                "enumerations": [],
                                "valueObjects": [
                                    {
                                        "name": "Document",
                                        "alias": "문서",
                                        "referencedAggregateName": ""
                                    }
                                ]
                            },
                            {
                                "aggregate": {
                                    "name": "HandoverResult",
                                    "alias": "인수인계 결과"
                                },
                                "enumerations": [
                                    {
                                        "name": "ApprovalStatus",
                                        "alias": "승인 상태"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "ApproverReference",
                                        "alias": "승인자 참조",
                                        "referencedAggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        }
                                    }
                                ]
                            }
                        ],
                        "pros": {
                            "cohesion": "프로세스, 상세, 결과를 역할별로 분리하여 각 Aggregate가 단일 책임 원칙을 따른다.",
                            "coupling": "프로세스와 상세/결과의 라이프사이클이 분리되어 트랜잭션 경계를 유연하게 설정할 수 있다.",
                            "consistency": "주요 상태 변경과 승인/반려가 각 Aggregate 단위로 나뉘어 동시처리와 데이터 일관성 관리가 용이하다.",
                            "encapsulation": "각 Aggregate가 자신의 비즈니스 규칙과 데이터를 효과적으로 숨기고 관리한다.",
                            "complexity": "각 도메인 객체별 업무 기능을 세분화하여 도메인 모델이 명확해지고 확장성이 좋아진다.",
                            "independence": "상세 등록, 결과 승인 등 각 기능별로 독립적인 유지보수 및 확장 가능성이 높다.",
                            "performance": "상세 정보나 결과만 빈번하게 변경되는 경우 불필요한 데이터 잠금/로드 없이 필요한 부분만 처리할 수 있다."
                        },
                        "cons": {
                            "cohesion": "프로세스와 상세/결과 간 비즈니스 규칙이 나뉘어 구현 복잡도가 증가한다.",
                            "coupling": "프로세스의 변경 사항이 상세/결과 Aggregate에도 영향을 미칠 수 있어 상호 조정 필요성이 있다.",
                            "consistency": "프로세스와 상세/결과 간 원자적 변경이 필요할 경우 어플리케이션 서비스 단의 보상 논리 등 추가 구현이 필요하다.",
                            "encapsulation": "인수인계 전반의 흐름 제어 및 상태 검증이 분산되어 있어 전체 불변성 관리가 어려울 수 있다.",
                            "complexity": "전체 프로세스 조회/처리 시 여러 Aggregate를 조합해 사용해야 하므로 복합 쿼리 및 조정 로직이 늘어난다.",
                            "independence": "프로세스와 상세, 결과의 의존 관계가 존재해 완전한 독립은 어렵다.",
                            "performance": "전체 건 조회 시 여러 Aggregate 조인이나 별도 조회가 필요하여 조회 성능이 다소 저하될 수 있다."
                        },
                        "boundedContext": {
                            "name": "HandoverManagement",
                            "alias": "인수인계 관리",
                            "displayName": "인수인계 관리",
                            "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다.",
                            "aggregates": [
                                {
                                    "name": "HandoverProcess",
                                    "alias": "인수인계 프로세스"
                                },
                                {
                                    "name": "HandoverDetail",
                                    "alias": "인수인계 상세"
                                },
                                {
                                    "name": "HandoverResult",
                                    "alias": "인수인계 결과"
                                }
                            ],
                            "requirements": {
                                "userStory": "US-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.",
                                "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';",
                                "event": "{\"name\":\"HandOverInfoErrorReported\",\"displayName\":\"인계자 정보 오류 보고됨\",\"actor\":\"HandOverUser\",\"level\":1,\"description\":\"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\"inputs\":[\"인계자 정보\",\"오류 발견 내역\"],\"outputs\":[\"오류 보고 내역\",\"관리자에게 알림\"],\"nextEvents\":[\"HandOverInfoErrorReviewed\"]}\n{\"name\":\"ReceiverRegistered\",\"displayName\":\"인수자 등록됨\",\"actor\":\"HandOverUser\",\"level\":5,\"description\":\"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\"inputs\":[\"인수자 정보\",\"업무 인계내역\"],\"outputs\":[\"인수자 등록 내역\"],\"nextEvents\":[\"ReceiverRegistrationNotified\"]}\n{\"name\":\"HandoverDetailRegistered\",\"displayName\":\"인수인계 상세 내용 등록됨\",\"actor\":\"HandOverUser\",\"level\":7,\"description\":\"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\"inputs\":[\"상세 인수인계 내용\",\"첨부 문서 정보\"],\"outputs\":[\"등록된 인수인계 상세 내역\"],\"nextEvents\":[\"HandoverDetailRegistrationNotified\"]}\n{\"name\":\"HandoverResultRegistered\",\"displayName\":\"인수인계 결과 등록됨\",\"actor\":\"ReceiverUser\",\"level\":11,\"description\":\"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\"inputs\":[\"업무 인수 결과\",\"코멘트, 후속 조치 등\"],\"outputs\":[\"등록된 인수인계 결과\"],\"nextEvents\":[\"HandoverResultRegistrationNotified\"]}\n{\"name\":\"HandoverApprovalRequested\",\"displayName\":\"인수인계 승인 요청됨\",\"actor\":\"ReceiverUser\",\"level\":13,\"description\":\"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\"inputs\":[\"인수인계 결과\",\"요청 사유\"],\"outputs\":[\"승인 요청 내역\"],\"nextEvents\":[\"HandoverApprovalNotificationSent\"]}\n{\"name\":\"HandoverApproved\",\"displayName\":\"인수인계 승인됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\"inputs\":[\"인수인계 결과\",\"승인 의견\"],\"outputs\":[\"최종 승인 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}\n{\"name\":\"HandoverRejected\",\"displayName\":\"인수인계 반려됨\",\"actor\":\"ApproverUser\",\"level\":15,\"description\":\"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\"inputs\":[\"인수인계 결과\",\"반려 사유\"],\"outputs\":[\"최종 반려 결과\"],\"nextEvents\":[\"HandoverApprovalResultNotified\"]}",
                                "eventNames": "HandOverInfoErrorReported, ReceiverRegistered, HandoverDetailRegistered, HandoverResultRegistered, HandoverApprovalRequested, HandoverApproved, HandoverRejected 이벤트가 발생할 수 있어."
                            }
                        },
                        "description": "# Bounded Context Overview: HandoverManagement (인수인계 관리)\n\n## Role\n인수인계 관리에서는 인계자, 인수자, 승인자 간의 실제 인수인계 프로세스를 관리한다. 인계/인수 대상자 등록, 인수인계 상세 내용 입력, 결과 등록, 승인/반려 등 실질적인 업무 인수인계의 흐름을 통합적으로 담당한다.\n\n## Key Events\n- HandOverInfoErrorReported\n- ReceiverRegistered\n- HandoverDetailRegistered\n- HandoverResultRegistered\n- HandoverApprovalRequested\n- HandoverApproved\n- HandoverRejected\n\n# Requirements\n\n## userStory\n\nUS-001\t인계자 정보 조회\t인계자로서,\n나는 내 기본 인계자 정보(이름, 사번, 직책, 부서 등)를 조회하여 내가 담당하는 업무 인수인계와 관련된 내 정보가 항상 최신이고 정확한지를 확인하고 싶습니다.\n만약 정보에 오류가 있거나 최신 정보가 아니면, 이를 즉각 관리자에게 보고할 수 있어야 합니다.\n\nUS-002\t인수자 정보 조회\t인수자로서,\n나는 내 인수자 정보(이름, 사번, 직책, 소속 등)를 조회하여 내가 인수해야 할 업무와 관련된 내 기본 정보가 정확한지 확인하고, 인계자와 협업 전에 필요한 정보를 사전에 파악하고 싶습니다.\n\nUS-003\t인수자 등록\t인계자 또는 담당자로서,\n나는 한 명 이상의 인수자 정보를 시스템에 등록하여 명확하게 인수인계 대상자를 설정하고, 이후 인수 진행 상황을 시스템 상에서 추적하고 싶습니다.\n\nUS-004\t인수 담당자 조회\n(인계자 확인 / 사람 찾기)\t인계자로서, 나는 이름, 부서, 사번 등의 조건을 사용하여 잠재적 인수 담당자를 검색함으로써 올바른 인수자를 선택하고 등록할 수 있습니다. 이를 통해 업무 인수인계 진행 시 적합한 담당자를 쉽게 파악할 수 있습니다.\n\nUS-005\t인수인계 상세 내용 등록\t인계자로서, 나는 상세 인수인계 내용(업무 프로세스, 관련 문서, 특이사항, 후속 조치 등)을 입력하여 인수자가 업무를 명확하게 이해하고 혼선 없이 인수 과정을 진행할 수 있도록 하고 싶습니다. 상세 정보가 누락될 경우, 인수자와 추가 소통이 필요하므로 반드시 정확히 작성해야 합니다.\n\nUS-006\t인수인계 문서 등록 (ECM 연동)\t인계자로서, 나는 중요 업무 문서를 인수인계 프로세스에 첨부하여 인수자가 문서 기반의 참고 자료를 바로 확인하고, 업무 진행에 필요한 세부사항을 파악할 수 있도록 하고 싶습니다.\n\nUS-007\t인수인계 내용 조회 (인수자 확인)\t인수자로서, 나는 인계자가 제공한 인수인계 상세 내용을 조회하여 사전에 업무에 관련된 모든 상세 정보를 검토할 수 있고, 필요 시 인계자에게 추가 문의를 하여 명확한 업무 인수가 가능하도록 하고 싶습니다.\n\nUS-008\t인수인계 결과 등록\t인수자로서, 나는 인수인계 결과(업무 인수 확인, 후속 조치, 개선 사항 등)를 입력하여 업무 인수 완료 과정을 공식적으로 기록하고, 추후 리뷰 및 피드백을 받을 수 있도록 하고 싶습니다. 결과가 명확하게 기록되면 업무 인수의 효율성과 정확성이 향상됩니다.\n\nUS-009\t인수인계 승인/반려 요청\t인수자로서, 나는 제출한 인수인계 결과에 대해 내 직속 상위자에게 승인 또는 반려 요청을 하여 공식적인 검토 과정을 거쳐 최종 인수인계가 완료되고, 필요한 경우 수정 보완할 수 있도록 하고 싶습니다.\n\nUS-010\t인수인계 결과 조회\t인수자 또는 인계자로서, 나는 최종 인수인계 결과와 상태(승인/반려 여부, 수정 이력 등)를 조회하여 내가 진행한 업무 인수인계 내역을 한눈에 확인하고, 이후 피드백과 문제점을 쉽게 확인할 수 있도록 하고 싶습니다.\n\nUS-011\t승인자 결재 기능\t승인자로서, 나는 제출된 인수인계 결과를 검토하고, 승인 혹은 반려하여 최종 인수인계 프로세스가 공식적으로 완료되고, 업무 인수의 적정성을 보장할 수 있도록 하고 싶습니다. 승인 결정 후 관련자에게 신속하게 피드백이 전달되어야 합니다.\n\n## Event\n\n```json\n{\n  \"name\": \"HandOverInfoErrorReported\",\n  \"displayName\": \"인계자 정보 오류 보고됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 1,\n  \"description\": \"인계자가 본인의 인계자 정보(이름, 사번, 직책, 부서 등)에 오류가 있음을 발견하여 관리자를 통해 오류를 보고함.\",\n  \"inputs\": [\n    \"인계자 정보\",\n    \"오류 발견 내역\"\n  ],\n  \"outputs\": [\n    \"오류 보고 내역\",\n    \"관리자에게 알림\"\n  ],\n  \"nextEvents\": [\n    \"HandOverInfoErrorReviewed\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"ReceiverRegistered\",\n  \"displayName\": \"인수자 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 5,\n  \"description\": \"인계자 또는 담당자가 시스템에 한 명 이상의 인수자를 지정하여 업무 인수 대상자를 명확히 설정함.\",\n  \"inputs\": [\n    \"인수자 정보\",\n    \"업무 인계내역\"\n  ],\n  \"outputs\": [\n    \"인수자 등록 내역\"\n  ],\n  \"nextEvents\": [\n    \"ReceiverRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverDetailRegistered\",\n  \"displayName\": \"인수인계 상세 내용 등록됨\",\n  \"actor\": \"HandOverUser\",\n  \"level\": 7,\n  \"description\": \"인계자가 인수인계의 상세 내용(업무 프로세스, 문서, 특이사항 등)을 입력하여 인수자가 정확히 이해할 수 있도록 함.\",\n  \"inputs\": [\n    \"상세 인수인계 내용\",\n    \"첨부 문서 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 상세 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverDetailRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverResultRegistered\",\n  \"displayName\": \"인수인계 결과 등록됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 11,\n  \"description\": \"인수자가 업무 인수 결과(인수 확인, 후속 조치 등)를 등록함.\",\n  \"inputs\": [\n    \"업무 인수 결과\",\n    \"코멘트, 후속 조치 등\"\n  ],\n  \"outputs\": [\n    \"등록된 인수인계 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverResultRegistrationNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApprovalRequested\",\n  \"displayName\": \"인수인계 승인 요청됨\",\n  \"actor\": \"ReceiverUser\",\n  \"level\": 13,\n  \"description\": \"인수자가 인수인계 결과에 대해 승인자에게 공식적인 승인 또는 반려 요청을 진행함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"요청 사유\"\n  ],\n  \"outputs\": [\n    \"승인 요청 내역\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalNotificationSent\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverApproved\",\n  \"displayName\": \"인수인계 승인됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 승인하여 최종 인수인계 절차를 완료함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"승인 의견\"\n  ],\n  \"outputs\": [\n    \"최종 승인 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"HandoverRejected\",\n  \"displayName\": \"인수인계 반려됨\",\n  \"actor\": \"ApproverUser\",\n  \"level\": 15,\n  \"description\": \"승인자가 인수인계 결과를 검토 후 반려 처리함.\",\n  \"inputs\": [\n    \"인수인계 결과\",\n    \"반려 사유\"\n  ],\n  \"outputs\": [\n    \"최종 반려 결과\"\n  ],\n  \"nextEvents\": [\n    \"HandoverApprovalResultNotified\"\n  ]\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\n```\n\n```sql\ncomment on column EXHR.IS_TAKEOVER_INFO.host_empcd\n  is '인계자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_hname\n  is '인계자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_emp_id\n  is '인계자 직원 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.host_s_empcd\n  is '인계자 상위직책자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_hname\n  is '인수자 이름';\ncomment on column EXHR.IS_TAKEOVER_INFO.t_empcd\n  is '인수자 사번';\ncomment on column EXHR.IS_TAKEOVER_INFO.com1\n  is '기본 업무 현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com2\n  is '인원현황,업무분장표 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com3\n  is '시설장비,비품,자재현황 여부 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com4\n  is '연도 목표, 예산 및 집행실적 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com5\n  is '영업 또는 프로젝트 진행 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com6\n  is '문서, 도서와 자료 현황 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com7\n  is '진행과 미결사항 (1:완료, 2: 해당없음)';\ncomment on column EXHR.IS_TAKEOVER_INFO.com8\n  is '기타';\ncomment on column EXHR.IS_TAKEOVER_INFO.status\n  is '인수인계 상태 (0 : 인계자 등록 / 1 : 인수자 확인 / 2 : 인수자 반려 / 3 : 최종 결재 완료 / 4 : 상급자 반려),IS_SY02(CODETP =''E630'')';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_send_id_h\n  is '메일발송 ID(From IS_ASSIGNMENT_MAIL_SEND_LOG.MAIL_SEND_ID_H), 값이 없을경우 발령무관 생성 인수인계 건';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_key\n  is '메일 로그 ID';\ncomment on column EXHR.IS_TAKEOVER_INFO.mail_msg\n  is '인수인계 View 생성용';\ncomment on column EXHR.IS_TAKEOVER_INFO.start_date\n  is '시작일';\ncomment on column EXHR.IS_TAKEOVER_INFO.end_date\n  is '종료일(최종결재시)';\ncomment on column EXHR.IS_TAKEOVER_INFO.takeover_detail\n  is '인수인계 상세 내용';\ncomment on column EXHR.IS_TAKEOVER_INFO.message_center_flag\n  is '메시지 센터 구분용(Y : 확인, N : 미확인)';\ncomment on column EXHR.IS_TAKEOVER_INFO.title\n  is '인수인계 제목';\ncomment on column EXHR.IS_TAKEOVER_INFO.reject_message\n  is '인수인계 반려 문구';\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### HandoverManagement-document-management\n- **Type**: Request/Response\n- **Direction**: sends to 문서관리(PBC) (document-management)\n- **Reason**: 문서관리(PBC)는 Generic Domain으로 별도 시스템(PBC)으로서 인수인계 관리가 필요할 때 직접 API 호출 방식으로 연동한다.\n- **Interaction Pattern**: 인수인계 상세 등록 시 문서 첨부 요청이 있으면 document-management PBC로 요청을 전송하여 문서를 저장/연동한다."
                    },
                    "UserOrganization": {
                        "structure": [
                            {
                                "aggregate": {
                                    "name": "User",
                                    "alias": "사용자"
                                },
                                "enumerations": [
                                    {
                                        "name": "UserStatus",
                                        "alias": "사용자 상태"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "CorporationReference",
                                        "alias": "법인 참조",
                                        "referencedAggregate": {
                                            "name": "Corporation",
                                            "alias": "법인"
                                        }
                                    },
                                    {
                                        "name": "RoleReference",
                                        "alias": "역할 참조",
                                        "referencedAggregate": {
                                            "name": "Role",
                                            "alias": "역할"
                                        }
                                    },
                                    {
                                        "name": "HRInfo",
                                        "alias": "인사 정보",
                                        "referencedAggregateName": ""
                                    }
                                ]
                            },
                            {
                                "aggregate": {
                                    "name": "Role",
                                    "alias": "역할"
                                },
                                "enumerations": [
                                    {
                                        "name": "RoleType",
                                        "alias": "역할 유형"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "MenuAuthorizationReference",
                                        "alias": "메뉴권한 참조",
                                        "referencedAggregate": {
                                            "name": "MenuAuthorization",
                                            "alias": "메뉴권한"
                                        }
                                    }
                                ]
                            },
                            {
                                "aggregate": {
                                    "name": "Corporation",
                                    "alias": "법인"
                                },
                                "enumerations": [],
                                "valueObjects": []
                            },
                            {
                                "aggregate": {
                                    "name": "MenuAuthorization",
                                    "alias": "메뉴권한"
                                },
                                "enumerations": [
                                    {
                                        "name": "MenuType",
                                        "alias": "메뉴 유형"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "MenuCodeReference",
                                        "alias": "메뉴코드 참조",
                                        "referencedAggregate": {
                                            "name": "MenuCode",
                                            "alias": "메뉴코드"
                                        }
                                    }
                                ]
                            },
                            {
                                "aggregate": {
                                    "name": "MenuCode",
                                    "alias": "메뉴코드"
                                },
                                "enumerations": [
                                    {
                                        "name": "CodeType",
                                        "alias": "코드 유형"
                                    }
                                ],
                                "valueObjects": []
                            }
                        ],
                        "pros": {
                            "cohesion": "사용자, 역할, 법인, 메뉴권한, 메뉴코드 등 각 도메인별 세부 책임이 Aggregate 단위로 명확히 분리된다.",
                            "coupling": "MenuAuthorization, MenuCode를 별도 Aggregate로 분리하여 역할, 권한 변경이 User/Role과 독립적으로 이뤄진다.",
                            "consistency": "권한/메뉴/코드 등 변경이 각각의 트랜잭션 경계 내에서 일관되게 보장된다.",
                            "encapsulation": "조직, 역할, 메뉴권한 등 각 도메인 규칙이 해당 Aggregate 내부에 은닉되어 유지된다.",
                            "complexity": "도메인 복잡도가 기능별로 분산되어 개별 로직 파악 및 유지보수 용이성이 높다.",
                            "independence": "Menu, Code 등 세부 관리 기능을 독립적으로 확장/변경/배포할 수 있다.",
                            "performance": "대규모 권한/코드 기반 조회, 변경 작업에서 병렬처리 및 확장성이 뛰어나다."
                        },
                        "cons": {
                            "cohesion": "Aggregate 수가 증가해 각 객체 간 참조 및 이벤트 설계가 복잡해진다.",
                            "coupling": "User-Role-MenuAuthorization-MenuCode 간 참조 체인이 길어질 수 있다.",
                            "consistency": "권한/메뉴/코드가 동시에 바뀌는 업무의 트랜잭션 일관성 보장이 상대적으로 복잡해진다.",
                            "encapsulation": "업무 전체 플로우에서 데이터 통합 관점의 은닉성이 감소할 수 있다.",
                            "complexity": "Aggregate 설계와 이벤트/동기화 로직이 복잡해져 전체적인 도메인 이해 난이도가 높아진다.",
                            "independence": "업무 특성상 권한-메뉴-코드 변경 이벤트가 상호 연동되어 완전 독립 개발/배포에 제한이 있다.",
                            "performance": "복합 조회 시 여러 Aggregate 조인 및 연속 참조로 인해 조회 성능이 저하될 수 있다."
                        },
                        "boundedContext": {
                            "name": "UserOrganization",
                            "alias": "사용자 및 조직 관리",
                            "displayName": "사용자 및 조직 관리",
                            "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                            "aggregates": [
                                {
                                    "name": "User",
                                    "alias": "사용자"
                                },
                                {
                                    "name": "Role",
                                    "alias": "역할"
                                },
                                {
                                    "name": "Corporation",
                                    "alias": "법인"
                                }
                            ],
                            "requirements": {
                                "userStory": "US-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.",
                                "ddl": "create table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );",
                                "event": "{\"name\":\"UserRoleRegistered\",\"displayName\":\"법인별 사용자 및 역할 등록됨\",\"actor\":\"SuperAdmin\",\"level\":22,\"description\":\"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\"inputs\":[\"법인 정보\",\"담당자 정보\",\"역할 정보\"],\"outputs\":[\"등록된 담당자/역할 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChanged\",\"displayName\":\"법인별 사용자 역할 변경됨\",\"actor\":\"SuperAdmin\",\"level\":23,\"description\":\"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\"inputs\":[\"변경 대상\",\"변경 내용\"],\"outputs\":[\"변경된 역할/담당자 내역\"],\"nextEvents\":[\"UserRoleChangeNotified\"]}\n{\"name\":\"UserRoleChangeNotified\",\"displayName\":\"법인별 사용자 역할 변경 알림 발송됨\",\"actor\":\"System\",\"level\":24,\"description\":\"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\"inputs\":[\"등록 또는 변경 내역\"],\"outputs\":[\"알림 메일 또는 메시지\"],\"nextEvents\":[]}\n{\"name\":\"AuthorizationConfigured\",\"displayName\":\"권한/메뉴/코드 설정됨\",\"actor\":\"SystemAdmin\",\"level\":25,\"description\":\"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\"inputs\":[\"사용자 정보\",\"권한/메뉴/코드 정보\"],\"outputs\":[\"설정된 권한/메뉴/코드\"],\"nextEvents\":[]}\n{\"name\":\"PersonalInfoSyncedWithHR\",\"displayName\":\"개인 정보가 HR 시스템과 동기화됨\",\"actor\":\"System\",\"level\":26,\"description\":\"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\"inputs\":[\"HR 시스템 데이터\",\"사용자 ID\"],\"outputs\":[\"최신 인사정보로 갱신\"],\"nextEvents\":[]}",
                                "eventNames": "HandOverInfoErrorReviewed, HandOverInfoCorrected, UserRoleRegistered, UserRoleChanged, AuthorizationConfigured, PersonalInfoSyncedWithHR 이벤트가 발생할 수 있어."
                            }
                        },
                        "description": "# Bounded Context Overview: UserOrganization (사용자 및 조직 관리)\n\n## Role\n법인별 사용자, 역할, 권한 및 코드, HR 연동을 통한 인사정보 동기화, 인계자/인수자 정보 관리와 조직 구조 등 업무 인수인계 프로세스를 지원하는 기본 인프라 기능을 제공한다.\n\n## Key Events\n- HandOverInfoErrorReviewed\n- HandOverInfoCorrected\n- UserRoleRegistered\n- UserRoleChanged\n- AuthorizationConfigured\n- PersonalInfoSyncedWithHR\n\n# Requirements\n\n## userStory\n\nUS-015\t사용자 관리 (법인별 관리자 현황 관리)\t슈퍼관리자 또는 시스템 관리자로서, 나는 각 법인별 인계, 인수, 결재 담당자 목록과 역할 정보를 조회 및 관리하여 각 법인의 인수인계 시스템 운영이 원활하게 유지되고, 책임 소재 및 사용자 변경 사항이 정확하게 반영될 수 있도록 하고 싶습니다.\n\nUS-016\t권한/메뉴/코드 관리\t시스템 관리자로서, 나는 사용자별 권한, 메뉴, 그리고 코드 정보를 설정 및 관리하여 시스템의 모든 기능에 대한 접근 제어와 화면 메뉴 구성이 명확하게 유지되고, 보안 및 운영 효율성이 보장될 수 있도록 하고 싶습니다.\n\nUS-017\t개인 정보 HR 연계\t모든 사용자로서, 나는 내 개인 인사정보(성명, 사번, 부서, 직책 등)가 HR 시스템과 자동으로 연계되어 주기적으로 업데이트 되기를 원합니다. 이를 통해 인수인계 시스템 상에 항상 최신 정보가 반영되어 업무 진행 중에 정보 불일치로 인한 오류를 예방할 수 있습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"UserRoleRegistered\",\n  \"displayName\": \"법인별 사용자 및 역할 등록됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 22,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 각 법인별 인계, 인수, 결재 담당자 및 역할 정보를 등록함.\",\n  \"inputs\": [\n    \"법인 정보\",\n    \"담당자 정보\",\n    \"역할 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 담당자/역할 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChanged\",\n  \"displayName\": \"법인별 사용자 역할 변경됨\",\n  \"actor\": \"SuperAdmin\",\n  \"level\": 23,\n  \"description\": \"슈퍼관리자 또는 시스템 관리자가 담당자 목록이나 역할 정보를 변경함.\",\n  \"inputs\": [\n    \"변경 대상\",\n    \"변경 내용\"\n  ],\n  \"outputs\": [\n    \"변경된 역할/담당자 내역\"\n  ],\n  \"nextEvents\": [\n    \"UserRoleChangeNotified\"\n  ]\n}\n```\n\n```json\n{\n  \"name\": \"UserRoleChangeNotified\",\n  \"displayName\": \"법인별 사용자 역할 변경 알림 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 24,\n  \"description\": \"시스템이 법인별 담당자/역할 등록 또는 변경 사실을 관련자에게 알림.\",\n  \"inputs\": [\n    \"등록 또는 변경 내역\"\n  ],\n  \"outputs\": [\n    \"알림 메일 또는 메시지\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"AuthorizationConfigured\",\n  \"displayName\": \"권한/메뉴/코드 설정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 25,\n  \"description\": \"시스템 관리자가 사용자별 권한, 메뉴, 코드 정보를 설정함.\",\n  \"inputs\": [\n    \"사용자 정보\",\n    \"권한/메뉴/코드 정보\"\n  ],\n  \"outputs\": [\n    \"설정된 권한/메뉴/코드\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"PersonalInfoSyncedWithHR\",\n  \"displayName\": \"개인 정보가 HR 시스템과 동기화됨\",\n  \"actor\": \"System\",\n  \"level\": 26,\n  \"description\": \"시스템이 HR 시스템과 연동하여 사용자(인계자/인수자)의 인사정보를 주기적으로 업데이트함.\",\n  \"inputs\": [\n    \"HR 시스템 데이터\",\n    \"사용자 ID\"\n  ],\n  \"outputs\": [\n    \"최신 인사정보로 갱신\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_TAKEOVER_INFO\n(\n  host_empcd          VARCHAR2(8),\n  host_hname          VARCHAR2(50),\n  host_emp_id         NUMBER,\n  host_s_empcd        NUMBER,\n  t_hname             VARCHAR2(50),\n  t_empcd             VARCHAR2(30),\n  com1                VARCHAR2(1),\n  com2                VARCHAR2(1),\n  com3                VARCHAR2(1),\n  com4                VARCHAR2(1),\n  com5                VARCHAR2(1),\n  com6                VARCHAR2(1),\n  com7                VARCHAR2(1),\n  com8                VARCHAR2(100),\n  status              VARCHAR2(1),\n  mail_send_id_h      NUMBER,\n  mail_key            VARCHAR2(30),\n  mail_msg            CLOB,\n  start_date          DATE,\n  end_date            DATE,\n  takeover_detail     VARCHAR2(3000),\n  message_center_flag VARCHAR2(1) default 'N',\n  title               VARCHAR2(200),\n  reject_message      VARCHAR2(200),\n  create_date         DATE,\n  create_by           VARCHAR2(8),\n  update_date         DATE,\n  update_by           VARCHAR2(8)\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 128K\n    next 128K\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG_D\n(\n  mail_send_id_h    NUMBER not null,\n  mail_send_id      NUMBER not null,\n  emp_id            NUMBER not null,\n  bal_section       VARCHAR2(100),\n  balgb             VARCHAR2(100),\n  description       VARCHAR2(3000),\n  baldate_from      DATE,\n  baldate_to        DATE,\n  last_update_date  DATE,\n  last_updated_by   NUMBER(15),\n  last_update_login NUMBER(15),\n  created_by        NUMBER(15),\n  creation_date     DATE\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\ntablespace EX_HR_DATA\n  pctfree 10\n  initrans 1\n  maxtrans 255\n  storage\n  (\n    initial 64K\n    next 1M\n    minextents 1\n    maxextents unlimited\n  );\n```\n\n\n## Context Relations\n\n### HandoverManagement-UserOrganization\n- **Type**: Pub/Sub\n- **Direction**: sends to 인수인계 관리 (HandoverManagement)\n- **Reason**: 사용자/조직/권한 등의 변경이 인수인계 관리에 영향을 미치지만, 두 컨텍스트가 업무적으로 독립적이며, 이벤트 구독 방식이 시스템 확장과 유연성에 유리하기 때문.\n- **Interaction Pattern**: 사용자/조직 정보 변경 이벤트를 인수인계 관리가 구독하여 최신 정보를 반영한다.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: sends to 커뮤니케이션 및 알림 (CommunicationNotification)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                    },
                    "CommunicationNotification": {
                        "structure": [
                            {
                                "aggregate": {
                                    "name": "Communication",
                                    "alias": "커뮤니케이션 통합"
                                },
                                "enumerations": [
                                    {
                                        "name": "GuideScope",
                                        "alias": "안내문구 적용범위"
                                    },
                                    {
                                        "name": "TemplateStage",
                                        "alias": "템플릿 적용단계"
                                    },
                                    {
                                        "name": "MailSendStatus",
                                        "alias": "메일 발송 상태"
                                    }
                                ],
                                "valueObjects": [
                                    {
                                        "name": "GuideInfo",
                                        "alias": "안내문구 정보",
                                        "referencedAggregateName": ""
                                    },
                                    {
                                        "name": "MailTemplateInfo",
                                        "alias": "이메일 템플릿 정보",
                                        "referencedAggregateName": ""
                                    },
                                    {
                                        "name": "MailSendRecord",
                                        "alias": "메일 발송 내역",
                                        "referencedAggregateName": ""
                                    },
                                    {
                                        "name": "RecipientReference",
                                        "alias": "수신자 참조",
                                        "referencedAggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        }
                                    },
                                    {
                                        "name": "SenderReference",
                                        "alias": "발신자 참조",
                                        "referencedAggregate": {
                                            "name": "User",
                                            "alias": "사용자"
                                        }
                                    },
                                    {
                                        "name": "RelatedHandoverProcessReference",
                                        "alias": "관련 인수인계 참조",
                                        "referencedAggregate": {
                                            "name": "HandoverProcess",
                                            "alias": "인수인계 프로세스"
                                        }
                                    }
                                ]
                            }
                        ],
                        "pros": {
                            "cohesion": "모든 커뮤니케이션 기능이 하나의 Aggregate로 묶여서 업무 전체 흐름과 상태를 한 번에 관리할 수 있습니다.",
                            "coupling": "내부에서 모든 연관정보를 관리하므로 외부와의 데이터 이동/변환 비용이 최소화됩니다.",
                            "consistency": "메일 발송, 템플릿, 안내문구 변경 등 전체 커뮤니케이션 업무가 하나의 트랜잭션으로 일관성 있게 처리됩니다.",
                            "encapsulation": "통합 Aggregate 내부에서 상태, 이력, 템플릿, 안내문구 규칙을 완전히 숨길 수 있습니다.",
                            "complexity": "통합적인 설계로 복잡한 워크플로우/업무 규칙 구현에 유리합니다.",
                            "independence": "한 Aggregate만 관리하면 되므로 배포·운영·변경이 단일 포인트로 집중됩니다.",
                            "performance": "단일 Aggregate 접근만으로 전체 커뮤니케이션 데이터를 일괄 조회할 수 있어, 단건 조회/수정이 빠릅니다."
                        },
                        "cons": {
                            "cohesion": "안내문구, 템플릿, 발송이력 등 서로 다른 라이프사이클과 담당 조직이 하나의 집합체로 묶여 응집도가 저하될 수 있습니다.",
                            "coupling": "업무 영역별로 확장/변경 시 전체 Aggregate가 영향을 받아 변경 비용이 급격히 증가합니다.",
                            "consistency": "동시 메일 발송, 템플릿/가이드 변경 등이 한 Aggregate 내에서 충돌/경합을 유발할 수 있습니다.",
                            "encapsulation": "업무별 분리된 규칙·정책의 변경이 Aggregate 전체 설계에 파급될 위험이 큽니다.",
                            "complexity": "Aggregate 내부 구조가 방대해져서 유지보수, 테스트, 장애 분석이 어려워집니다.",
                            "independence": "특정 커뮤니케이션 기능만 개별적으로 확장하거나 리팩토링하기가 어렵습니다.",
                            "performance": "동시성 많은 메일 발송·조회 시 큰 Aggregate가 병목을 유발할 수 있습니다."
                        },
                        "boundedContext": {
                            "name": "CommunicationNotification",
                            "alias": "커뮤니케이션 및 알림",
                            "displayName": "커뮤니케이션 및 알림",
                            "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다.",
                            "aggregates": [
                                {
                                    "name": "MailTemplate",
                                    "alias": "이메일 템플릿"
                                },
                                {
                                    "name": "Guide",
                                    "alias": "안내문구"
                                }
                            ],
                            "requirements": {
                                "userStory": "US-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.",
                                "ddl": "create table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';",
                                "event": "{\"name\":\"GuideRegistered\",\"displayName\":\"안내문구 등록됨\",\"actor\":\"SystemAdmin\",\"level\":17,\"description\":\"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\"inputs\":[\"가이드 문구\",\"적용 범위\"],\"outputs\":[\"등록된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"GuideModified\",\"displayName\":\"안내문구 수정됨\",\"actor\":\"SystemAdmin\",\"level\":18,\"description\":\"시스템 관리자가 기존 안내문구를 수정함.\",\"inputs\":[\"수정 대상 가이드\",\"수정 내용\"],\"outputs\":[\"수정된 가이드 정보\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateRegistered\",\"displayName\":\"이메일 템플릿 등록됨\",\"actor\":\"SystemAdmin\",\"level\":19,\"description\":\"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\"inputs\":[\"이메일 템플릿 내용\",\"적용 단계 정보\"],\"outputs\":[\"등록된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"MailTemplateModified\",\"displayName\":\"이메일 템플릿 수정됨\",\"actor\":\"SystemAdmin\",\"level\":20,\"description\":\"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\"inputs\":[\"수정 대상 템플릿\",\"수정 내용\"],\"outputs\":[\"수정된 이메일 템플릿\"],\"nextEvents\":[]}\n{\"name\":\"StageMailSent\",\"displayName\":\"업무 단계별 메일 발송됨\",\"actor\":\"System\",\"level\":21,\"description\":\"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\"inputs\":[\"업무 단계 이벤트\",\"메일 템플릿\"],\"outputs\":[\"발송된 이메일\",\"발송 이력\"],\"nextEvents\":[]}",
                                "eventNames": "GuideRegistered, GuideModified, MailTemplateRegistered, MailTemplateModified, StageMailSent 이벤트가 발생할 수 있어."
                            }
                        },
                        "description": "# Bounded Context Overview: CommunicationNotification (커뮤니케이션 및 알림)\n\n## Role\n업무 단계별 메일 자동 발송, 안내문구 및 메일 템플릿 관리 등 업무 관련 모든 커뮤니케이션과 알림 메시지 전송을 담당한다.\n\n## Key Events\n- GuideRegistered\n- GuideModified\n- MailTemplateRegistered\n- MailTemplateModified\n- StageMailSent\n\n# Requirements\n\n## userStory\n\nUS-012\t안내문구(가이드) 등록 관리\t시스템 관리자로서, 나는 안내문구(가이드)를 등록 및 수정하여 모든 사용자가 인수인계 시스템 사용 방법, 주의사항, 자주 묻는 질문(FAQ)을 쉽게 이해하고 참고할 수 있도록 하고 싶습니다. 이를 통해 사용자 혼란을 줄이고, 시스템 사용 효율을 높이고자 합니다.\n\nUS-013\tE-Mail 관리 (메일 발송 내역/정보, Mail문구 관리)\t시스템 관리자로서, 나는 인수인계 프로세스 단계(인계, 인수, 결재)에서 발송되는 이메일의 템플릿과 내역을 관리하여 모든 이메일이 일관된 문구와 정보로 전달되어 사용자 혼선 없이 업무 진행 상황을 정확하게 인지할 수 있도록 하고 싶습니다.\n\nUS-014\t단계별 메일 발송 (관리자 시스템 관리)\t시스템 관리자로서, 나는 업무 인수인계의 각 단계(등록, 승인 요청, 승인/반려, 결과 등록 등)에서 자동으로 정해진 이메일 템플릿을 사용해 담당자에게 알림 메일을 발송하도록 설정하여 각 업무 단계에 맞는 적시 알림이 전달되어 모든 관련자가 업무 진행 상황을 신속하게 인지할 수 있도록 하고 싶습니다.\n\n## Event\n\n```json\n{\n  \"name\": \"GuideRegistered\",\n  \"displayName\": \"안내문구 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 17,\n  \"description\": \"시스템 관리자가 안내문구(가이드)를 등록하여 시스템 사용 가이드를 제공함.\",\n  \"inputs\": [\n    \"가이드 문구\",\n    \"적용 범위\"\n  ],\n  \"outputs\": [\n    \"등록된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"GuideModified\",\n  \"displayName\": \"안내문구 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 18,\n  \"description\": \"시스템 관리자가 기존 안내문구를 수정함.\",\n  \"inputs\": [\n    \"수정 대상 가이드\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 가이드 정보\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateRegistered\",\n  \"displayName\": \"이메일 템플릿 등록됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 19,\n  \"description\": \"시스템 관리자가 이메일 템플릿을 신규로 등록함.\",\n  \"inputs\": [\n    \"이메일 템플릿 내용\",\n    \"적용 단계 정보\"\n  ],\n  \"outputs\": [\n    \"등록된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"MailTemplateModified\",\n  \"displayName\": \"이메일 템플릿 수정됨\",\n  \"actor\": \"SystemAdmin\",\n  \"level\": 20,\n  \"description\": \"시스템 관리자가 기존 이메일 템플릿을 수정함.\",\n  \"inputs\": [\n    \"수정 대상 템플릿\",\n    \"수정 내용\"\n  ],\n  \"outputs\": [\n    \"수정된 이메일 템플릿\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n```json\n{\n  \"name\": \"StageMailSent\",\n  \"displayName\": \"업무 단계별 메일 발송됨\",\n  \"actor\": \"System\",\n  \"level\": 21,\n  \"description\": \"시스템이 인수인계 각 단계(등록, 승인요청, 승인/반려, 결과 등록 등)에서 정해진 템플릿에 따라 관련자에게 자동 메일을 발송함.\",\n  \"inputs\": [\n    \"업무 단계 이벤트\",\n    \"메일 템플릿\"\n  ],\n  \"outputs\": [\n    \"발송된 이메일\",\n    \"발송 이력\"\n  ],\n  \"nextEvents\": []\n}\n```\n\n## DDL\n\n```sql\ncreate table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n(\n  mail_send_id_h        NUMBER not null,\n  ref_date              DATE not null,\n  emp_id                NUMBER not null,\n  email_id              VARCHAR2(300),\n  real_email_id         VARCHAR2(300),\n  mail_msg              CLOB,\n  mail_send_date        DATE,\n  mail_send_flag        VARCHAR2(1) default 'N',\n  description           VARCHAR2(1000),\n  mail_send_cancel_flag VARCHAR2(1) default 'N',\n  admin_cancel_flag     VARCHAR2(1) default 'N',\n  admin_cancel_date     DATE,\n  admin_cancel_emp_id   NUMBER,\n  balgb_desc            VARCHAR2(1000),\n  message_center_flag   VARCHAR2(1) default 'N',\n  last_update_date      DATE,\n  last_updated_by       NUMBER,\n  creation_date         DATE,\n  created_by            NUMBER,\n  last_update_login     NUMBER\n)\n\n```\n\n```sql\ncomment on table EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG\n  is '발령, 인수/인계 안내 메일발송 LOG';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_id_h\n  is '메일발송 ID, IS_PE31_MAIL_SEND_S.NEXTVAL';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.ref_date\n  is '메일발송 기준일자';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.emp_id\n  is '메일수신자 EMP_ID';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.email_id\n  is '수신자 이메일 주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.real_email_id\n  is '실제수신 이메일주소';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_msg\n  is '메일 메시지';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_date\n  is '메일발송일시';\n```\n\n```sql\ncomment on column EXHR.IS_ASSIGNMENT_MAIL_SEND_LOG.mail_send_flag\n  is '메일발송 완료 FLAG';\n```\n\n\n## Context Relations\n\n### HandoverManagement-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 인수인계 관리 (HandoverManagement)\n- **Reason**: 인수인계 프로세스 단계별로 알림/이메일 전송이 필요하며, 인수인계 관리 컨텍스트에서 발생한 이벤트를 커뮤니케이션 컨텍스트가 구독하여 처리함으로써 느슨한 결합이 가능하다.\n- **Interaction Pattern**: 인수인계 상태 변경, 결과 등록 등 이벤트가 발생하면 알림/이메일 발송 컨텍스트에서 자동 처리.\n\n### UserOrganization-CommunicationNotification\n- **Type**: Pub/Sub\n- **Direction**: receives from 사용자 및 조직 관리 (UserOrganization)\n- **Reason**: 조직/사용자/역할 정보 변경 시 메일/알림 관련 템플릿/설정이 업데이트되어야 하므로, 이벤트 기반 처리가 바람직하다.\n- **Interaction Pattern**: 사용자 및 역할 변경 시 관련 이벤트를 커뮤니케이션 및 알림 컨텍스트가 수신하여 템플릿/대상 정보를 갱신한다."
                    }
                }
            }
        ]
    }
}